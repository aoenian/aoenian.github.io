[{"title":"Windows10台式机无法发现蓝牙键盘","path":"/2023/01/07/20230107 电脑蓝牙无法发现键盘/","content":"这两天蓝牙键盘突然无法连接，然后重置了以后电脑的蓝牙连找都找不到了，幸亏键盘是双模，还有有线，不然太麻烦了。 今天网络搜索以后尝试了一个方法，具体如下： Windows10系统，找到设置——设备——蓝牙，然后重复点击蓝牙开关三次，滑动到页面最下端 点击 更多蓝牙选项——勾选允许蓝牙设备查找这台电脑 重启电脑，OK重新连接电脑能够搜索，原理我也不知道，就是这么神奇。 不过台式机USB蓝牙特别容易受影响，蓝牙键盘会突然延迟很高，但是无线依然很方便，而且蓝牙能和无线网卡集成在一起也能省下USB口。看自己的取舍了。","tags":["蓝牙"],"categories":["Windows"]},{"title":"Hexo博客Stellar主题配置","path":"/2022/11/20/20221120-Hexo博客Stellar主题配置/","content":"选择博客主题看了看自己的博客已经两年没更新了，最后一篇博文的时间是2020年9月，已经差不多两年多了，这两年多有大事，喜事，哈哈开心的事，这个后面慢慢说。 准备重启博客，主题选择困难症开始，原来的那个Next主题想换换，然后奈何自己能力有限，自己写不出来，不过在翻官方的主题时候发现了Stellar主题，相当不错，迫不及待要尝试一下。 安装主题主题的网站：https://xaoxuu.com/wiki/stellar/#start ，肯定选用最新版，新特性要用起来，作者给出的方法是在博客目录下添加主题子模块，不过我这边因为博客目录不是git目录没有成功，我是直接用的克隆的方法。 1234cd themes # 进入主题目录git clone https://github.com/xaoxuu/hexo-theme-stellar.git stellar # 把主题克隆下来# 修改博客目录下_config.yml中主题为 stellartheme: stellar 主题的基本配置这个主题的复杂程度和可定制性超出了我的预想，大部分主题都是简单更改一些文字和图片即可搞定，但是这个主题具有post、wiki两种大类型，同时还能够定制组件。 因为之前没有相应的经验，根据文档摸索了很久，下面是自己的一些摸索和理解，记录备忘。 站点配置配置文档地址：https://xaoxuu.com/wiki/stellar/theme-settings/ 这个比较简单，主要是站点的标题、副标题、logo、博客的简介、语言支持等（参照官方文档即可操作）配置文件是blog根目录下的 _config.yml 文件 12345678title: 您的网站名称avatar: 您的头像链接 # 配置如果文件中没有自行添加favicon: 您的网站icon# 多语言language: - zh-CN - en - zh-TW 主题配置在blog的根目录下创建一个主题配置文件 _config.stellar.yml，跟hexo站点配置文件 _config.yml 在同一个层级下。 Open Graph 头部标签自定义在分享时能够让你的博客链接显示更好看，建议打开 1234# 在 _config.stellar.yml 文件中open_graph: enable: true twitter_id: # for open_graph meta 文章配置文章分类我个人一般习惯每篇文章就一个分类，不过主题支持一篇文章多个分类，不过不建议这样操作。原因如下： 1234567891011# 我新建了两篇文章# 第一篇的分类---categories: [设计开发, ios] ---# 第二篇的分类---categories: ios---# 注意当你查看分类时会发现有两个ios分类，并不是一个# 点击ios分类并不会出现两篇文章 文章标签 标签两种设置方法都可以，看自己的习惯了 123456789---tags: [iOS, 心率]---# 标签重复没有问题---tags: - iOS - 心率--- 参考资料参考资料之前一般都习惯放在最后面，不过在stellar主题中，参考资料需要放在frontmatter中，但是显示在文章的最后，格式很漂亮。（当然也可以放在最后用普通的markdown标记） 12345678---references: - title: &#x27;心跳之旅—💗—iOS用手机摄像头检测心率(PPG)&#x27; url: https://punmy.cn/2016/07/28/15231176397746.html - title: &#x27;PPG光电容积脉搏波描记法技术概况&#x27; url: https://www.jianshu.com/p/695c131abfa5 ...--- 不过后来想想也是符合习惯的，当准备写文章的时候，基本参考资料也就定了，可以直接写上。 独立页面这个你可以用命令 hexo new page about 这种方式来新建关于页面，然后配置侧边栏以后就能看到。也可以直接source目录中新建，这里注意一般使用index.md来作为栏目的首页。 侧边栏配置很多博客配置完上面的内容基本就差不多了，但是这个主题才刚刚开始，更刺激的还在后面。 侧边栏的配置，主要就是组件的配置，作者开发了很多小组件，然后不同的页面使用者可以按需配置。 组件配置想启用的组件需要单独写一个配置文件，位置在 source/_data/widgets.yml 在这个文件中配置组件，然后才能在博客的页面中使用。 文档系统重要的是文档系统，这里面才能够让你的博客能够有多个项目和页面，刚开始我一直郁闷的就是这个地方。 文档系统主要是wiki，在博客的 source 目录下新建一个wiki目录，然后把所有的项目放在里面，每个项目单独一个目录，然后在目录里面进行内容编写，因为每个项目不可能只有一个md文件，所以需要在 _data 目录下新建一个项目配置文件 projects.yml 这样就能够对每个项目进行具体的配置。 后面的配置就不写了，因为这个主题的配置内容较多，还是建议直接看官方文档，写的非常详细，这里就不再多说了。","tags":["stellar","blog"],"categories":["Hexo"]},{"title":"Joplin笔记使用备忘","path":"/2022/11/19/20221119-Joplin笔记使用备忘/","content":"Joplin是啥Joplin简单对我来说现在只是一个markdown笔记本，用来写笔记用。切换路线从typora→vscode→vnote→Joplin，现在感觉可能要停留在Joplin一段时间了。感兴趣看看官网：https://joplinapp.org 记得GitHub上https://github.com/laurent22/joplin)加星哦。 设置方面Joplin是支持中文的，需要在设置中的语言里面切换。然后调整通用设置里面的日期格式，这个主要影响笔记模板中插入的时间（后面介绍）。 同步设置： 设置为Filesystem，不然你保存的时候总会提醒你用网盘同步。同步目录我就用的软件默认的路径。开始我以为这个是markdown文件的保存位置，然后修改了以后发现Joplin是用自己的数据格式保存，如果需要markdown格式的文件需要使用导出功能导出。那存在原来的隐藏目录位置就OK，用的时候导出。 我用onedrive进行了同步，这里有点问题就是网页登录的时候可能需要挂代理，然后登录以后我尝试关掉代理进行同步。速度可能会慢一点，但是没有问题，我也郁闷了为什么网页版就不让登录呢？ 其他方面根据需要来设置即可。 模板插件通过插件使软件支持笔记模板，在写hexo文章的时候就不用每次都敲入frontmatter数据。软件插件库链接不上，不过插件库的地址在 https://github.com/joplin/plugins/blob/master/README.md#plugins 可以自己选择下载，然后手动导入即可。 Templates插件插件仓库地址 https://github.com/joplin/plugin-templates 这里有插件的使用方法。有点跟其他软件的模板插件不太一样。 新建模板模板没有具体的位置要求，就是新建一个正常的笔记，只不过在完成以后打上 template 标签插件就会自动识别这个笔记为模板。 模板内置变量模板提供的内置变量不多，主要是时间方面，内置变量 &#123;&#123;date&#125;&#125; 这个就和前面软件设置的时间格式有关。这里的 &#123;&#123;#custom_datetime&#125;&#125; 变量可以自定义日期格式很方便。 模板自定义变量刚开始没看懂自定义变量的意思，后面测试后才明白，模板通过自定义变量还提供一定的窗口交互功能，有点意思。用我的hexo模板内容简单介绍一下。注意：自定义变量中的变量名与 &#123;&#123;&#125;&#125; 之间是有空格的 1234567891011121314151617181920# 上面这个frontmatter是用来设置变量的---# title 就是自定义的变量类型为文本，需要新建时用户输入title: text# tmplate_title是按照模板新建笔记的文件名# 我使用日期加标题 日期格式参考moment.jstemplate_title: &#123;&#123;#custom_datetime&#125;&#125;YYYYMMDD&#123;&#123;/custom_datetime&#125;&#125;-&#123;&#123; title &#125;&#125;---# 这个frontmatter用来显示在新建的笔记中---title：&#123;&#123; title &#125;&#125;date: &#123;&#123;date&#125;&#125;comments: truelayout: postcategories: tags: - --- outline插件能够在软件右侧显示markdown文件的标题目录，在写长文章的时候比较方便。 MacOS主题Windows下面的Joplin的字体和图标不是太漂亮，然后就想看看软件有没有其他主题，插件库还是有好几种主题插件，我试了几个最后觉得MacOS主题还挺好。 暂时写这么多，先用起来，内容为王，内容才是重要的。","tags":["joplin","template"],"categories":["markdown"]},{"title":"解决Ubuntu Server周期任务不执行问题","path":"/2020/09/13/crontab-error/","content":"想在树莓派中设定一个定时关机的命令，这样就不用每天晚上ssh进入关机了。不过晚上检查效果的时候发现没有执行。 查看日志这次就知道日志的重要性了，但是ubuntu默认没有打开crontab的日志记录，所以我们首先要做的是打开cron日志记录功能。 开启cron日志找到cron的日志配置文件，位置为 /etc/rsyslog.d/50-default.conf 使用编辑器编辑。 把配置文件中的 cron.* /var/log/cron.log 这一行代码注释掉，也就是让系统开启cron日志记录。 然后使用命令 sudo service rsyslog restart 重启系统日志 这时候就可以在 /var/log/cron.log 文件中查看周期命令的执行情况了。 出错原因查看日志后知道出错的原因，这里建议一定使用命令的绝对路径，这样才能正确执行，如果需要每分钟都执行，那么直接使用五个*号即可。 修改完成后即可重启cron服务，service cron restart 参考资料： 如何用crontab每隔1分钟执行一个命令行脚本 ubuntu打开crontab日志及不执行常见原因","tags":["cron","not work"],"categories":["Linux"]},{"title":"安卓手机访问树莓派samba文件共享出错解决","path":"/2020/09/12/android-samba-error/","content":"这段时间树莓派一直没有用，不过后来想想还是用起来，不然就浪费了，当然还是用做家庭的文件共享最好。 samba配置这个网上的配置很多，我在之前的博客中也记录过，这里我用的是ubuntu server。因为用习惯了，方便。 配置过程就不多说了。看以看看这个 samba文件共享 局域网访问pc平台这个没啥问题，Windows直接使用 \\\\树莓派ip地址 就可以看到共享的文件夹。 mac稍微麻烦一点，打开finder然后点击前往-连接服务器-在里面填写 smb:&#x2F;&#x2F;192.168.3.50 -点击连接-如果你设置的是匿名登录的话。连接身份选择客人，然后连接即可看到共享。 Android平台这个就麻烦了，之前用的是es文件浏览器，但是现在不行了，局域网能够扫描出来，但访问的时候没有反应。搞了半天也不知道为什么。 换了一个软件，googleplay里面的，这次也推荐大家使用，比国内的文件管理好用多了。名字是x-plore，大家可以用用试试。 使用x-plore这个软件，直接 LAN-添加服务器-输入服务器ip-用户密码留空 保存 访问。不过费劲的问题是，虽然这个软件能看到局域网的共享，访问也是出现错误，然后按照常规的想法试了一些配置，重启软件，不过都不行。这里得到一个教训就是日志文件很重要，很多时候看看日志就知道了，而不是不断的查看网络的一些不靠谱的答案。 samba软件的日志文件位置为 /var/log/samba/log。日志的错误内容如下： 12Bad SMB2 signature for messagethis client does not support the negotiated dialect 然后解决的方法就是增加samba支持的协议，在配置文件中（&#x2F;etc&#x2F;samba&#x2F;smb.conf)增加 min protocol = LANMAN2 配置。 没有苹果手机，所以就没测试ios。 参考资料： SMB connection to Samba v4.11.6 totally fails SMB1 is disabled by default Can’t connect via LAN plugin","tags":["samba","error"],"categories":["Android"]},{"title":"更新node后hexo填坑记录","path":"/2020/07/27/node-update-hexo-error/","content":"起因是使用brew更新了系统的软件，然后问题就接二连三的出现了，这里记录一下填坑过程。 更换brew源使用brew安装软件的时候总是一直卡在更新，原因大家都知道，所以就想着把源更换了。 用了中科大的源，地址如下 替换及重置Homebrew默认源 Homebrew Bottles源 不想跳转的可以看下面的摘录： 123456789101112131415161718192021222324252627# 替换及重置Homebrew默认源# 替换brew.git:cd &quot;$(brew --repo)&quot;git remote set-url origin https://mirrors.ustc.edu.cn/brew.git# 替换homebrew-core.git:cd &quot;$(brew --repo)/Library/Taps/homebrew/homebrew-core&quot;git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git# 却换回官方源# 重置brew.git:cd &quot;$(brew --repo)&quot;git remote set-url origin https://github.com/Homebrew/brew.git# 重置homebrew-core.git:cd &quot;$(brew --repo)/Library/Taps/homebrew/homebrew-core&quot;git remote set-url origin https://github.com/Homebrew/homebrew-core.git# Homebrew Bottles源# bash用户echo &#x27;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&#x27; &gt;&gt; ~/.bash_profilesource ~/.bash_profile# zsh用户echo &#x27;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&#x27; &gt;&gt; ~/.zshrcsource ~/.zshrc# Homebrew Bottles源切换回官方# 注释掉bash配置文件里的有关Homebrew Bottles即可# 重启bash或让bash重读配置文件 hexo s启动服务器出错切换了brew的源以后，测试了更新，速度快多了，但是没等更新完成我就直接中断了。我怀疑就是这个问题，然后我在启动服务器时出现错误，类似下面这种，还提示node什么的。 1TypeError [ERR_INVALID_ARG_TYPE]: The &quot;mode&quot; argument must be integer. Received an instance of Object 然后我就怀疑可能是node出问题，我尝试了执行 node 命令查看版本，发现命令执行失败了，然后确定了就是更新的时候中断造成。 更新node更新了brew源以后直接更新了node，但是提示node已经安装且为最新，看来使用更新不行了，重装一遍吧 执行命令 brew intall node ，安装完成测试了node版本也正常输出，这次应该没事了吧 然后再次执行依然出问题，这次搜索了以后发现可能是hexo的版本太老配不上node14，因为安装hexo后一直就没更新过，所以用的还是3版本，然后更新呗。 更新hexo没想到的是npm更新包其实挺麻烦和正常的思路不是太一样，我直接使用 npm update 并没有自己想象的那样。 还得搜索，找到一个国外的博主写的更新方式，比较靠谱，操作如下： 找到你的hexo的目录，就是你使用hexo init 初始化的那个目录 找到里面的 package.json 文件 使用vscode打开，然后找到里面 “dependencies” 后面大括号里面的 &quot;hexo&quot;: &quot;^3.9.0&quot; 把里面的版本号3.9.0更改为现在的新的版本号，我更新的是 4.2.1 文件里面的这个不用更改 123&quot;hexo&quot;: &#123; &quot;version&quot;: &quot;4.2.1&quot; #这个不用更改 &#125;, 我刚开始就是改的这里，然后没有效果，我还以为是博主写错了呢。 更改保存后执行 npm update hexo d部署出错生活就是这么艰难，部署又出错了，我都无语了。出错如下： 12[proxychains] config file found: /usr/local/etc/proxychains.conf[proxychains] preloading /usr/local/Cellar/proxychains-ng/4.14/lib/libproxychains4.dylib 网上搜索以后发现问题还是版本的问题，这次是因为node版本太高，f**k。只能再安装一个低版本，一般选择最新的稳定版就可以。 安装多版本的node方法很多，我这里用的node的版本管理模块n，操作如下 123456789101112# 安装管理模块sudo npm sudo npm install n -g# 安装稳定版sudo n stable# 安装最新版sudo n latest# 查看所安装版本n# 选择使用的版本sudo n 版本号# 帮助n -h 参考博文： How to Update Hexo? 部署Hexo踩过的坑—node14.0配置hexo 安装更高版本的node后怎么安装低版本的？","tags":["typeError","proxychains"],"categories":["Hexo"]},{"title":"三校生考试介绍","path":"/2020/07/04/sanxiao/","content":"这篇文章是邀请 apecode 撰写，目的很简单为了让有意愿报考三校生的同学对这个考试有一个系统的了解。 说在前面的一些话一些逆耳之言如果你觉得学习用处不大，学历不重要，觉得不需要学历来证明自己，通过能力就能让别人认可你，那么这篇文章可能不是你想要的。还有一个忠告，如果一个人告诉你某些东西不重要，那么大概率的不是那个东西真的不重要，而是他已经拥有。 要对自己负责招生、考试和政策都有时效性，去年能用的不一定今年就能用，你要对自己的前途负责，本文只是给大家介绍一下三校生的一些常见问题，让大家对这个考试有一个大概的了解，不作为大家复习或者报考的指导。 因为三校生的招生和录取每个省份都不相同，同时网络上几乎没有官方文件和官方网站解释，大部分都是互相复制。如果你有无法确定的地方，请一定向当地的教育部门或者你要报考的院校进行咨询，这才是一个正确的考试态度。不要把自己的前途压在别人的身上。 如果文章中有错误的地方或者你有更新更准确的信息欢迎留言或者发邮件给我。这样也许能够帮助更多的人。谢谢！！ 大家要善用搜索，废话少说，进入正题 简单的流程说明 是否符合招生考试的条件 是否有决心想考 确定好自己的专业 决定好要考哪一所学校 找一个好的培训机构 如何报名 单招 参加高考 等待录取 三校生招生考试条件这个主题的信息摘录自互联网，如大家有特殊情况，请一定去教育部门确认，切记。 什么是三校生1.生源不一样。三校生来自职高、技校、中专，普高生都是高中生或社会青年。 2.报考专业不一样。三校生有专业限制，必须与原专业相同或相近。统招只有文理限制，比三校生专业选择宽。三校生参加对口招生大专毕业后和普通大专一样。毕业后都有报到证。高中生考普高容易，三校生考对口招生难。三校生专业有限制，地区不限制，可以考外省的学校，只要他在你省有招生计划。 3.三校生还可以报名参加普通高考，但在三校生高考与普通高考中只能任选一样，这里还有一个限制好像只能是应届毕业生参加，如果是往届生请确认是否能够参加。 4.三校生考的大专与普高生考的大专是一样的，学习也是在一起的，没有任何区别，毕业文凭也是一样的。 报名资格符合下列条件的人员，可以申请报名： 1、遵守中华人民共和国宪法和法律； 2、高级中等教育学校毕业或具有同等学力； 3、符合正常报考条件或随迁子女接受义务教育后在云南参加升学考试条件（详见云招考〔2013〕6号文件）； 4、身体健康。 无法报名的情况1、具有高等学历教育资格的普通高等学校在校生； 2、高级中等教育学校非应届毕业的在校生； 3、违反教育部33号令所列规定不符参加报考的； 4、因触犯刑法已被有关部门采取强制措施或正在服刑者； 5、普通高中毕业生未取得《云南省中学生体育标准合格证》者，残障考生除外。 考试内容考试科目 &gt;&gt;&gt; 语文（120分） &gt;&gt;&gt; 数学（100分） &gt;&gt;&gt; 英语（100分） &gt;&gt;&gt; 政治（100分） &gt;&gt;&gt; 专业考试一科（300分） 专业课类别 护理类、药学类、医学类、教育类、机械类、电工电子技术类、经济管理类、建筑工程类、计算机类、农林类、交通运输类、自动化类、国土资源类、外语类、烹饪类、生物化学类、艺术类、体育类、旅游类、包装印刷类护理类、药学类、医学类、教育类、机械类、电工电子技术类、经济管理类、建筑工程类、计算机类、农林类、交通运输类、自动化类、国土资源类、外语类、烹饪类、生物化学类、艺术类、体育类、旅游类、包装印刷类 注意: 这个专业课要选自己喜欢的专业，毕竟专业分很重要，如果文化课考的不怎么好，但是你专业分考的高，就有可能扭转全局 计算机专业考试是在昆明冶金考，护理专业是在昆明学院考，其他专业的请自行了解 教材教材可以在淘宝上买 (可能有买) 或者可以去培训机、新华书店等渠道购买 就差不多长这样，每年都会换颜色，价格我就不知道了，也不会太贵 如何选择培训机构这个要根据自己的情况来决定，就像健身如果你的自学能力和自律能力都很强那么就可以自己完成。当然复习报名等各个阶段都需要你自己来操心处理。如果感觉一个人自学比较困难，那可以考虑选择一个培训机构。 培训机构大家也要选好了，毕竟老师很重要，培训机构这里就不说了，大家自行判断。 报名时间和方式一般都是每年的11月15号到25号报名，再次提醒：大家一定要自己确认，错过报名时间，那么一年的努力就全部白费了。 现场确认地点在常住户籍所在地的县（市、区）招生考试机构、学籍所在学校设立的报名确认点进行现场确认。 这个确认点的意思是：你报名的时候要去签字，你考完试的时候确认志愿也要去签字，一般在教育局，但是部分是在自己原先所在的学校确认 网上报名手续登录网址 http://work.ynzs.cn/ZSGL/login.jsp 或直接百度输入“云南省招生考试工作网），在用户类别处选择“三校生”进入报名。 报名后按规定的时间到户籍所在地县（市、区）招生考试机构指定的报名点办理确认手续；确认时须本人携带二代身份证原件、户口簿、学历证明等材料进行资格审查，报名确认点照相和报名信息确认。 注意: 注册完后，账号密码要记住，不然很麻烦 以下是操作流程（现在不用注册，等到通知可以注册报名的时候再注册） 到时候说可以注册的时候，云南招生考试网也会发报名流程的，这里知识给大家一个简单的示例 关于单招单招就是学校会在统一的三校生高考之前组织一次学校主导的单独招生，一般会有技能考试和面试。下面以计算机专业冶金的单招为例介绍，计算机专业的单招有两个部分，计算机操作考试和面试，要计算机操作考试通过了才能继续面试，如果单招过了，那就等着录取通知书就行了，就不用再参加统一的三校生高考。 很重要：单招是以学校为主导，为了自己负责，请一定咨询你的报考院校如何安排，一般在相应的院校的官方网站的招生就业专栏中就有详细的介绍，同时大家也要问清楚单招通过后是否还需要参加统一三校生高考。 高考加分政策根据三校生相应加分政策，计算机等级证书加分初级证书加10分，中级证书15分，高级证书加分20分。各种专业技术等级证书根据级别相应的享受加分政策。 所以在学校里最好是能考一个证书，等教育局通知要证书的时候就拿着去，最好在证书审核的过程再次向工作人员或报考学校确认是否能够加分。 报考院校(摘录自互联网)每年大概差不多，但也会有区别，还是要靠大家自己确认。 本科5323 昆明理工大学 5308 云南师范大学 5313 红河学院 5314 云南财经大学 5315 云南艺术学院 5331 云南经济管理学院 5338 云南大学旅游文化学院高职专科院校 5387 昆明学院 53D5 滇西应用技术大学 专科5303 云南农业大学 5311 普洱学院 5320 文山学院 5321 昆明冶金高等专科学校 5324 云南国土资源职业院 5325 云南交通职业技术学院 5326 昆明工业职业技术学院 5327 云南农业职业技术学院 5329 云南文化艺术职业学院 5330 云南体育运动职业技术学院 5331 云南经济管理学院 5332 云南科技信息职业学院 5333 西双版纳职业技术学院 5334 昆明艺术职业学院 5335 玉溪农业职业技术学院 5336 云南能源职业技术学院 5345 云南国防工业职业技术学院 5346 云南机电职业技术学院 5347 云南林业职业技术学院 5348 云南城市建设职业学院 5349 云南工程职业学院 5350 云南工程学院 5351 曲靖医学高等专科学校 5352 楚雄医药高等专科学校 5353 保山中医药高等专科学院 5354 丽江师范高等专科学校 5355 德宏师范高等专科学校 5356 云南新兴职业学院 5357 云南锡业职业技术学院 5358 滇西科技师范学院 5360 昆明卫生职业学院 5362 云南旅游职业学院 5376 大理农林职业技术学院 5377 云南财经职业学院 5378 云南医药健康职业学院 5381 云南轻纺职业学院 5388 云南经贸外事职业学院 5391 云南三鑫职业技术学院 5392 德宏职业学院 53D1 德宏职业学院 5394 云南商务职业学院 5399 云南外事外语职业学院 53A0 云南水利水电职业学院 53A2 昭通卫生职业学院 53A3 大理护理职业学院 53A5 云南理工职业学院 53D2 云南特殊教育职业学院 53D3 云南工贸职业技术学院 53D4 云南交通运输职业学院 注意：以上学校只是给大家作为参考，更多的内容，比如学校招收的专业这些的，报志愿的时候教育局有卖一本书，里面写着能报考的学校，还有招收的专业等等… 有些三校生QQ群也有人发，可以先看看作为参考 写在最后以上内容，如果报了培训机构，他们会告诉你怎么做，但还是自己了解了解比较好，多查查贴吧、QQ群，多咨询相关的工作人员，不要怕，注意礼貌。 备考是一个漫长的过程，很多时候你坚持下来走进考场的时候已经战胜了很多人，心平气和的完成考试又是一个胜利，相信努力会有收获，相信时间的力量。最后祝大家学业有成！","tags":["复习","报名"],"categories":["杂谈"]},{"title":"网络视频下载方法记录","path":"/2020/06/14/video-download/","content":"现在基本不在网上看视频，主要因为电脑屏幕太小，同时也因为自己看的基本主流媒体都没有，属于非主流，主流上有的又不太感兴趣。不过有时在网上看到的好玩的视频想下载下来，却发现厂商保护视频地址的能力真的太强（有这技术没有想想如何用到改善用户体验上）。所以把这段时间用过的一些下载视频的方法记录一下，以备后用。 软件方法常见的一些比较出名的软件，维棠下载，硕鼠下载，以前用过，但是因为比较出名所以树大招风感觉现在能下载多网站越来越少，现在已经很少用了，而且也基本不更新了。 想搞定大部分网站那么就需要稍微麻烦一点，使用 you-get 没想到这个一直在更新，果然有技术还是厉害，官网我这里访问不了，不过github的项目地址可以访问，都一样。 如果点开上面的那个项目你一脸问号，这里推荐一个浏览器：星愿浏览器 我基本就是用来下载常见网站的视频 如 哔哩哔哩，不过那些门户视频网站依然搞不定。 插件方法chrome的大部分视频下载插件基本都没有用，如果需要下载m3u8类型的可以尝试stream-recorder-download 这款插件 网站方法基本这种方法是现在比较主流的方法了，给大家推荐几个网站，主要是下载国外的视频，是否能访问还和你的网络有关（有时候注意DNS的问题）。 https://www.savido.net/ https://www.tubeoffline.com/index.php 感觉现在视频下载是越来越难，其实有时候还不如录屏来的快。当然如果是电影或者电视剧，那直接找资源吧，不要跟视频网站对着耗。 最简单的办法就是多看点书，少看点视频。","tags":["m3u8","flv"],"categories":["Net"]},{"title":"天下没有不散的宴席","path":"/2020/05/15/10086/","content":"她上午的时候给我电话了，用的是一个我不知道的号码，本以为又是那种推销电话，可是鬼使神差的居然接了，看来缘分这个东西真的很奇妙。 接起来以后就直接拒绝，就这样，准备好了说辞。先客气的答了一声，然后对方熟悉的声音从听筒中传来，整个人突然就愣住了。本来准备好的拒绝的话语全都无法说出口，大脑短暂的空白后回忆像后浪般翻滚而来。那是我们以前美好的回忆，本以为时间能磨平一切，现在看来随着时间的流逝，只是让那些回忆变得更加清晰。 记得初次见面的时候，正值傍晚，橘红色的阳光斜射入宽敞的大厅中，虽然路上一直赶时间，但到达的时候还是比较晚了，但是你温柔的态度，没有丝毫抱怨的微笑让我再一次坚定了自己的选择是无比正确的。通过短暂的交谈认识了彼此，同时也开启了我们长达5年的恩怨纠葛。这段时间中虽然联系不多，但每次重要的通知都不会错过，重要的节日经常会提醒我，同时还友好的提醒我直面自己的财务问题… “先生，你好” 一句熟悉的问候把我从回忆中拉回 “你好” “我们后台收到了您发送的携号转网查询信息，请问您是有转网的需求吗？” “是的” “不好意思，能否请问一下您转网的意向是联通还是电信呢？” “电信” “那能否询问一下您转网的原因？” “号码只接收短信，换个便宜的套餐” “我们也有便宜的套餐，每个月只需要8元，没有其他费用，直接去营业厅就可以办理。” “那我考虑一下” “好的，不好意思打扰您了，祝您生活愉快！” 挂了电话以后，我决定不再携号转网了，直接把这个号码注销掉，然后再去电信办一个新的。","tags":["10086","10000"],"categories":["杂谈"]},{"title":"树莓派下载百度云盘文件","path":"/2020/05/10/rasp-baidupan/","content":"树莓派又闲置了一段时间，然后现在再次学习linux，这次不能一知半解，要学进去，把之前的一些盲点给补充起来。然后就装了ubuntuserver，用着挺不错。 然后前段时间pandownload的作者被抓了，原因大家都知道，不过因为百度依然是国内最受欢迎的云盘，不花钱也只能忍受这个速度，然而呢总是用电脑下载的话太费电了。就想起来使用树莓派，网络一搜果然已经有大神把轮子造好了，直接使用就ok。下面简单记录配置过程。 项目选择在搜索中发现了两个项目，项目地址和使用测试如下 https://github.com/liuzhuoling2011/baidupcs-web 这个是web界面好操作，别看学linux，我也不想麻烦，鼠标点点就行也懒得整别的。不过致命的问题是无法登录，这个好像作者一直没有解决，咱们能力有限，只能另寻他法 https://github.com/houtianze/bypy 使用命令行界面，基于python编写，功能全面，就他了。（看来命令行还是比较好处理，个人观点） 环境配置 设置utf8，按照官方给出的链接，我设置了en_US.utf-8 不过系统依然还是显示 C.utf-8，后面证实不影响使用，感觉应该是 UTF-8 即可 安装pip3, 执行如下命令sudo apt install python3-pip 安装bypy，执行如下命令sudo pip3 install bypy 这里如果用普通用户权限安装，完成后找不到命令。 整个配置过程没有出现问题，直接无脑执行命令安装即可，什么时候能够像这种高手一样开发出这么厉害的程序。 网盘配置 绑定网盘。 执行命令bypy info，根据提示访问给出的网页，然后输入网页中出现的百度授权码回车即可。 把需要下载的文件放在 我的应用数据-bypy中即可下载 常用命令 12345bypy help &lt;command&gt; # 帮助bypy list # 列出文件列表bypy syncup 或 bypy upload # 上传到云盘bypy syncdown 或 bypy downdir / # 下载到本地bypy compare # 比较当前目录和云盘","tags":["pan","bypy"],"categories":["Raspberry Pi"]},{"title":"树莓派安装UbuntuServer并设置Samba共享","path":"/2020/05/08/rasp-ubuntuserver-samba/","content":"用来用去还是感觉Ubuntu省心，很多配置没那么复杂，有时候也觉得自己挺可笑的，有时候连基本的应用都还没熟练，还去考虑哪个系统稳定，简直操心太多。 这篇文章记录树莓派安装Ubuntu Server并配置文件共享的过程。 ubuntu Server安装软硬件准备 ubuntuserver镜像（我没安装图形界面的，个人觉得不需要）网址：https://ubuntu.com/download/raspberry-pi 这里我用的是20.04 64位 Raspberry Pi 3B + Micro SD卡 烧录软件：balenaEtcher 这个挺好用网址 https://www.balena.io/etcher/ 烧录可以参考官方教程：https://ubuntu.com/tutorials/how-to-install-ubuntu-on-your-raspberry-pi#1-overview 启用ssh在烧录以后把卡插入树莓派中即可启动，因为不想再插入键盘和鼠标进行设置，所以需要在系统中启用远程ssh。启动方法：在根目录下新建一个空白文件名字为ssh即可，无需后缀。 ssh连接树莓派通过路由器知道你的树莓派的IP地址（最好用路由给PI分配一个固定的IP），然后直接输入以下命令进行连接： 1234# ubuntuserver的默认用户名和密码都是 ubuntu# 第一次登录会让你修改# mac和windows10的powershellssh ubuntu@&lt;raspberrypi IP address&gt; 注意：如果你的电脑之前连接过树莓派可能需要删除之前的密钥重新连接才能继续。 samba软件安装设置安装samba建议安装前更换官方的软件源，因为真的太慢了。详细的可以参考中科大的帮助文件，地址http://mirrors.ustc.edu.cn/help/ubuntu.html 123456# 更换源 记得备份原来的sudo sed -i &#x27;s/ports.ubuntu.com/mirrors.ustc.edu.cn/g&#x27; /etc/apt/sources.list# 更新软件源和软件sudo apt update &amp;&amp; sudo apt upgrade -y# 安装sambasudo apt install samba smbclient samba-common 修改smb.conf依然记得首先要备份，然后再修改，这里设置两种共享，一种加密，另一种不加密。配置文件的位置 /etc/samba/smb.conf。 注：不建议在&#x2F;tmp目录下使用，因为重启后会自动清空。如需更改请查看文末的链接资料 12345678910111213141516171819202122232425# 不加密的共享目录 仅做测试用，建议更换目录[temp] # 显示的名称 comment = Temporary file space # 说明 path = /tmp/share # 共享目录的位置，记得权限全部开放才能读写 read only = no # 是否只读 browseable = yes # 可以浏览 guest ok = yes # 允许访客访问# 保存退出后使用下面命令检测配置testparm # 检测配置文件sudo service smbd restart # 重启服务# 加密目录设置 这个也是在 smb.conf 中配置[share] comment = home files share path = /home/share read only = no browsable = yes# 配置完成后保存退出，命令检测如上所示# 增加能够访问共享的用户，需要添加系统已存在的用户# username可以用ubuntu替换，会提示设置密码，这个是访问共享的密码sudo smbpasswd -a username# 完事收工 遇到的问题主要是mac系统访问出现问题，访问加密目录的时候出现如下提示The operation can&#39;t be completed because the original item for &quot;share&quot; can&#39;t be found. 解决方法是打开finder，快捷键command+k，也就是连接服务器，然后输入 smb://PI&#39;sIP即可。因为mac默认使用的是AFP协议。 参考资料： http://linux.vbird.org/linux_server/0370samba.php#theory_daemons 官方的指南 https://raspberrypi.stackexchange.com/questions/58185/how-do-i-share-files-with-a-mac https://stackoverflow.com/questions/13669585/how-to-get-a-list-of-all-valid-ip-addresses-in-a-local-network https://askubuntu.com/questions/625455/why-is-tmp-getting-cleaned-out-in-ubuntu-15-04","tags":["ubuntu","密码共享"],"categories":["Raspberry Pi"]},{"title":"linux命令中的一些冷操作1","path":"/2020/05/03/linux-command-1/","content":"在学习linux的基本命令的过程中遇到了一些问题，有些是按照教程执行没有效果，有些是心血来潮猜测是否能够有其他的操作，这里把这些结果记录下来，避免遗忘后重复搜索，浪费时间。 合并多个文本这个比较简单的，使用cat命令即可完成，不过之前没有想到，这里还能够使用通配符，能够一次合并多个文件。 举个例子： cat file*.txt &gt; fileall.txt 当然要先根据内容把文件重命名，做好排序。 windows下分两种情况（系统是windows10）： cmd中命令使用都没问题 12345# 使用copy命令copy *.txt all.txtcopy 1.txt + 2.txt + 3.txt all.txt# 使用type命令type *.txt &gt; all.txt powershell中则比较复杂 12345678# copy命令的问题copy *.txt all.txt # 只能复制最后文件的内容copy 1.txt + 2.txt + 3.txt all.txt # 路径问题命令出错# type命令# 这个命令会无限循环把all.txt中内容再次加入all.txt中type *.txt &gt; all.txt# 可以采用不同的后缀避免type *.txt &gt; all # 这样就可以了 date命令无法修改日期在练习date命令的时候，发现无法修改系统的日期（root也不行），但是教程上是可以的。搜索后发现应该是开启ntp的原因。可以通过下面的命令来处理。 123456# 关闭ntp，0替换为false也可sudo timedatectl set-ntp 0# 直接用timedatectl命令修改或用date修改都可timedatectl set-time &quot;2020-05-01 18:18:08&quot;timedatectl set-timezone Erope/Paristimedatectl set-local-rtc 0 软链接学习软链接命令的时候突然想起来的，看代码吧，不好说清楚 123456789101112$ touch file$ ln -s file filesoft$ echo &quot;hello&quot; &gt; filesoft # 链接没问题，内容直接写入file$ cat filehello$ mv file file1$ echo &quot;world&quot; &gt; filesoft # 链接失效，系统自动创建file并写入$ lsfile file1 filesoft$ cat file file1worldhello 结论：软链接失效后，如果链接的是文件则系统会自动重建，如果是目录则提示No such file or directory dd命令硬盘测试网络上很多，这里记录一下 1234# 测试写入速度time dd if=/dev/zero of=/tmp/test1.img bs=128M count=8 oflag=dsync# 读取速度time dd if=/path/to/bigfile of=/dev/null bs=8k 这里注意dev目录下的四个特殊设备，内容摘自 Linux中的虚拟设备 1234567891011121314151617# /dev/null 空设备，一般称为黑洞，输入这里的数据直接丢弃find / -name &quot;hello&quot; 2&gt; /dev/null#将标准输出和错误输出重定向到/dev/null，运行这个脚本不会输出任何信息到终端$ ./run.sh 1&gt;/dev/null 2&gt;&amp;1 # /dev/zero 零设备，可以无限的提供空字符（0x00，ASCII代码NUL）# 能够生成指定大小文件dd if=/dev/zero of=/tmp/100Mfile bs=1M count=100# /dev/urandom /dev/random# 随机数设备，提供不间断的随机字节流# /dev/random产生随机数据依赖系统中断,产生数据速度较慢，但随机性好# /dev/urandom不依赖系统中断，数据产生速度快，但随机性较低cat /dev/random | od -xcat /dev/urandom | od -x | head -n 5# 利用/dev/urandom设备产生一个128位的随机字符串str=$(cat /dev/urandom | od -x | tr -d &#x27; &#x27; | head -n 1)echo $&#123;str:7&#125;17539187d2e8b8e26d49bec90465c14d paste命令如何使用多个分隔符paste命令在合并文件的时候使用多个分隔符，这个应该是无法直接实现，利用其他方法 1234# 使用sed命令替换paste -d &#x27;~&#x27; file1 file2 | sed &#x27;s/~/,,/&#x27;# 使用 /dev/null 作为承接 脑洞很大paste -d, file1 /dev/null file2 find的exec和xargsfind很强大，里面的exec选项能够让find更加如虎添翼，-exec 参数后跟command，为了保证shell解释正确使用 \\; 结束命令。同时&#123;&#125;代表find查出来的结果，有时避免shell过滤也使用&#39;&#123;&#125;&#39;。 xargs则常与find结合使用来避免-exec选项出现的参数溢出的问题。xargs能够捕获一个命令的输出，然后传递给另外一个命令，由于很多命令不支持使用管道来传递参数，即不支持从标准输出中读取数据，所以xargs很常用。 123456789find / -name &#x27;bash*&#x27; -exec mv &#123;&#125; /tmp \\;find / -empty | xargs rm -rf# 实现比较# print选项把查找结果的文件名显示出来find ./ -type f -name &quot;*.sh&quot; -exec grep &quot;root&quot; &#123;&#125; \\; -print# xargs显示的信息比较全find ./ -type f -name &quot;*.sh&quot; | xargs grep &quot;root&quot;# exec选项的安全模式，把exec替换为okfind ./ -name &quot;*.log&quot; -ok rm &#123;&#125; \\; 参考资料： xargs rm -rf 与 -exec rm find命令之exec find命令的-exec选项为何不能用管道命令代替? Linux xargs 命令 linux 使用rename命令批量重命名文件 linux中合并多个文件内容到一个文件的例子 Linux and Unix Test Disk I&#x2F;O Performance With dd Command","tags":["date","paste","find","xargs"],"categories":["Linux"]},{"title":"常见思维导图软件对比-个人观点","path":"/2020/04/26/mind-map-comparion/","content":"学习Linux系统，感觉命令有点多，隔得时间长了总是容易忘掉，然后要重新查找太浪费时间，所以就准备这次把学习过的命令用思维导图记下来，后面复习和查找都会方便很多。然后就有了这篇博客。 测试的导图软件 xmind freemind freeplane mindmaster 选择结果和原因这里声明一点，没有详细对比，只是自己想要的几个功能，没有最好的符合自己需要的就是最好的。 最后选择了xmind8，下载地址：https://www.xmind.cn/xmind8-pro/ 原因介绍： 我在意的几个软件的一些缺点： xmind无法输出pdf格式（不过后来感觉这个功能可以舍弃） freemind没有总结括号（把多个节点括起来的那种），还有就是节点无法直接输入中文（拼音的第一个字母会作为英文输入），插入图片无法保存在导图中 freeplane导出pdf软件无响应，节点无法直接输入中文这个类似freemind，插入图片无法保存在导图中 mindmaster的mac版本快捷键好像不能用，直接pass了 其实最后花了时间选择以后感觉，把导图的内容做好是最重要的，其他的都是后面再考虑的，很多时候浪费时间只是为了找而找，但是忘了找这个工具的目的。","tags":["xmind","freemind"],"categories":["Tools"]},{"title":"Shell中通配符[a-z]为什么会匹配大写字母","path":"/2020/04/25/wildcard-a-z/","content":"在学习通配符和扩展符的时候发现了问题，[a-z]按照理论来说应该匹配所有的小写字母，但是在实际操作过程中不仅匹配小写而且同时匹配了大写的问题。 [a-z]和[A-Z]的问题1234567$ touch a b c x y z A B C X Y Z$ lsA B C X Y Z a b c x y z$ ls [a-z]A B C X Y a b c x y z$ ls [A-Z]A B C X Y Z b c x y z 从上面的例子可以看出，本来应该只显示小写子母命名的文件或者大写字母命名的文件，但是结果和想像出现了差别。 咱们先说如何解决这个问题。 问题解决方法使用POSIX字符集1234567891011[:alnum:]：匹配字面和数字字符。等同于A~Z,a~z,0~9[:alpha:]：匹配字母字符。等同于A~Z，a~z[:blank:]：匹配空格或制表符[:cntrl:]：匹配控制字符[:digit:]：匹配十进制数字。等同于0~9[:graph:]：匹配ASCII码值范围33~126的字符。与[:print:]相似，但不包括空格字符[:print:]：与[:graph:]相同，但多了空格字符[:lower:]：匹配小写字母，等同于a~z[:upper:]：匹配大写字母，等同于A~Z[:space:]：匹配空白字符（空格和制表符）[:xdigit:]：匹配十六进制数字。等同于0~9，A~F，a~f 例如： 12345# 这里注意 [:lower:] 相当于 a-z 外边还要加上 [] 来进行任意字符匹配$ ls [[:lower:]]a b c x y z$ ls [[:upper:]]A B C X Y Z 修改LC_ALL变量的值1234567# 建议使用第一种方法$ LC_ALL=C # 设置LC_ALL变量为C 或 使用 LANG=C也可以$ ls [a-z]a b c x y z$ ls [A-Z]A B C X Y Z$ unset LC_ALL # 释放变量，取消改变 简单解释原因系统通过一些环境变量设置本地偏好，通过命令locale可以查看设置摘要。因为语系不同导致编码的顺序不同。 LANG&#x3D;C：ABC…Zabc…z zh_CN和en_US：aAbBcC…xXyYzZ 所以会出现开头的问题，由于能够设置的环境变量很多，LC_ALL是覆盖所有其他本地化设置的环境变量（在某些情况下除外$LANGUAGE）。所以一些脚本为了避免用户本地配置的干扰，通常在开头设置LC_ALL=C。 在C语言环境中，字符是单个字节，字符集是ASCII（不是必需的，但实际上将在我们大多数人都会使用的系统中使用），排序顺序基于字节值，该语言通常是美国英语（尽管对于应用程序消息（与月份或日期名称或系统库中的消息相反），它由应用程序作者自行决定），并且未定义货币符号之类的东西。 参考资料 POSIX字符类 export LC_ALL&#x3D;C的含义 Linux中LANG,LC_ALL,local详解 Linux中[]方括号匹配问题[A-Z]会匹配小写a-z 为什么[AZ]匹配bash中的小写字母？ “ LC_ALL &#x3D; C”是做什么的？","tags":["a-z","A-Z"],"categories":["Linux"]},{"title":"MacBookAir外接显示器如何开盖并彻底关闭屏幕","path":"/2020/03/17/mac-off-screen/","content":"由于mac的屏幕太小了，基本大家在使用的时候都会外接屏幕然后合盖进行工作。不过由于mac的散热在转轴处，如果合着温度比较高，影响散热。开着呢屏幕又一直亮着很浪费。下面说一下自己尝试的能用的方法。 双屏使用这个开始以为挺麻烦，谁知道设置一下就可以。具体的设置位置：System Preferences-Displays-Arrangement 在里面把Mirror Displays选项勾选掉即可。剩下的就是选择一下主屏位置以及菜单栏的位置，如果还是不会设置可以看这里：https://support.apple.com/zh-cn/HT202351 注意：在屏幕打开的时候选项Arrangement才会出现 物理方式关闭屏幕使用外接显示器，不再用笔记本自带的显示器，而且要把笔记本屏幕彻底关闭，同时打开笔记本。 那么你需要一枚一块钱硬币，然后把它放在键盘左侧的Tab键和CapsLock键左侧位置就可以了。简单说就是找到你的键盘周围的磁铁所在位置，放一个能吸引的物体即可，告诉电脑盖子合上了。切记真正合盖的时候不要忘了拿走那个硬币，不要忘了，不要忘了。","categories":["macOS"]},{"title":"macOS安装vmware fusion并导入虚拟机","path":"/2020/02/22/macos-install-vmwarefusion/","content":"如果需要Windows环境做轻度使用，而且准备自行安装系统，那么可以考虑使用VirtualBox。免费开源，无需注册，一般office办公使用没啥问题。 这里由于我需要导入的吾爱破解的虚拟机是vmware格式的，所以使用vmwarefusion。不过刚才突然想到，好像VirtualBox也是可以导入，等后面试试后再继续完善。 材料 吾爱破解的虚拟机，下载地址虚拟机2.0 虚拟机软件的下载可以在上面的网站，也可以去官网 校验文件下载以后肯定要验证软件和系统的完整性，在mac下面比较方便，直接命令行即可，windows自行下载hash校验软件。 vmwarefusion软件，在下实在找不到这个软件的官方hash值在哪里 虚拟系统的hash值在上面的下载页面就有 mac下检验命令：openssl sha1 filepath(可以直接把文件拖到命令行中) sha1可替换为sha256来计算sha256的值 md5值校验：md5 filepath 安装fusion正常操作双击安装，但是这里面注意两个地方，很重要不然后面可能就会出现vm虚拟机打不开&#x2F;dev&#x2F;vmmon的问题。 在安装的时候会提示你是否打开，选择打开并输入密码，然后记得去系统偏好设置-安全性与隐私-通用最下面会有一个提示vm软件的访问询问，点击允许。 安装完成后打开虚拟机会出现另一个提示，提示需要辅助功能权限，同样在安全性与隐私-隐私里面，左边是辅助功能，右边会有VMware Fusion.app，在他的前面的方框中打勾。当然要先解锁。 如果忘记了，然后后面出现问题无法启动，没关系，卸载后重新安装即可。激活码请自行搜索 导入虚拟系统按照之前的思路应该能够直接导入虚拟机即可，但是点击导入现有虚拟机以后无法识别解压后的虚拟系统文件。 在网络上搜索以后采用了另一种方法，点击创建自定义虚拟机-继续-选择相应的操作系统（论坛的系统就选择Windows XP Pro)-继续-使用现有虚拟硬盘（找到解压后的虚拟机文件里面的vmdk文件）-下面的选项选择从当前正在使用此磁盘的虚拟机中移除此磁盘，然后点击选择。到这里基本就完成了，至于剩下的一些虚拟机分配cpu和内存的设置可以点击虚拟机窗口上的扳手图标即可。 制作原始快照：在fusion的菜单里面找到虚拟机-快照。设置共享文件夹，方便与主机进行文件传输。 安装vmwaretools原系统中已经安装了tools，因为我安装的fusion软件版本较新，又重新安装了一次，桌面图标、自动缩放等效果就很好了。 安装tools需要打开已经导入的虚拟机，然后在菜单栏中找到虚拟机-安装vmwaretools，接着虚拟系统中会弹出安装光盘，直接双击exe文件安装即可。 参考博客 VMWare Fusion 导入已有的虚拟机","tags":["vmware"],"categories":["macOS"]},{"title":"无需路由器安卓手机与MAC组建局域网共享文件","path":"/2020/02/21/android-mac-share-files/","content":"手机和电脑传输文件的方法很多，这次的方法是用安卓手机开热点然后与macbook组建局域网进行文件共享，无需路由器和数据线。 需要的材料 安卓手机一部（可以开无线热点） macbook（macOS系统） ES文件浏览器 操作方法 首先你的手机有个人热点功能，然后打开个人热点，macbook通过热点连接。 手机安装ES文件浏览器。 macOS设置：系统偏好设置-共享-勾选文件共享-在窗口右边添加共享的文件夹并调整用户权限 手机打开ES文件浏览器，打开侧边栏找到 网络-局域网-扫描 即可看到mac电脑 点击图标，ES访问macOS共享用户名需要输入guest，密码留空即可看到共享文件 遇到的问题 电脑的文件无法复制 具体情况是共享可以看到目录和文件，但是无法复制到手机里面，主要问题就是目录和文件权限的问题。解决方法：目录和文件权限建议修改为正常即可，目录为755，文件为644 输入guest也无法进入 在共享设置中把你的共享目录的用户添加任何人，权限根据需要更改。","tags":["LAN","热点"],"categories":["macOS"]},{"title":"一体机内存升级记录","path":"/2020/01/05/buy-ram/","content":"家里的一体机用了四、五年了，本来买的时候没有买高配，现在随着使用时间越来越长，现在已经越来越接近极限了。每次使用的时候都有换掉的冲动，但是金钱让我冷静了许多。打开管理器看了看电脑运行过程中的资源占用，发现内存确实太小了，不过2G的内存确实已经干不了什么了。手机都8G起步，更何况电脑。 之前的想法因为是一体机，本着不折腾的原则，再买一个，然后把这个当成实验用机。不过有一天在搜索一体机的时候发现网络上的拆机过程，发现很简单嘛。这时候事件的重心由购买变成升级。当天晚上就把一体机拆了，看了内存条的大小和型号，准备购买，然后就有了下面一连串的问题。 内存的标签意义不多说了，建议查看内存系列一：快速读懂内存条标签。正常来说一体机的内存跟笔记本是一样的。 一些重要的问题 主板支持的最大内存 要注意不然买回来也是浪费。查看的方法，windows系统在cmd界面执行如下命令： wmic memphysical get maxcapacity 得到的数字的单位是KB，转换为GB即是主板支持的最大内存容量。 主板的插槽和内存的频率 这个建议下载专业的硬件检测软件，鲁大师之类，建议使用CPUZ，简单绿色。切换到SPD选项卡，可以看到插槽个数，内存是第几代，最大带宽（这里的带宽注意，CPZ显示的最大带宽应该乘2就是你的内存频率） 内存电压 同样在cpuz的spd选项卡中会看到电压，这里注意一点就可以高电压可以兼容低电压，但是低电压不能不能启动高电压。 支持的最大内存频率 内存的最大频率和CPU、主板都有关系，取两者支持的最小，同时如果购买的内存条和原有的内存条频率不一样那么也是按照最低的来。而 双通道 两条内存条基本都能组成双通道，即使两条内存的容量不一样，如2G和4G依然能够组成2G的双通道。 真假内存的问题 这个开始的时候我也很纠结，同样频率和大小但是价格相差一倍，我这里只说我个人的选择，我选择便宜的。 遇到的问题基本就是这些，主要是升级电脑，专业搞机的话则需要深入了解。","tags":["颗粒","真假"],"categories":["Windows"]},{"title":"2019年的一些思考","path":"/2020/01/02/2019-end/","content":"这段时间发现容易感动，情绪容易低沉，2019不能再返回，失去的时间不管你再怎么懊悔也无法再次得到。一到晚上总是有很多东西要写，很多情绪要释放，迷迷糊糊睡了一觉却什么都记不太清，有时候甚至怀疑自己是不是压力太大而记忆力下降。后来发现不是压力太大，而是自然的正常的出现。 可能在后续的一段时间会多写一些无聊的事情，而不是仅仅写一些电脑的问题的解决，计算机的问题可以放放，自己的问题的优先级还是要高点儿的。 文章拖了很久，不过这两天还是准备把文章写完，可能有些情绪和想法已经改变，但是记录依然还是有一定的意义。 家庭方面12月底的一天，上午阳光很好，然后和母亲一块出去晒晒太阳，逛逛超市。由于海拔较高，阳光很刺眼，背对着太阳，面对着路上不太多的行人。这时一个父亲骑着自行车，后座上带着女儿从小区缓缓出来。朝远处慢慢骑去。突然觉得做一个好的父亲确实挺不容易，子女的童年时光很短，而那时可能正是父母职业的上升期，导致的结果就是可能陪伴孩子渡过童年的不是父母，而是爷爷奶奶、手机、平板、玩具。 可能有种种原因，因为工作需要，为了挣更多的钱，才能让下一代更好的生存，但是总觉得不要从一个极端走向另一个极端，生活中的一切都是要平衡的，没有完美的操作，没有永远正确的选择，不是吗。 一直提醒自己，当自己的生活中出现了一些遗憾，那么尽量不要再让自己成为别人遗憾的制造者。家和万事兴，家庭成员之间，亲属之间是应该互相包容，相互理解，但却不能把别人的包容和理解作为自己制造麻烦的借口。 学习 The secret of getting ahead is getting started. —- Mark Twain 重要的是开始，而不是不断的做准备，不要太在意起点，刚踏上旅途的时候没人知道你前进的方向是不是离终点最近。最应该做的是在行走的过程中不断的修正，而不是一直呆在起点准备着路途中可能需要的各种东西而不敢踏出第一步。 坚持 习惯因为自己的意志力很差，同时心理方面对自己也是不断的否定。所以一直在制定计划，但却一直没有完成过。长期下来，自然就觉得自己无法专注，无法完成既定目标，各种理由劝说自己放弃，结果所有的计划、激情慢慢都被安详的埋葬在内心深处。 不要把坚持想得那么困难，即使这篇一月份就应该完成的博客拖到二月份，但我依然抱有信心。过分的相信自己总比过分的自卑要好点。以前可能是后者，后面意识到然后改掉。 健康这个没什么可说的，因为一般体会不到健康的重要性，体会到的时候基本比较难挽回了。换种说法就是刚开始的时候健康可以很简单的换成钱，但是最后钱不一定能换回健康。如果健康失去了，钱也没多少，那可能谁也没办法拯救了。","tags":["心理","感悟"],"categories":["杂谈"]},{"title":"Windows下命令行软件包管理工具Scoop避坑备忘录","path":"/2019/12/16/windows-scoop/","content":"在配置计算机开发环境的时候，相应的软件管理其实一直都是一个很重要的需求。macOS上面有Homebrew，Linux方面就不用多说了apt、dnf等等，而Windows上面则一直都没有能够拿得出手的管理方法。不过今天介绍的这个工具的名字为Scoop官方的介绍是A command-line installer for Windows，这个可能正是你想要的。 一些介绍痛苦的回忆：依稀还记得学习java的时候，找到官方网站-下载jdk-安装jdk-配置环境变量一直是一个噩梦，多少渴望知识的幼小心灵直接在此受到暴击一蹶不振。虽然现在越来越方便了，但是整个配置流程也几乎没有太大的改观。在国内的网络环境如果想安全的配置好环境，依然需要不断的重复官网下载，安装配置的过程。（当然，官网打不开，下载速度慢等等就不多说了，都是泪） 回到正题，今天介绍的Scoop正是为了让你解脱而出现的，项目建立的比较早了，但是自己到现在才知道（朋友介绍的，嘿嘿），惭愧惭愧。废话有点多，这个Scoop主要的特点（摘录自官网，反正就是很给力，主要我也看不懂，还有一个类似功能的叫做Chocolatey）： Permission popup windows GUI wizard-style installers Path pollution from installing lots of programs Unexpected side-effects from installing and uninstalling programs The need to find and install dependencies The need to perform extra setup steps to get a working program 安装前准备摘录自官网文档 Windows 7 SP1+ &#x2F; Windows Server 2008+ PowerShell 5 (or later, include PowerShell Core) and .NET Framework 4.5 (or later) PowerShell must be enabled for your user account e.g. Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser 我这里给个个人建议：安装Windows10并更新到最新的补丁即可。 如果你想安装新版本的.net，可以参考windows10 如何安装 .net。 如果你不想换系统，那么需要查看你的powershell和.net是否符合。方法如下： 启动powershell，执行命令$PSVersionTable返回的内容中 psversion 为powershell版本clrversion 为.net版本 （这个我感觉不是太清楚）。还可以使用命令$psversiontable.psversion.major来查看，返回值要&gt;&#x3D;5.0 查看系统安装的所有的.net版本，执行命令 12345# 查看所有版本dir &#x27;HKLM:\\SOFTWARE\\Microsoft\\NET Framework Setup\\NDP&#x27; | sort-object name -Descending | select-object -ExpandProperty PSChildName# 另一种方法(Get-ItemProperty &quot;HKLM:SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v4\\Full&quot;).Release .net的版本信息有点乱，具体可以参照官网的解释，摘录如下： 每个新版本的 .NET Framework 都会保留早期版本中的功能并会添加新功能。 可在同一台计算机上同时加载多个版本的 .NET Framework，这意味着可安装 .NET Framework 而无需卸载以前的版本。 通常，你不应卸载以前版本的 .NET Framework，因为你使用的应用程序可能依赖于特定版本，如果删除该版本，可能会中断。.NET Framework 版本和 CLR 版本之间存在差异：.NET Framework 版本基于构成 .Net Framework 类库的一组程序集。 例如，.NET Framework 版本包括 4.5、4.6.1 和 4.7.2。CLR 版本基于 .NET Framework 应用程序执行的运行时。 单个 CLR 版本通常可支持多个 .NET Framework 版本。 例如，CLR 版本 4.0.30319.xxxxx 支持 .NET Framework 版本 4 到 4.5.2（其中 xxxxx 小于 42000），而 CLR 版本 4.0.30319.42000 支持从 .NET Framework 4.6 开始的 .NET Framework 版本。 正式安装最权威的文档是官方的quick start 执行如下命令： 12345# 这条命令一定要执行，会返回很多选项，请选择 A (全是)，这是坑1，不然下面就会不断出错Set-ExecutionPolicy RemoteSigned -scope CurrentUser# 安装命令，如果上面选择全是，还有你的网络不是太差的话应该就没问题了Invoke-Expression (New-Object System.Net.WebClient).DownloadString(&#x27;https://get.scoop.sh&#x27;) 如果上面的安装命令还是一直出错，出错提示为使用“1”个参数调用“DownloadString”时发生异常:“无法连接到远程服务器”，那么恭喜你，你的网络真的够垃圾。可以试试下面的这个处理方法，因为地址https://get.scoop.sh的真实地址是https://raw.githubusercontent.com/lukesampson/scoop/master/bin/install.ps1，这里用真实的地址替换原来的地址，即安装命令修改如下： 1Invoke-Expression (New-Object System.Net.WebClient).DownloadString(&#x27;https://raw.githubusercontent.com/lukesampson/scoop/master/bin/install.ps1&#x27;) 安装应用软件上面完成后你就可以安装一些很常用的软件了，比如7z git aria2 vim等，使用方法： 12345678910# 安装scoop install aria2 7zip git python# 卸载scoop uninstall aria2# 列出安装软件以及状态scoop list# 查找软件scoop search python# 帮助scoop help &lt;command&gt; 这里的坑是：1.建议你挂个梯子，不然下载软件的过程会让你生不如死, 2.软件安装失败再次安装的时候需要先卸载再重装 3. 7z如果无法识别压缩包，那么找到7z的启动程序右键管理员启动，然后关联所有的压缩文件即可。 这里面遇到一个问题比较特殊，我安装了aria2以后scoop自动调用，但是aria2下载速度特慢，然后我根据提示禁用了aria2但是依然调用，后面把aria2卸载以后速度快多了。 增加软件仓库官方的很少，而且连chrome、firefox都没有，所以需要增加一些额外的仓库来满足我们的需要，这里注意安装额外仓库需要先安装git。 12# 添加extras bucket，其他仓库直接更换 extras 为仓库名即可scoop bucket add extras 个人体会最后写一些自己使用过程中的体会（windows10 64位） 安装过程全自动 软件安装位置默认为你的用户目录下面的scoop目录 由于众所周知的原因，下载软件是真的慢，而且几乎不可能一次成功 还是建议使用代理进行操作不然体验还不如去官网下载安装 软件安装完成后如果有图形界面，则会在启动程序-scoop目录下面添加快捷方式（也可能没有） 总结一下就是，建议使用，管理方便，配置不乱。 参考资料： Scoop extras里面的软件包 buckets","tags":["soft","manage"],"categories":["Windows"]},{"title":"中国电信商城的一次购物过程","path":"/2019/12/05/telecom-service-communication/","content":"因为电信新出了一款5元套餐，非常适合作为备用号码。所以就想申请一张，然后就经历了一次奇妙的电信商城购物体验（这里不是反话，过程还是蛮有意思的）。这里做一下记录。 商城购买电话卡商场首页就有套餐的介绍，然后点击进入就是购卡界面，很流畅。还可以自己选号码，这点挺人性化的，而且有些号码还不错。这里有个小插曲，其实在商城购买之前我去电信营业厅问过了。毕竟营业厅办卡很快当时就能拿到。 不过同样的套餐，营业厅办理国内呼叫0.15元&#x2F;分钟，而商城上面显示的为0.1元&#x2F;分钟，多出来的是手续费吗？问了工作人员为什么费用不一样，回答很霸气：“你可以去网上办理。”无懈可击，非常正确。这里不得不说移动的客服应该是这三家中最靠谱的。 然后回商城购买了电话卡，接着呢过了一天想看看卡到哪里了，然后事情就变得有意思了，一看订单被关闭了，原因简单没有付款。哎呀，我是那种不付钱的人吗，支付宝的订单都成功了，钱都转走了，你告诉我没收到，这还得了。找客服之路。。。开启。 网上营业厅客服第一个反应就是网上营业厅，这里要提一下电信的网上营业厅客服，更改套餐之类可以找他们，比线下的靠谱，有些互联网套餐线下基本都找各种理由不给你办，但是网厅基本就ok。扯远了，网厅客服就在网页的最下面，点那个在线客服就可以了，但是呢得到的回复是，他们看不到商城的订单需要联系商城的客服。哦，分工还很明确，找商城客服，走起。 商城客服商城客服还是比较好找的，任何一个商品界面右边就有一个在线客服的图标，用的是企业qq，可以匿名也可以使用你的qq登录聊天，qq号码是4008099189，这里有两个建议，一个是用手机qq加好友聊天，因为需要排队，用手机qq可以及时看到他的回复；二是最好下午，经过我的试验，他们的大概上班时间在11点左右。联系以后回复我不好意思你的这个订单是集团业务，需要联系集团进行处理。 集团客服集团客服的电话是4008167189，开启我的电话沟通之旅，到这里总算找到了一个能够处理问题的。 后续情况是这样： 第一个客服查询后告诉我他们那边没有收到，然后需要找技术人员进行核对，让我提供支付截图，说短信给我邮箱地址，让我把截图发过去，但是挂了电话以后就没有以后了。 再次联系客服后让我提供了支付宝的交易单号进行查询，然后告诉我支付成功会给我退款。因为这时我已经再次下单了（第一个客服告诉我即使关闭的订单付款成功也不能发货） 过了一天吧好像，给我打电话说失效的那个订单准备发货，什么操作感觉电话说明问题取消订单，随后退款到帐。 卡用着不错，但是感觉客服有点乱。","tags":["无忧卡","客服"],"categories":["杂谈"]},{"title":"Windows安装和共享打印机问题记录","path":"/2019/11/14/windows-printer/","content":"这几天有比赛项目，然后就需要打印项目要求，评分表之类的文件，结果就是需要对赛场的电脑和打印机进行连接。这中间才知道打印机和电脑连接也是个技术活，会遇到各种这样你可能想不到的问题。趁着有些问题还能回忆起来，把解决方法记录，避免以后遇到后再走弯路。 驱动问题这个可能是连接失败的主要原因，解决方法比较简单,使用驱动精灵，或者360自带的驱动大师即可安装（因为360基本都有）。这里需要注意的是一些小的细节。 安装后尽量重启电脑和打印机 如果电脑已经成功连接打印机，但是打印机一直没有反应那么可以尝试把添加的打印机设备全部删除掉，然后拔掉打印机usb接口，重新插入电脑，这时系统会自动添加。一般添加完成后即可正常打印 共享问题Windows现在的打印机共享已经做得很方便了，这里记录一下遇到的偶发情况。 共享打印机要在连接打印机的电脑上进行，要确认网络设置中打印机共享已经打开。 完成共享后，其他电脑如果无法搜索到网络打印机，可以直接在地址栏输入\\\\共享电脑IP或电脑名来直接查看打印机共享并直接手动连接。 连接完成后安装驱动，如果依然无法打印，可尝试重启打印机 如果在连接打印机的过程中出现密码输入，共享没问题，输入正确的电脑用户名密码都无法连接时，可尝试直接不输入任何内容直接点击登录，这是个坑。 网络上还有一些启动printer服务之类的解决方法，基本问题很少出现在这些地方。不要想得太复杂。还有就是打印机还是买一些常见的品牌，驱动方便。","tags":["没有反应","正在打印"],"categories":["Windows"]},{"title":"Codewars网站刷题笔记3","path":"/2019/11/10/python-codewars-kata3/","content":"Calculate BMI题目很简单，这里面有意思的还是如何简化if-else语句，按照一般的套路我也想到了使用列表或者字典之类，但是呢如何处理还是没想到的。 1[&#x27;Underweight&#x27;, &#x27;Normal&#x27;, &#x27;Overweight&#x27;, &#x27;Obese&#x27;][(b &gt; 30) + (b &gt; 25) + (b &gt; 18.5)] Sort and Star这个放在这里主要是因为自己对字符串方法还是不熟，这里记录一下 list(str) 直接把字符串变为列表 join 不仅能够连接列表也能连接字串 min() 和 max() 不仅仅局限比较数字 字符串的操作很多，还是要浏览文档有一个大概了解，点这里 Draw stairs题目解决容易，但是做得优雅就比较考验能力了，这里要习惯使用列表生成式或者生成器。他们的区别不大，主要就是外边的括号是[]还是()。 最佳答案使用了生成器来处理&#39; &#39;.join(&#39; &#39;*i+&#39;I&#39; for i in range(n))。还有就是要习惯返回结果而不是总是用输出的思路来解决问题。 SetAlarmPython中可以直接使用and or not来连接处理逻辑问题。 My head is at the wrong end把列表倒排的几种方法：l.reverse() list(reversed(l)) l[::-1] Multipleofindex这个题目中使用了列表生成式，[l[i] for i in range(1, len(l)) if l[i] % i == 0] 虽然没有考虑列表中第一个元素如果是0的情况，不过列表生成式是简单好用。 Simplevalidationofausernamewithregex这个涉及到了正则表达式，在编程的时候思路总是朝着比较直观的方法，没有养成效率和优雅的习惯，当然主要原因就是练得太少。 附正则表达式的全集","tags":["codewars"],"categories":["Python"]},{"title":"Codewars网站刷题笔记2","path":"/2019/11/06/python-codewars-kata2/","content":"这次跳到了7kyu，看看高一级的题目。 AlphabeticalAddition这个是字母加法，里面涉及到的就是常用的两个字符和数字的转换方法，ord() 和 chr()。 然后还有一个就是 sum(ord(c)-96 for c in letters) 这个应该属于列表生成式。循环体简化到了一行，不过我个人觉得开始学习的时候看着比较不清楚。 DistinctDigitYear这个找每个位数都不同的年份题目，里面主要使用了一个集合去重复的特性。 set() 可以去掉列表或元组中重复的元素。 InviteMoreWomen这个题目是处理人数，男士用1表示，女士用-1表示。两个点，一个是计算列表元素个数的count()方法，另一个是思路问题，想知道男士和女士哪个性别多直接计算列表的和即可。sum(list) Powersof3题目涉及到math模块中的log()函数，这个是计算根的。数学知识都快忘光了。 123log(...) log(x, [base=math.e]) Return the logarithm of x to the given base. RangeBitCounting题目是计算给出的整数转换为二进制有几个1，这里涉及到一个进制转换的方法 bin() 把十进制转换为二进制。还有剩余两种进制也一并记录。 12345678bin(number, /) Return the binary representation of an integer.oct(number, /) Return the octal representation of an integer.hex(number, /) Return the hexadecimal representation of an integer. FindtheSpeedcuber’stimes还是思路问题， 我的思路是先去掉最大值、最小值再求和。 另一种思路是先求和然后再减去最大值和最小值 把列表排序然后只取其中的有效的数字 涉及到的方法介绍 123456789101112131415161718192021min() # 返回最大值max() # 返回最小值max(...) max(iterable, *[, default=obj, key=func]) -&gt; value max(arg1, arg2, *args, *[, key=func]) -&gt; value With a single iterable argument, return its biggest item. The default keyword-only argument specifies an object to return if the provided iterable is empty. With two or more arguments, return the largest argument.# 保留小数位方法round(number, ndigits=None) Round a number to a given precision in decimal digits.&#x27;%.2f&#x27; % decimal&#x27;&#123;:.2f&#125;&#x27;.format(decimal)format(decimal, &#x27;.2f&#x27;)","tags":["7kyu"],"categories":["Python"]},{"title":"Codewars网站刷题笔记1","path":"/2019/10/27/python-codewars-kata1/","content":"很早就注册了codewars网站，却一直没有刷题，主要原因是懒，一小部分原因是这个网站访问比较慢。现在准备重新练习python，其实python也是很早就学了，一直没有练习，然后基本就一直处于入门水平，知道简单的语法而已，这次要好好练一次。 以codewars网站上面的题目为基础进行练习，每周都会刷一些题目，然后把这周做题过程中获得的一些技巧和经验，记录在博客中。作为一个系列，归类在python中。这是第一篇。 网站题目的github地址：https://github.com/aoenian/codewars-katas-python math.ceil在CenturyFromYear题目中有解决方案使用如下代码math.ceil(year / 100) 这里把相关方法的解释摘录如下： math.ceil(x) Return the ceiling of x, the smallest integer greater than or equal to x. If x is not a float, delegates to x.ceil(), which should return an Integral value. 还有一个类似的方法： math.floor(x) Return the floor of x, the largest integer less than or equal to x. If x is not a float, delegates to x.floor(), which should return an Integral value. 具体内容可查看相关文档。 xrange()在GrasshopperSummation题目中看到了xrange()的使用。网络搜索后得到xrange和range的区别在于xrange()生成的不是一个数组，而是一个生成器。 不过通过查找文档发现在3.0版本以后用range()的功能与xrange()完全一样，而后者已经删除。 HQ9这里处理的是字符串的问题。第一，长字串如何比较方便的表示；第二，如何格式化字符串。 长字串表示 这里主要使用的是括号和双引号来处理这个问题。代码示例如下： 123456789101112# 个人比较推荐这种long_str = ( &quot;2 bottles of beer on the wall, 2 bottles of beer. &quot; &quot;Take one down and pass it around, 1 bottle of beer on the wall. &quot;)# 也可以使用 \\ 符号 但要注意第二行的缩进问题long_str = &quot;2 bottles of beer on the wall, 2 bottles of beer. \\Take one down and pass it around, 1 bottle of beer on the wall. &quot;# 也可以使用三引号来处理# 三引号包裹的所有字符都会作为字串的一部分，特别是缩进和换行long_str = &#x27;&#x27;&#x27;2 bottles of beer on the wall, 2 bottles of beer.Take one down and pass it around, 1 bottle of beer on the wall.&#x27;&#x27;&#x27; 格式化字符串 format() 搜索文档和相关资料的时候发现有format() 和 str.format() 两种用法。但是网络上大部分介绍的都是第二种，但是第一种还是内置函数呢，所以就很奇怪。查了一下，在stackoverflow里面看到了相似的问题。具体网址：what-is-global-format-function-meant-for 里面的观点摘录如下： Use the format() function when you want to format just a single value, use str.format() when you want to place that formatted value in a larger string. 具体的格式字符串语法的文档地址：格式字符串语法 中文的 不过建议还是看看英文互相对照，感觉有点像是机器翻译的。 Messi goals function这个题目本身比较简单，这里记录的原因是如何优雅的解决函数接收参数较多的问题。 123# 用可变参数，然后通过sum()函数进行和的计算def goals(*a): return sum(a) PersonalizedMessage这个题目中是列表使用的一个小技巧，在进行逻辑判断的时候，False和True分别对应不同的对象，这样可以通过此技巧来优雅处理。具体实现如下： 12# 通过判断name和owner是否相等来得到不同的结果&#x27;Hello &#x27;+[&#x27;guest&#x27;,&#x27;boss&#x27;][name==owner] RemoveStringSpaces字符串的替换，推荐使用自带的 replace() 方法。 如：x.replace(&#39; &#39; ,&#39;&#39;) WellOfIdeasEasyVersion判断不同条件返回不同结果时可以写在一行处理。 12345678910if count &gt; 2: res = &#x27;I smell a series!&#x27;elif count == 0: res = &#x27;Fail!&#x27;else: res = &#x27;Publish!&#x27;return res# 可以调整为return &#x27;I smell a series!&#x27; if c &gt; 2 else &#x27;Publish!&#x27; if c else &#x27;Fail!&#x27;","tags":["codewars","kata","skills"],"categories":["Python"]},{"title":"VSCode增加Python语言用户代码片段","path":"/2019/10/14/vscode-python-snippets/","content":"这段时间练习Python编程，编写的时候每次都要写文件头有点麻烦，所以就编辑了一个自己使用的代码片段。方便插入文件编码、时间、作者之类的程序信息。 在编写的过程中发现需要用到vscode的变量，经过查找官方文档完成了自己的代码。具体代码如下： 12345678910111213141516&quot;Print file header&quot;: &#123; &quot;prefix&quot;: &quot;header&quot;, &quot;body&quot;: [ &quot;# -*- coding: utf-8 -*-&quot;, &quot;$BLOCK_COMMENT_START&quot;, &quot;@Author: aoenian&quot;, &quot;@Filename: $TM_FILENAME&quot;, &quot;@Date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND $CURRENT_DAY_NAME&quot;, &quot;$BLOCK_COMMENT_END&quot;, ]\t&#125;,\t&quot;Insert modify time&quot;: &#123; &quot;prefix&quot;: &quot;modi&quot;, &quot;body&quot;: &quot;@Last Modified time: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND $CURRENT_DAY_NAME&quot;, &#125; 第一个 header 是插入常用的一些文件信息，作者创建日期，文件名之类。后面的 modi 则是手动插入更新的日期。 这里面还遇到一个问题是，插入文件更改日期的时候由于是插入到Python的块注释中，所以软件认为是普通文本，不会自动触发代码片段。这个时候需要利用手动触发来执行，由于那个默认的快捷键与系统冲突，所以需要更改。 更改方法：点击-Code-首选项-键盘快捷方式-在搜索框中输入 触发建议 - 更改为 ALT+&#x2F; （可以根据自己的需要进行更改） 具体的配置代码如下： 12345&#123; &quot;key&quot;: &quot;alt+/&quot;, &quot;command&quot;: &quot;editor.action.triggerSuggest&quot;, &quot;when&quot;: &quot;editorHasCompletionItemProvider &amp;&amp; textInputFocus &amp;&amp; !editorReadonly&quot;&#125; 参考文章： Snippets in Visual Studio Code Variables Reference","tags":["snippets","Variables"],"categories":["Editor"]},{"title":"安装Windows操作系统工具汇总","path":"/2019/09/26/install-windows/","content":"记录自己安装操作系统过程中使用过的感觉还不错的软件。 PE推荐现在安装操作系统一般都不用刻录光盘了，直接U盘安装所以PE软件是需要的。这里推荐两个比较好用的。 优启通 推荐这个，安装Windows很快，如果出现使用其他标明64位的安装光盘，请看这里 微PE 用这个PE安装的时候有时也会出现使用其他标明64位的安装光盘。不过在这个PE里面没找到解决的方法。 系统下载 Windows系统的下载地址只推荐 I Tell You Linux 请去官方网站下载 校验软件 Hasher Linux系统U盘写入软件建议使用官方推荐的写入软件，下面这个很多版本都推荐，可以尝试。 balenaEtcher","tags":["hash","PE"],"categories":["Windows"]},{"title":"pip换源提升包下载速度","path":"/2019/09/26/python-pip-change-repositories/","content":"快到国庆节了看到公众号有一篇文章是使用python给自己的头像添加国旗。然后感觉挺厉害，可以用几行代码来把图片合成起来。在使用过程中遇到了一些问题，记录如下： 给头像添加国旗 具体的文章链接在参考文章中，文中代码摘录如下： 12345678910111213141516171819# -*- coding: utf8 -*-import cv2# 读取头像和国旗图案img_head = cv2.imread(&#x27;head.jpg&#x27;)img_flag = cv2.imread(&#x27;flag.png&#x27;)# 获取头像和国旗图案宽度w_head, h_head = img_head.shape[:2]w_flag, h_flag = img_flag.shape[:2]# 计算图案缩放比例scale = w_head / w_flag / 4# 缩放图案img_flag = cv2.resize(img_flag, (0, 0), fx=scale, fy=scale)# 获取缩放后新宽度w_flag, h_flag = img_flag.shape[:2]# 按3个通道合并图片for c in range(0, 3): img_head[w_head - w_flag:, h_head - h_flag:, c] = img_flag[:, :, c]# 保存最终结果cv2.imwrite(&#x27;new_head.jpg&#x27;, img_head) 因为这里用了python-opencv库来处理图像，所以我们需要先安装。 替换pip源之前一直没有想过pip可以换源，然后安装第三方库的时候需要执行好几次才能成功，而且速度非常慢。这次的速度更慢，实在忍受不了所以就搜索了一下解决方法，没想到就更Linux的软件源一样换成国内的就可以了。 看来下次遇到这种情况应该先想到换源的方法。 具体操作很简单，执行如下代码即可： 12345# windows在CMD中，Linux Mac在终端执行，这个换的是阿里的源pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/# 更新pip命令python -m pip install --upgrade pip 安装python-opencv库123# 使用的是python3pip3 install numpypip3 install opencv-python 参考文章： 别再@官方啦，普天同庆加国旗，10行代码搞定 pip下载python库太慢怎么办？ python3之opencv安装","tags":["change","repositories"],"categories":["Python"]},{"title":"Windows7安装FTP服务器","path":"/2019/09/12/windows7-install-ftp/","content":"记录Windows7安装FTP服务器，只是简单的安装使用，复杂的功能没有涉及到。 安装FTP控制面板-程序和功能-打开和关闭windows功能-Internet信息服务-勾选 FTP服务和FTP扩展性 安装组件。 新建并设定FTP服务器控制面板-打开管理工具-iis服务器-新建ftp服务器 ftp站点名称 内容目录自行设定 绑定IP地址 如果选用全部为分配（所有满足的IP）那么本地访问的时候可以使用（本机的局域网ip或者用 127.0.0.1） 如果选择本机IP地址绑定则只能使用绑定的IP进行测试访问自动启动ftp站点 虚拟主机名可以暂时不选，ssl可选择无 身份验证选择匿名则所有人可访问，授权方面则需要把允许访问调整为匿名用户，权限可以设置为读取。 参考文章： windows服务器 IIS FTP服务","tags":["Windows","FTP"],"categories":["Net"]},{"title":"记一次视频下载过程2","path":"/2019/09/02/download-the-m3u8-2/","content":"这篇文章基本跟视频下载没啥关系了，主要是一些环境的配置和编辑软件的使用。不想每个单写了，所以就写在一起，省点地方。 Vim自动生成连续数字列这个是生成视频名称的时候使用的，因为想生成如 001.ts 002.ts 003.ts … 之类，并且需要每一个视频名称占一行，其实就是制作下载地址的文件。 本来想用python写个循环，不过树莓派没有安装python3环境，突然想到vim，一搜还真有这种方法。 具体查看地址：在vim中插入连续数字列 方法摘录如下： 首先是Insert模式输入起始数字如 1.ts 然后按ESC回到Normal模式，按qa进入recording状态，录制后面的操作，并把动作录制在寄存器a中 按Y复制整行 按p粘贴刚才复制的内容 按ctrl+a则会使数字自动加1 按q停止录制 这时刚才的增加一行并把数值增1的一系列操作已经录制并存放在a寄存器中，在normal模式下，通过命令100@a调用，100是次数可根据需要进行更改。 这里有个问题要注意，如果你的数字是001、002…这种情况，这可能会出现增加到007以后下一个数字是010；增加到017后下个数字变成020。开始我以为是vim出问题了或者我的生成序列的方式不对，后来才知道原因是vim把0开头的数字自动认为是八进制，解决方法是使用这个命令：:set nrformats-=octal 或者 :set nrformats= 一个应该是删除八进制，另一个让数字默认都是十进制 ls命令按照文件名的数字大小排序这个需求紧接上个问题，如果你的文件名是这样的：001，…010，011，…0100，0101 这种情况如果你用ls -l命令查看时，则会出现 0100文件排在011文件之前的情况。这个时候如果想让文件按照文件名的大小排列可执行命令如下：ls | xargs stat -c &quot;%n&quot; | sort -n 安装pyenv来实现多版本python建议直接查看官方介绍pyenv。这里只是把步骤翻译出来。 macOS安装 安装Homebrew 在命令行执行如下命令 1/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; 安装pyenv 123brew update # 更新brew软件列表brew install pyenv # 安装pyenvbrew upgrade pyenv # 更新pyenv Linux这里以Debian&#x2F;Ubuntu系统的默认Bash为例，其他的请参照官方文档 1234567891011121314151617# 更新系统软件包sudo apt-get update# 安装依赖文件sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev \\libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \\xz-utils tk-dev libffi-dev liblzma-dev python-openssl git# 把pyenv安装在自己的home目录下git clone https://github.com/pyenv/pyenv.git ~/.pyenv# 设置环境变量echo &#x27;export PYENV_ROOT=&quot;$HOME/.pyenv&quot;&#x27; &gt;&gt; ~/.bashrcecho &#x27;export PATH=&quot;$PYENV_ROOT/bin:$PATH&quot;&#x27; &gt;&gt; ~/.bashrc# 添加自动补全echo -e &#x27;if command -v pyenv 1&gt;/dev/null 2&gt;&amp;1; then eval &quot;$(pyenv init -)&quot; fi&#x27; &gt;&gt; ~/.bashrc# 重启终端exec &quot;$SHELL&quot;# 安装python版本,版本可自行选择pyenv install 3.7.0 pyenv的使用方法参见pyenv commands。 参考文章: Increasing or decreasing numbers VisIncr : Produce increasing&#x2F;decreasing columns of numbers, dates, or daynames vim usr_26.txt vim 使用counts做简单的加减 按照文件名的数字大小排序文件","tags":["pyenv","vim"],"categories":["Python"]},{"title":"记一次视频下载过程1","path":"/2019/08/31/download-the-m3u8-1/","content":"在一个网站看视频的时候，感觉视频缓冲太慢，而且快进容易被卡死。然后就想把视频下载下来。还是和以前一样，通过开发者工具看了看视频传输的数据。原以为会找到一个mp4文件直接下载，谁知道全是一段一段的ts文件，这是什么时候出现的变态技术，我也是多长时间没有下载视频了。 更变态的是ts文件只有几兆大小，而且下载下来以后还无法观看，后面知道因为加密的原因。这里先说结论：我没有搞定ts的解密。所以这篇文章可能没有你想看的。 这里记录在下载视频过程中遇到的一些问题。 python获得网址状态需求是为了查看网址是否能够访问。方法摘自 https://stackoverflow.com/a/13641613 具体如下： 首先你要安装 requests 包，当然后面要用的。 代码实现如下 1234567import requeststry: r = requests.head(&quot;https://stackoverflow.com&quot;) print(r.status_code) # prints the int of the status code. Find more at httpstatusrappers.com :)except requests.ConnectionError: print(&quot;failed to connect&quot;) 其他具体的用法可查看 requests library python捕获所有的异常具体查看 捕获所有异常 代码如下： 12345678# 下面的代码会捕获除了 SystemExit 、 KeyboardInterrupt 和 GeneratorExit 之外的所有异常try: ...except Exception as e: ... log(&#x27;Reason:&#x27;, e) # Important!# 如果你还想捕获这三个异常，将 Exception 改成 BaseException 即可。 命令行下载因为视频被切分几千段，然后我下载的时候用的是树莓派，所以要使用命令行下载。刚开始用的wget，后来感觉aria2c也是挺不错的，当然链接都是https的。 wget下载 wget使用命令 wget -i url.txt 来下载多个链接。开始我就是使用这种方式，但是下载速度很慢，只能一个一个下载，不能同时进行多个。 然后在网络上寻找一次下载多个的方法，具体的问答可以查看 Parallel downloading 这里我只记录一个比较简单的方法：cat urls.txt | xargs -n 1 -P 5 wget 或者 cat urls.txt | parallel -j 5 wget 这里面的选项 -P 和 -j 后面的5是你想同时进行几个任务。 aria2c 这个就比较简单了，先安装 sudo apt install aria2c 然后使用 aria2c -i url.txt即可。 具体可参考 [aria2c library](sudo apt install aria2c) 部署博客时出现xcrun: error今天这篇博客的时候出现了xcrun: error: missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun的错误，搜索以后发现是更新系统引起的。这个错误在执行git --version也会出现。 解决方法：命令行执行 xcode-select --install 然后重新安装xcode command line。 参考博客：解决MacOS升级后出现xcrun: error: invalid active developer path, missing xcrun的问题","tags":["m3u8","requests"],"categories":["Python"]},{"title":"Python装饰器（一）","path":"/2019/07/24/python-decorator1/","content":"这段时间学习Python，之前已经学习过基本的语法，现在准备重新拾起来，看的教程是github上面的Python - 100天从新手到大师。进度相对一般的教程比较快，虽然没有那么详细，但是能够快速了解整体的框架。 第九天的教程里面讲到了装饰器，这个之前了解过，但是一直似懂非懂，加上之前用的比较少，也是看过就算了。这次又出现了，不能再糊弄过去，要认真理解透彻。这里把个人的理解过程记录下来。 参考博客这里先放出来我查看过的资料,如果你看过以后懂了，那么恭喜，下面我写的内容就不用看了。 Python装饰器为什么难理解？ 理解 Python 装饰器看这一篇就够了 装饰器 简单的函数装饰器装饰器在Python中很强大，扩展函数功能而不改变函数的代码，同时能够多次复用。在查看完上面的资料后我个人还有几点没有弄清楚，后来慢慢有了自己的一些理解，记录如下。 函数是变量一定要先理解在Python语言中，一切皆对象，函数也能当变量。那么赋值，作为另一个函数参数这些都不在话下。 123456def foo(): # 最简单的函数 print(&#x27;i am foo&#x27;)bar = foo # 这里注意赋值的时候是函数名字，不能加括号bar() # 这时调用bar(),结果与 foo()相同,类似又给foo函数起了一个别称bar.__name__ # 输出 foo 看完赋值，接着再看一个例子，函数作为另一个函数的参数 123456789def foo(): print(&#x27;i am foo&#x27;)# bar函数接收的参数是另一个函数名 当然func只是一个名字可以用其他名字替换def bar(func): print(&#x27;i am bar&#x27;) func() # 这里调用了传入的函数bar(foo) # 先打印出 i am bar, 然后调用 foo 再打印出 i am foo 上面的函数都很简单，没有返回值，而且函数内部也没有再次定义函数，再看一个函数内部定义函数，然后并返回的例子。 12345678def bar(): def foo(): # 定义函数 foo print(&#x27;i am foo&#x27;) return foo # 返回函数名，注意是函数名并没有括号b = bar() # 用b接收bar的返回值print(b.__name__) # 输出 foob() # 输出 i am foo 上面的例子就是把函数作为返回值返回，这时候返回的函数就会赋值给b，当执行b()的时候即执行了foo()。 装饰器看到这里就可以谈谈装饰器了，装饰器的作用个人感觉就是在要执行的函数外面再加上一层函数来实现一些非核心的功能，这样能够避免破坏原函数的结构，同时还能实现增加功能的需求。 以上面博客中常用的打印日志的代码为例： 12345678910def log(func): &quot;&quot;&quot;打印日志&quot;&quot;&quot; print(&#x27;%s start&#x27; % func.__name__) func() print(&#x27;%s end&#x27; % func.__name__)def foo(): print(&#x27;i am foo&#x27;)log(foo) # 这样就可以在foo函数执行前后完成日志的输出 这样做是可以的，不过缺点上面的博客也提到了，这样做就等于调用了log函数，跟原来的函数foo没啥关系了。同时还有一点注意就是这里直接执行log(foo)即可得到结果，log函数没有返回值，所以也没有赋值给其他的变量。 装饰器的效果装饰器的语法就不多说了，而装饰器的效果是装饰器接收真正的业务函数然后把返回的内容再次赋值给业务函数名，以此来增强业务函数的功能。了解了这个闪腰的操作你就不会纠结为啥装饰器要那么费劲再返回函数。上例子 1234567891011121314151617181920212223def log1(func): &quot;&quot;&quot;打印日志，没有任何返回&quot;&quot;&quot; print(&#x27;%s start&#x27; % func.__name__) func() print(&#x27;%s end&#x27; % func.__name__)def log2(func): &quot;&quot;&quot;打印日志，返回函数&quot;&quot;&quot; def wrapper(): print(&#x27;%s start&#x27; % func.__name__) func() print(&#x27;%s end&#x27; % func.__name__) return wrapper@log1 # foo = log1(foo) 直接输出日志语句def foo(): # 不用调用foo()即可直接输出 print(&#x27;i am foo&#x27;) # 显然这个结果不是我们想要的@log2 # foo = log2(foo) = wrapperdef foo(): print(&#x27;i am foo&#x27;)foo() # 调用foo() 即执行 wrapper() 这时才会输出日志 wrapper函数为什么返回func()其实到这里基本概念就差不多了，但是我在查看教程的时候发现wrapper函数都是直接返回func()，这里一直不明白，直接调用就好了啊，为什么要返回呢。后面我测试了一些例子，发现高手还是高手。 123456789101112131415161718def log(func): &quot;&quot;&quot;打印日志，返回函数&quot;&quot;&quot; def wrapper(): print(&#x27;%s start&#x27; % func.__name__) # func() return func() return wrapper@logdef foo(): print(&#x27;i am foo&#x27;) # 当没有返回值的时候 wrapper函数是否返回基本区别不大@logdef foo2(): return(&#x27;i am foo&#x27;) # 当有返回值的时候 wrapper函数是否返回就有区别了# 如果不用 return func() 则无法得到foo2的返回值，也就无法输出 i am fooprint(foo2()) # 如果wrapper中不使用 return func() 则输出 None 当然如果再想的多点，为什么wrapper返回的是func()，不是func。而log返回的则是函数名wrapper。 如果没有wrapper函数会怎样这个问题我也没想到，在知乎的问答中看到的地址如下：点我，我把问题复现如下： 1234567891011121314151617181920212223def log(func): print(&quot;this is log&quot;) func() return func@logdef foo(): print(&quot;this is foo function&quot;)# 请执行两次，你会惊奇的发现两次执行的结果不一样foo()print(&#x27;***&#x27;)foo()&#x27;&#x27;&#x27;输出内容如下：this is logthis is foo functionthis is foo function***this is foo function&#x27;&#x27;&#x27; 分析一下：其实如果你此时正在郁闷，说明你也被欺骗了，请在第一个foo()前增加一行print(&#39;***&#39;)，真相就会出现。因为在装饰器运行的时候执行如下命令foo=log(foo)这个时候就会输出前2行内容。然后log(foo)返回的func赋值给了foo，所以foo根本没变，执行后就输出一行内容this is foo function。 其实上面的这个例子也解答了，为什么那些教程中的例子把函数的代码内容都放在wrapper函数中，而没有放在最外层的log中。 带参数的装饰器到这里，基本函数装饰器的最简单的使用应该理解差不多了，后面就是在以上基础上再增加功能，如被装饰的函数有参数怎么办，装饰器需要参数怎么办，多个装饰器如何工作。 12345678910111213141516def log(level): def decorator(func): def warpper(*args, **kw): if level &gt; 3: print(&#x27;High&#x27;) else: print(&#x27;Low&#x27;) return func(*args, **kw) return warpper return decorator@log(5)def foo(name): print(&#x27;%s is foolish&#x27; % name)foo(&#x27;aoenian&#x27;) 这里的装饰器的作用是foo = log(5)(foo)，则foo = decorator(foo) = warpper，这时再调用foo(&#39;aoenian&#39;)实则为warpper(&#39;aoenian&#39;)。 这次先分析这么多，还有一些用法后续再补充，如果有更好的理解方法或思路，欢迎留言探讨。","tags":["装饰器"],"categories":["Python"]},{"title":"网件R6400V2固件升级导致小米盒子无法联网","path":"/2019/07/17/mibox-netgear-incompatible/","content":"今天进入路由器更改一些参数，发现路由器提醒有新的固件可以升级，固件版本是1.0.4.78_10.0.55，想着新的固件应该能够让路由器更稳定运行就随手点击更新。然后悲剧就来了。 中午更新的系统，然后就休息了，下午起来后打开小米盒子看电视的时候发现不对了，网络连接都正常，就是看不到视频，提示网络未连接，我就郁闷了。 检查过程 检测家庭其他设备，联网正常 重启小米盒子 重启路由器 重置小米盒子 重置路由 用手机开热点，连接后没有问题，看来确实是路由器的问题 其实在重置小米盒子后就感觉应该是路由器升级固件导致的，不过嫌麻烦想着如果重置能够搞定就不折腾了。但是经过上面的处理后盒子依然无法观看，进行网络诊断提示画报CDN资源访问出现问题，盒子给出的建议是换个路由器，我已经无法表达小米盒子的智能了。 搜索原因在网络查看后发现很多都反应网件路由和小米盒子连接出问题。既然升级固件后出现的，决定重刷固件降级回之前的版本。 降级在降级之前，也想过刷梅林固件，方法比较复杂，而且想到去广告我有树莓派，基本用不到路由器，路由器最好就像不存在一样，稳定最好。最后决定还是降级为官方固件。 在R6400v2这里下载旧的固件版本，我用的1.0.2.62_10.0.46。 按照升级指南，进行操作即可。这里指南中要求是升级后复位，不过我这边升级后即可使用，并不需要复位。 降级完毕后，小米盒子马上恢复，这次经验就是：_如果路由器很正常，就别折腾人家了_。","tags":["netgear","小米","mibox"],"categories":["Net"]},{"title":"Windows系统下MySQL忘记密码后如何重置","path":"/2019/07/15/windows-mysql-forget-password/","content":"这段时间试着用了一下MySQL，谁知道隔得时间长了忘记了密码，在网络搜索后发现可以通过命令重置密码。原文的部分操作并不是太详细，这里把自己的具体操作介绍如下，希望能帮到大家。 系统环境环境是Windows7，MySQL的版本是5.5. 操作步骤 关闭正在运行的MySQL。 具体操作是 ：ctrl+alt+delete—&gt;任务管理器—&gt;结束mysql.exe。 cmd命令打开DOS窗口，转到mysql\\bin目录。 具体操作是 ：cd C:\\Program Files\\MySQL\\MySQL Server 5.5\\bin(默认安装目录，自定义目录类同)。 输入mysqld -nt --skip-grant-tables（注意mysqld与-nt之间有一空格） 再开一个DOS窗口（因为刚才那个DOS窗口已经不能动了），转到mysql\\bin目录（操作同步骤2）。 输入mysql回车，如果成功，将出现MySQL提示符 &gt; 。如果不成功，可能是mysql.exe没关，关闭MySQL以后，再次重复第5步骤 连接权限数据库&gt;use mysql; (&gt;是本来就有的提示符,别忘了最后的分号) 改密码：&gt; update user set password=password(&quot;123456&quot;) where user=&quot;root&quot;; (别忘了最后的分号，这里把密码改为123456) 刷新权限（必须的步骤）&gt;flush privileges; 退出 &gt; \\q 参考博文： MySQL账号密码忘记解决方法 Mysql5.7.18.1修改用户密码报错ERROR 1054 (42S22): Unknown Column ‘Password’ In ‘Field List’解决办法","tags":["password","mysql"],"categories":["Windows"]},{"title":"常见字体的中英文对照表（转载备忘）","path":"/2019/07/14/english-name-of-chinese-font/","content":"在设置vscode的中文字体时发现需要配置相应中文字体的英文名字才能起作用，在网络上搜索后，找到一个比较全面的中英文对照表保存下来作为以后备用。 Windows常见内置中文字体 字体中文名 字体英文名 宋体 SimSun（浏览器默认） 黑体 SimHei 微软雅黑 Microsoft Yahei 微软正黑体 Microsoft JhengHei 楷体 KaiTi 新宋体 NSimSun 仿宋 FangSong OS X常见内置中文字体 字体中文名 字体英文名 苹方 PingFang SC 华文黑体 STHeiti 华文楷体 STKaiti 华文宋体 STSong 华文仿宋 STFangsong 华文中宋 STZhongsong 华文琥珀 STHupo 华文新魏 STXinwei 华文隶书 STLiti 华文行楷 STXingkai 冬青黑体简 Hiragino Sans GB 兰亭黑-简 Lantinghei SC 翩翩体-简 Hanzipen SC 手札体-简 Hannotate SC 宋体-简 Songti SC 娃娃体-简 Wawati SC 魏碑-简 Weibei SC 行楷-简 Xingkai SC 雅痞-简 Yapi SC 圆体-简 Yuanti SC Office安装后新增字体 字体中文名 字体英文名 幼圆 YouYuan 隶书 LiSu 华文细黑 STXihei 华文楷体 STKaiti 华文宋体 STSong 华文仿宋 STFangsong 华文中宋 STZhongsong 华文彩云 STCaiyun 华文琥珀 STHupo 华文新魏 STXinwei 华文隶书 STLiti 华文行楷 STXingkai 方正舒体 FZShuTi 方正姚体 FZYaoti 开源字体 字体中文名 字体英文名 思源黑体 Source Han Sans CN 思源宋体 Source Han Serif SC 文泉驿微米黑 WenQuanYi Micro Hei 版权字体（汉仪） 字体中文名 字体英文名 汉仪旗黑 HYQihei 40S 汉仪旗黑 HYQihei 50S 汉仪旗黑 HYQihei 60S 汉仪大宋简 HYDaSongJ 汉仪楷体 HYKaiti 汉仪家书简 HYJiaShuJ 汉仪PP体简 HYPPTiJ 汉仪乐喵体简 HYLeMiaoTi 汉仪小麦体 HYXiaoMaiTiJ 汉仪程行体 HYChengXingJ 汉仪黑荔枝 HYHeiLiZhiTiJ 汉仪雅酷黑W HYYaKuHeiW 汉仪大黑简 HYDaHeiJ 汉仪尚魏手书W HYShangWeiShouShuW 版权字体（方正） 字体中文名 字体英文名 方正粗雅宋简体 FZYaSongS-B-GB 方正报宋简体 FZBaoSong-Z04S 方正粗圆简体 FZCuYuan-M03S 方正大标宋简体 FZDaBiaoSong-B06S 方正大黑简体 FZDaHei-B02S 方正仿宋简体 FZFangSong-Z02S 方正黑体简体 FZHei-B01S 方正琥珀简体 FZHuPo-M04S 方正楷体简体 FZKai-Z03S 方正隶变简体 FZLiBian-S02S 方正隶书简体 FZLiShu-S01S 方正美黑简体 FZMeiHei-M07S 方正书宋简体 FZShuSong-Z01S 方正舒体简体 FZShuTi-S05S 方正水柱简体 FZShuiZhu-M08S 方正宋黑简体 FZSongHei-B07S 方正宋三简体 FZSong 方正魏碑简体 FZWeiBei-S03S 方正细等线简体 FZXiDengXian-Z06S 方正细黑一简体 FZXiHei I-Z08S 方正细圆简体 FZXiYuan-M01S 方正小标宋简体 FZXiaoBiaoSong-B05S 方正行楷简体 FZXingKai-S04S 方正姚体简体 FZYaoTi-M06S 方正中等线简体 FZZhongDengXian-Z07S 方正准圆简体 FZZhunYuan-M02S 方正综艺简体 FZZongYi-M05S 方正彩云简体 FZCaiYun-M09S 方正隶二简体 FZLiShu II-S06S 方正康体简体 FZKangTi-S07S 方正超粗黑简体 FZChaoCuHei-M10S 方正新报宋简体 FZNew BaoSong-Z12S 方正新舒体简体 FZNew ShuTi-S08S 方正黄草简体 FZHuangCao-S09S 方正少儿简体 FZShaoEr-M11S 方正稚艺简体 FZZhiYi-M12S 方正细珊瑚简体 FZXiShanHu-M13S 方正粗宋简体 FZCuSong-B09S 方正平和简体 FZPingHe-S11S 方正华隶简体 FZHuaLi-M14S 方正瘦金书简体 FZShouJinShu-S10S 方正细倩简体 FZXiQian-M15S 方正中倩简体 FZZhongQian-M16S 方正粗倩简体 FZCuQian-M17S 方正胖娃简体 FZPangWa-M18S 方正宋一简体 FZSongYi-Z13S 方正剪纸简体 FZJianZhi-M23S 方正流行体简体 FZLiuXingTi-M26S 方正祥隶简体 FZXiangLi-S17S 方正粗活意简体 FZCuHuoYi-M25S 方正胖头鱼简体 FZPangTouYu-M24S 方正卡通简体 FZKaTong-M19S 方正艺黑简体 FZYiHei-M20S 方正水黑简体 FZShuiHei-M21S 方正古隶简体 FZGuLi-S12S 方正幼线简体 FZYouXian-Z09S 方正启体简体 FZQiTi-S14S 方正小篆体 FZXiaoZhuanTi-S13T 方正硬笔楷书简体 FZYingBiKaiShu-S15S 方正毡笔黑简体 FZZhanBiHei-M22S 方正硬笔行书简体 FZYingBiXingShu-S16S 内容转载自：CSS font-family中文字体对应的英文名称一览表","tags":["font","english"],"categories":["macOS"]},{"title":"zsh执行python脚本输出的内容最后多了一个%","path":"/2019/06/30/python-zsh-percent-prompt/","content":"zsh执行python脚本出现 %准备重新拾起python，不仅仅因为他简单优雅，更是因为他能够随手处理很多繁杂的事情，而且也是第一个自己特别喜欢的语言。但是因为种种原因，自己错过他的时间太久了。 重新学习、练习编程的时候出现了一个问题，在一次终端执行python脚本的时候输出文本的最后多了一个%，而且终端还着重显示了。 感觉很奇怪，程序的输出并没有这个%，然后我使用了ipython，在里面用run命令执行，发现%并没有出现，看来是终端的问题，在网络上搜索后得到如下结论，简单说就是如果你输出的文本最后没有换行符，那么zsh会在后面加一个反色显示的%，如果你是root用户则会看到#。具体的官方英文解释如下： When a partial line is preserved, by default you will see an inverse+bold character at the end of the partial line: a ‘%’ for a normal user or a ‘#’ for root. If set, the shell parameter PROMPT_EOL_MARK can be used to customize how the end of partial lines are shown. 解决方法：也不能说是解决方法，这也不是问题，如果不想看到，那就在输出的文本最后加个换行符，或者用ipython。 这里多说一点，在编写python脚本的时候，由于经常在Windows和macOS之间切换，所以换行符有点不一样，这里可以使用vscode来更改换行符，右下角直接切换即可。 mac查看文件换行符如果想在windows下查看文件的换行符，可推荐notepad++。mac下面没有好用的软件，vim好像也无法很好的显示。经过搜索，mac下查看换行符的方法如下： 123# 文件名可根据需要进行替换od -c filename.csv# CR as \\r and LF as . 参考： Why is a percent sign at the end of the output of the python script? Why ZSH ends a line with a highlighted percent symbol? Prompting How to view (Windows) line ending characters on Mac OSX","tags":["zsh","percent sign"],"categories":["Python"]},{"title":"日常使用问题汇总（二）","path":"/2019/06/25/problem-collection2/","content":"公共DNS服务器这个本来是个很正常的事情，几乎在上网的过程中应该是忽略不计的事，但是却让我花费了很多时间寻找。 情况大家都懂，就不多介绍了。这里说几个常见的问题（纯属个人观点，欢迎讨论）： 如果你对DNS服务器有了解并且想更换dns配置，不建议选择114（_个人经历过劫持，不知道现在是否还有_），但我有时候会临时使用。好记而且速度还不错。 有特殊功能的DNS肯定见光死，建议不要费力寻找，有条件可以自己搭建。 测试DNS速度建议使用dig命令，有时ping命令并不准确，更有的DNS服务器会拒绝ping。 国外的速度非常慢，建议能不用就不用。国内的几个大的公司凑合找一个用吧。 如果没有特殊需求，不想折腾，运营商默认就很快了（_如果运营商没有给你下套_），少折腾留点时间干点别的，别太较真，容易内伤。 公共dns服务器 收集 gitment 出现 Error: Bad credentials这个好解决，使用你的账户登入然后再登出即可搞定。具体的issues在这里。 vscode更改编程字体不起作用这几天想把vscode的英文字体更改一下，更适合编程，但是首选项-设置里面的用户设置更改了字体后，不起作用，很郁闷。 刚开始以为字体问题，更换其他的依然无效，但是总觉得这种大bug应该不会一直留到现在吧，google了一下，在官方的issues中找到了原因，具体可查看Can’t set editor font，主要的原因是工作区的配置优先级比较高，所以工作区的字体配置覆盖了用户的配置，所以把工作区的字体修改为你想要的就可以看到效果了。 修改的方法有两种，一种直接首选项-设置-工作区即可；另一种直接修改配置文件，具体的位置在工作区中的.vscode目录下面的settings.json文件。 如果想改变中文字体，直接在英文字体后面加上中文字体即可生效。我的配置如下，我使用的中文字体是华文仿宋，可供参考。 1&quot;editor.fontFamily&quot;: &quot;Hack, STFangsong, Monaco, monospace&quot;, macOS使用pandoc命令出现pdflatex not found错误本来想测试pandoc命令把markdown文件导出成pdf的质量如何，但是执行命令后出现pdflatex not found错误，在网络搜索后找到如下解决方法： 1234# 不用安装pdflatex，需要安装mactex$ brew cask install mactex# 重启终端后可查看$ which pdflatex 参考博文： Visual Studio Code 设置中文字体 VSCode–setting CSS font-family 各字体一览表 where-do-i-get-the-pdflatex-program-for-mac","tags":["gitment","dns","pandoc","Bad credentials","vscode font"],"categories":["Collection"]},{"title":"Manjaro安装IBUS输入法","path":"/2019/05/15/manjaro-linux-ibus/","content":"经过一段时间的无聊装机，我又把Linux系统换回Manjaro来了，就是个这么没有原则的人，原因请看这里。中间居然还萌生了要试试LFS的想法（太疯狂了，幸亏及时拉回来，避免了一场惨剧的发生)。 不过现在呢，既然换回Manjaro了，就准备慢慢的把常用的软件和配置过程记录下来，便于以后操作当然也希望刚接触这个系统的人少走一些弯路（_如果能做到那是个很好的事_）。 安装系统的事情简单的说一句，我用rufus做的系统无法引导，后来改用了win32disk可以了。 基本环境 manjaro 选择的KDE桌面 软件安装更新系统1234# 更换源sudo pacman-mirrors -i -c China -m ranksudo pacman -Syy # 换源后更新缓存sudo pacman -Syyu # 更新系统 安装配置ibus-rime由于还不熟练这个系统的命令，这里就用软件安装啦，见谅见谅 打开 Octopi 安装 ibus-rime ibus-pinyin ibus-qt 在你的 home 目录下的 .xprofile 文件中增加如下代码（没有请创建） 1234export GTK_IM_MODULE=ibusexport XMODIFIERS=@im=ibusexport QT_IM_MODULE=ibusibus-daemon -x -d 注销系统（建议重启）应该就搞定了 如果依然无法使用则需要执行 qtconfig-qt4 在 Interface -&gt; Default Input Method，把默认的输入法引擎由 xim 更改为 ibus。 参考博文： Arch 安装中文输入法","tags":["ibus","rime"],"categories":["Linux"]},{"title":"macOS通过FTP管理小米手机文件","path":"/2019/05/12/macos-miui-ftp/","content":"手机和电脑之间的文件传输一直感觉比较麻烦，很多时候我用的是树莓派作为家庭的局域网的文件中转，然后用ES文件管理器。后来ES更新以后感觉不好用就没再安装。而前面把树莓派给重装了以后还没有配置共享。 今天需要处理手机里面的文件，突然想起小米手机自带的文件管理器有一个ftp功能。这次试了一下，感觉还不错，简单的管理都是可以满足的，也不用额外安装手机软件。 具体的使用如下： 手机里面的文件下载 手机端启动ftp服务 保证手机和电脑在同一个wifi下 打开手机的文件管理应用-最上面切换到分类-最后一项远程管理-启动服务 手机端可看到让你在我的电脑的地址栏输入一个ftp地址如：ftp://192.168.*.*:2121 电脑端访问 Windows请通过我的电脑的地址栏访问上一步中出现的地址，即可进行文件管理（_下面的不用看了_） macOS建议浏览器（极大的避免乱码的出现，macOS用finder会出现乱码） 把电脑的文件上传到手机（macOS）macOS的finder以及浏览器只能查看和下载手机中的文件，不能进一步管理如删除、新建等操作。而且新版的系统也把ftp命令删除掉了。 ftp软件方法 这里推荐两个个人用过的：FileZilla cyberduck 第一个是开源软件，第二个是官网下载免费。 如何连接不多说了，只是注意一点编码使用GBK。 命令行方法 这个没有试过，想在命令行使用ftp命令需要安装inetutils，命令如下brew install inetutils。 参考博文： MacOS High Sierra kills terminal FTP? 无线FTP里的中文乱码 OS X 下，最理想的 FTP 工具是什么？","tags":["miui","ftp","Android"],"categories":["macOS"]},{"title":"手机QQ邮箱日历同步问题","path":"/2019/04/30/qq-email-calendar-sync/","content":"随着临时的工作越来越多，记忆空间的有限，考虑使用日历提醒来记录一些重要的事情。一个是避免忘记，另一个是能够在后面的时候查看日程找到处理事件的时间。 日历的选用经过了这样一个过程，首先是用的手机自带的日历，感觉不方便，同步比较麻烦。然后换用了tim，用了一段时间后发现新建日程的时间只能是将来，不能是过去，有时候把已经干完的事情做一个备忘就很麻烦了。 因为需求较低，只用过三种日历，系统自带、Tim日程、QQ邮箱日历。根据我的使用时的需求对比如下： 日历 主要问题 系统自带 更换手机同步不方便 Tim日程 无法同步，日程时间只能设定为将来 QQ邮箱日历 能够满足基本需求（当时以为能够随帐号同步） 最后呢使用了QQ邮箱客户端的日历，基本符合自己的要求，不过当时天真的以为日历记录会随着帐号同步。可是换手机的时候才发现完全不是那么回事。手机客户端和网页客户端无法同步。当然客户端之间也无法同步。 经过一番折腾，连exchange服务都用上了，还给QQ邮箱客户端提了建议，不过回复让我截图之类，就没有再回复，考虑其他的解决方案。没想到最后解决的方法很简单，更改一下设置就可以了。 打开安卓QQ邮箱的客户端，右上角的三个点-设置-应用-日历-开启日历同步-默认日历-更改为QQ日历（_默认是选择系统日历，之前不能同步的问题就在这里_）","tags":["QQ邮箱","同步","电脑"],"categories":["Android"]},{"title":"Windows7+Github+Hexo搭建个人博客","path":"/2019/04/24/windows-hexo-blog/","content":"准备工作 github帐号一枚 注册github，输入用户名，邮箱，密码即可注册。然后新建一个repo，命名为username.github.io其中username替换为你的用户名。建议勾选Initialize this repository with a README&#96;。 仓库建立完成后，即可访问 https://username.github.io 能够看到一个白色页面，写着你的仓库名及仓库描述（如果你建立仓库的时候写了的话） 下载安装node 下载地址：node 建议使用LTS版本，安装完成后打开CMD执行命令 node -v 返回相应的版本号则安装成功。 下载安装git 下载地址：git 安装完成后在CMD中执行命令 git --version 返回相应的版本则安装成功。 安装hexo 安装淘宝npm镜像 由于网络环境的原因，建议更换淘宝npm镜像，具体可查看淘宝 NPM 镜像。 在cmd中执行如下命令进行更换： npm install -g cnpm --registry=https://registry.npm.taobao.org 使用方法：更换完成后，即可用cnpm替换后面命令中的npm。 安装hexo 具体可参照官方网站Hexo。 这里介绍如下： 123456789101112131415161718# 在cmd中执行此命令安装hexo# 如使用淘宝镜像，则记得替换为cnpmnpm install hexo-cli -g# 初始化博客命令，会建立一个blog的目录# blog 只是目录名，可以修改# 可能出现警告 Failed to install dependencies# 不用担心警告继续向下执行即可hexo init blog# 进入blog目录cd blog# 依赖安装，可以替换为cnpmnpm install# 启动hexohexo server 启动hexo以后，在命令行会出现：Hexo is running at http://localhost:4000 这个时候就可以用浏览器访问这个地址，到此本地的博客框架已经搭建完成。 注：CTRL+C 是停止本地的博客服务。 部署 安装 hexo-deployer-git 在blog目录中执行 cnpm install hexo-deployer-git --save 修改hexo配置文件 hexo的配置文件位置：blog&#x2F;_config.yml 建议使用vscode、nodepad++等编辑器打开，不要使用Windows记事本。 具体的配置信息请查看官方网站：配置 这里只简单介绍github的部署配置 打开_config.yml文件，然后找到文件最后的 # Deployment 这一段，更改如下： 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: &lt;repository url&gt; #你的仓库的url 如：https://github.com/aoenian/aoenian.github.io.git branch: master 完成后即可在CMD窗口中切换到blog目录下执行命令hexo clean &amp;&amp; hexo g &amp;&amp; hexo d，输入用户名和密码(密码在终端不会显示)即可部署成功。","tags":["windows","git"],"categories":["Hexo"]},{"title":"Next主题增加Gitment评论系统","path":"/2019/04/14/next-theme-gitment/","content":"2019-06-30更新：object ProgressEvent错误再次出现，更新可用代码，具体可查看文章最后。 刚开始建立博客的时候用了评论系统，由于当时觉得国内的注册太麻烦，就用了DISQUS，不过国内一直无法访问，不知道为啥。后来重装系统后再次建立博客时，就把评论关掉了。 前段时间突然看到了gitment（用github的issue做博客评论系统），觉得这个还不错，就准备试试。然后就有了这篇文章。 准备工作 一个github帐号（当我没说) 用你做博客的github帐号注册一个OAuth application 注册地址点这里，填写内容如下图： 注意： Authorization callback URL用你的博客的域名，其他的可以随便填写。点击注册按钮后会出现Client ID和Client Secret记录下来，等会会用到。 （此步骤可选）新建一个repo，用这个repo的issue来存储博客 我建立了一个blog-comments来存储。 修改主题配置文件修改next主题的配置文件_config.yml，找到 gitment 选项修改如下： 12345678910111213gitment: enable: true mint: false # 建议false count: true # Show comments count in post meta area lazy: false # Comments lazy loading with a button cleanly: false # Hide &#x27;Powered by ...&#x27; on footer, and more language: # Force language, or auto switch by theme github_user: aoenian # MUST HAVE, Your Github Username github_repo: blog-comments # 你存储评论的repo 如果没有新建可以是 你的博客repo 如：aoenian.github.io client_id: &#x27;你的Client ID&#x27; # MUST HAVE, Github client id for the Gitment client_secret: &#x27;你的Client Secret&#x27; # EITHER this or proxy_gateway, Github access secret token for the Gitment proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled 正常情况，到这里就完成了，接下来就是执行hexo clean &amp;&amp; hexo g &amp;&amp; hexo d然后在评论区会显示未开放评论，这时用自己的帐号点击登入，然后验证即可手动开放（每篇文章需要这样做一遍）。 但是我在输入用户名密码登录后，页面出现错误提示：object ProgressEvent，评论登录一直转圈圈，具体原因可查看 https://github.com/imsun/gitment/issues/170 object ProgressEvent问题解决找到next主题中的gitment评论文件 next&#x2F;layout&#x2F;_third-party&#x2F;comments&#x2F;gitment.swig，更改以下代码 1234567891011&lt;!-- 原代码 --&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://imsun.github.io/gitment/style/default.css&quot;&gt;&lt;script src=&quot;https://imsun.github.io/gitment/dist/gitment.browser.js&quot;&gt;&lt;/script&gt;&lt;!-- 更改后 此代码已经无法使用--&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://www.wenjunjiang.win/css/gitment.css&quot;&gt;&lt;script src=&quot;https://www.wenjunjiang.win/js/gitment.js&quot;&gt;&lt;/script&gt;&lt;!-- 请使用下面的替换 2019-06-30更新--&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://billts.site/extra_css/gitment.css&quot;&gt;&lt;script src=&quot;https://billts.site/js/gitment.js&quot;&gt;&lt;/script&gt; 重新清理缓存，部署博客即可留言。 参考博文： Hexo博客主题NexT相关配置 hexo添加gitment评论系统 添加Gitment评论系统踩过的坑 GitHub Pages个人博客搭建流程 2019-06-30更新代码出处博客","tags":["next","评论","gitment"],"categories":["Hexo"]},{"title":"日常使用中一些小问题汇总(一)","path":"/2019/04/03/problem-collection1/","content":"安装Eclipse直接在Eclipse的 官网 下载Eclipse IDE for Java Developers这个版本即可。 然后双击安装，启动后系统会提示安装 旧javaSE6运行环境才能打开 点击 更多信息，下载安装 Java for OS X 2017-001。 树莓派安装you-get平时在线看视频比较少，有时还是喜欢下载下来，树莓派可以担此重任，那就要用到you-get。不过安装之前需要处理依赖： Python 3.2 or above FFmpeg 1.0 or above (Optional) RTMPDump 执行如下命令解决依赖问题 123456789# python3 树莓派已经安装# ffmpeg 安装 (如果视频无需连接也可不安装，如有一些b站的视频)sudo apt install ffmpeg# 安装pip3sudo apt install python3-pip# 安装you-getsudo pip3 install you-get 完成后即可使用you-get命令。 安装虚拟机virtualbox在macOS之前的版本安装虚拟机（virtualbox）并没有出现这种情况，后来mac系统更新后出现的。 主要的问题就是安装过程失败，在最后一步安装失败，提示严重错误，这个主要是 High Sierra comes with a new security feature: Secure Kernel Extension Loading, which blocks kernel extension loading. 解决方法：进入 Preferences &gt; Security &amp; Privacy &gt; General 手动允许。 vscode文本乱码在windows系统下面下载了一些文本文件，拷贝到mac以后在vscode中打开出现乱码，选择文件编码依然没有效果，但是emacs打开没有问题。 解决方法如下：将vscode设置中的”files.autoGuessEncoding”项的值改为true即可。 参考链接： raspberry-doesnt-find-pip3 macOS 10.13 安装Virtualbox失败 VS Code 中文注释显示乱码","tags":["you-get","java","virtual box","vscode"],"categories":["Collection"]},{"title":"树莓派Raspbian系统安装过程","path":"/2019/03/24/install-raspberrypi/","content":"周末了，发现树莓派的pi-hole出问题了，无法提供dns服务了，没有查原因，想着用很长时间了，这次正好重新装一次系统，把之前不用的功能和软件全部处理掉。 英文不错请查看官方的安装指南。 Raspbian系统安装系统下载下载地址这次不装桌面了，基本用不到，占资源，在这里下载Lite系统，建议使用种子下载，很快。 校验镜像因为在Windows上面做的镜像，所以这里的校验软件推荐Hasher，下载地址请点击这里。这个软件能够生成的校验码如下：CRC32, MD2, MD4, MD5, SHA1, SHA256, SHA512, RipeMD128, RipeMD160, ED2K。 系统安装很久没装系统了，现在发现官方还是很贴心的，直接把烧录镜像的软件也推荐了，名字是Etcher，页面中间根据自己的操作系统选择下载，因为这种软件用的频率不高，这里建议大家就不要安装了，选择Portable。 接着就没啥好说的，下载的系统是压缩包，打开Etcher选择压缩包（不用解压），选择U盘（软件会自动识别），然后点击Flash就可以了。 系统完成后注意，先不要插入树莓派启动，因为新版的系统默认没有开启ssh，系统烧录完成，请在系统中boot目录下新建一个名字为ssh的空文件（没有后缀）打开ssh。 系统登录和基本配置系统登录在同一局域网的电脑上用ssh登录到树莓派系统，至于IP可以在路由器上查看。新系统的用户名为pi 密码为 raspberry。官方文档 基本配置登入系统后，执行如下命令 123456# 启动树莓派设置程序 也可用 sudo -i 切换为 rootsudo raspi-config # 更改密码选择 change User Password# 扩展系统空间选择 Advanced Options Expand Filesystem 这里说一下固定IP的配置，在网络找了很多方法，没有成功，最后我用路由器给树莓派分配了固定IP. 遇到的问题在配置的时候会出现如下问题： 12345678perl: warning: Setting locale failed.perl: warning: Please check that your locale settings: LANGUAGE = (unset), LC_ALL = (unset), LC_CTYPE = &quot;zh_CN.UTF-8&quot;, LANG = &quot;en_GB.UTF-8&quot; are supported and installed on your system.perl: warning: Falling back to a fallback locale (&quot;en_GB.UTF-8&quot;). 解决方法如下： 执行 sudo raspi-config 命令，然后选择 Localisation Options - change locale - 勾选 en_US.UTF-8 zh_CN.UTF-8 取消 en_GB.UTF-8 下一步 Default locale for the system environment 选择 en_US.UTF-8 确定","tags":["ssh","stretch"],"categories":["Raspberry Pi"]},{"title":"用U盘安装macOS High Sierra","path":"/2019/03/16/install-macos/","content":"手边有一台10年的macbookpro，配置还行，不过由于安装了windows系统，驱动可能有问题，一直没有声音，触摸板也很奇怪，然后准备重新装回macOS。 安装方式联网自动安装这个是最先想到的方法，因为现在用的mba就是这样重装的，只要连上网络，干会儿其他的事情，等会回来崭新的系统就在迎接你了，不得不说苹果公司在软硬件的结合方面真的很厉害。让人越用越懒，用了以后基本就没再手动装过系统了。 但是重点来了，由于笔记本的年龄太大了，直接开机Command+R找到重新安装macOS，谁知道自动恢复的系统是OS X Mountain Lion，直接提示已经下架，网络上找了解决的方法，说是中国区下架了，把appleID更改为国外即可，经测试更改为美国依然无法自动安装。 这条路堵死了。这里是官方的文档：关于 macOS 恢复功能 手动U盘安装参考官方文档：如何创建可引导的 macOS 安装器 这里需要注意，制作启动U盘需要另外一个可以启动的mac电脑。 具体操作如下： 下载macOS，其实就是在appstore里面下载相应的操作系统，建议使用新的系统。macOS Mojave 和 macOS High Sierra 下载完成后会出现在系统的应用程序里面类似 Install macOS Mojave，这个就是安装器，如果安装器自动打开，退出即可无须安装。 插上U盘（数据自行备份，等会制作的时候就没了），找到磁盘管理程序，打开以后找到U盘，点击抹去，格式选择Mac OS 扩展格式，并把U盘驱动器的卷宗名称设定为MyVolume。 打开终端，然后根据你下载的系统，执行如下命令： 12345678# Mojave:sudo /Applications/Install\\ macOS\\ Mojave.app/Contents/Resources/createinstallmedia --volume /Volumes/MyVolume# High Sierra:sudo /Applications/Install\\ macOS\\ High\\ Sierra.app/Contents/Resources/createinstallmedia --volume /Volumes/MyVolume# Sierrasudo /Applications/Install\\ macOS\\ Sierra.app/Contents/Resources/createinstallmedia --volume /Volumes/MyVolume --applicationpath /Applications/Install\\ macOS\\ Sierra.app 回车后输入管理员密码，然后再次回车，输入Y确认制作启动盘，然后就是等待完成。 把制作好的U盘插入待安装的mac上，然后重启电脑，立即按着Option进入启动磁盘选择的界面，选择你的U盘安装器，然后回车启动。 这时会进入macOS恢复模式，直接选择安装macOS即可安装系统。这里建议先不用连接互联网，直接安装即可。","tags":["Sierra","install"],"categories":["macOS"]},{"title":"小米电视4x与Windows10局域网文件共享","path":"/2019/02/16/mi4x-win10-shar/","content":"过年买了小米电视4x，之前用过小米盒子，感觉小米的电视系统个人还是比较习惯。然后在使用过程中整体还不错，不过有一个问题搞得很头疼，就是局域网共享的问题。 问题描述 家里的电脑和电视都在一个局域网中 电脑是Windows10系统，电脑下载的电影在一个目录中 问题来了，把目录共享了以后，电视却死活看不到共享目录，当然直接在电视里面添加共享电脑的IP地址也是无法获得共享，但是奇怪的是同局域网的其他电脑和手机都能看到 解决方案按照网络上搜索的方案，试了很多一直到最后才解决，不过不清楚是最后那个起作用还是全部在一起的作用。所以我把尝试过的方法倒着写出来。如果有作用就直接跳过后面的操作。 准备工作：目录先共享，这个操作就不多说了。 打开【控制面板】中的【程序】找到【启用和关闭windows功能】，再依次找【SMB 1.0 &#x2F;CIFS 服务器】，勾选，点击【确定】，我就是执行完这一步以后在电视里面看到电脑的共享目录的。 这一步可以查看这里，主要的操作就是启用Guest帐户，更改本地安全策略等。 参考文章： 小米盒子分享电脑文件 ：”无法访问共享设备，请检查共享设置“ 教你小米电视4如何才能访问WIN10电脑共享的文件夹","tags":["文件共享","小米电视4x"],"categories":["Windows"]},{"title":"老台式安装Windows10的问题解决","path":"/2019/02/13/install-win10/","content":"过年回家准备把家里面的台式机重装系统，想想就直接Windows10了，省得以后麻烦。 谁知道都是老司机了，居然翻车了，轻车熟路通过u盘启动微pe系统，然后把Windows10的镜像加载到虚拟光驱，双击打开，启动setup.exe。嘣，弹出对话框提示：**使用其他标明64位的安装光盘…**，当时蒙了，这什么情况，32位的系统还装不了？于是进行了以下的操作。 直达解决方法请点击这里. 尝试过的方法 首先怀疑系统镜像问题，然后通过校验软件核对了i tell you的SHA1，没有问题 然后怀疑Windows10的consumer_edition这个版本有问题，查了一下也是包含pro版本的。 然后网络搜索解决方法，说是启动光盘中sources目录下面的setup.exe，不过双击后提示缺少dll文件，这个目录下的其他包含setup的都点击了一遍，失败。 突然想到难道只有Windows10是这个问题，虚拟机加载Win7的镜像，双击setup成功出现安装界面，这个真的说不过去，系统都是越更新越难用吗 既然系统的默认安装无法使用，那么就用pe里面的安装软件，WinNTSetup这个软件，选择相应的安装镜像，引导驱动器和安装驱动器都选择了**C:**盘，点击安装等待进度条完成，提示完成、重启，出现了windows10的图标，想着总算没问题了，结果就是一直的等待，半个小时，只能强制按电源关机。 因为电脑只有2G的内存跑64位也不是太现实，所以就没有测试64位系统。 安装了Win7，然后换了pe，准备死磕到底，不过按照之前的方法重新试了一遍依然失败。 当进行到这里的时候，我已经准备用Win7了，实在是心力憔悴。就在最后的时刻成功了。拯救我的方案在下面。哈哈！！柳暗花明又一村啊。。。 解决方案这里推荐两个PE系统，一个是之前在用的微PE，另一个是这次安装Win10的优启通。 解决很简单，启动优启通pe的Windows10系统，然后点击EIX系统安装程序然后出现恢复镜像，选择Windows 10 Pro，目标分区选择C盘，点击一键恢复，等待安装即可。 具体为什么成功，我也不知道，就是这么诚实。","tags":["error","install"],"categories":["Windows"]},{"title":"树莓派最佳伴侣pi-hole安装","path":"/2019/02/02/rasp-pi-hole/","content":"树莓派放在那里吃灰又快一年了，平时偶尔想起来更新一下系统然后又给关掉了。不过小机器质量还不错，一直很坚挺。这段时间不是太忙了，想着还是让它发挥一下余热。网络搜索以后发现pi-hole这个东西不错，下面开工。 需要的装备 硬件：树莓派3b+内存卡+网线（个人感觉无线太慢了） 软件：下载并在内存卡烧录Raspbian系统 系统的安装教程在Installing operating这里可以查看，具体就不再多说了，要时刻记得，你都是有树莓派的人了。 安装pi-hole 启动树莓派，执行命令sudo apt update &amp;&amp; sudo apt upgrade -y更新系统。 更新完毕执行如下命令全自动安装pi-hole 12# 安装pi-holesudo curl -sSL https://install.pi-hole.net | bash 安装过程中会出现选择界面，根据自行需求进行选择设置。下面给出个人建议和选择。 出现 Pi-hole automated installer 界面，提示 This installer will transform....ad blocker.点击确定 the pi-hole is free, but powered by your donations. http://pi-hole.net/donate 项目需要大家的捐助（看了一下没有支付宝渠道）。点击确定 the pi-hole is a server so it needs a static ip pi-hole需要固定ip地址，选个局域网IP地址在路由器上绑定一下。点击确定 select upstream dns provider 我选择 cloudflare，查了一下这个dns就是那个1.1.1.1。 接着选择去广告的list，建议使用默认配置，直接确认即可 然后是IPv4和IPV6选择，先按照默认吧。 因为我的树莓派是dhcp获得的地址，如果你也是一样，这里软件会提示你使用你现在的地址作为静态地址。确认。 确认以后软件会提示你，如果你的局域网依然是使用DHCP自动分配地址可能会发成IP冲突，解决的方法可以在路由器绑定或者把让DHCP地址池不包含树莓派的地址（我用的华为的好像这种方法有问题），这里一般不会出现冲突的情况。 基本的配置完成，后面是安装管理软件。 安装web admin，必须安装，图形界面管理 安装web server，必须，不安装上面的不管用，自己看着办 是否开启日志，ok开启 隐私模式选择，这个没有看懂，直接默认了 等待软件安装配置完成，然后重启树莓派，浏览器访问 http://192.168.3.100/admin/ 进行管理。记得换成你的树莓派IP. 在管理面板的左侧有login按钮，点击登录会提示你输入密码，这个是在安装的时候出现的，不过相信你和我一样没看到，在pi的终端执行如下命令 sudo pihole -a -p 重新设置密码。登录后的设置就不再多介绍了。 安装过程遇到的问题这个才是真正需要记录的，估计大部分安装都会遇到。 我在登录管理面板以后，发现pi-hole的状态是没有工作，这时候查看安装记录发现有一个错误，具体错误如下： 12Error: Unable to get latest release location from GitHub[✗] FTL Engine not installed 解决方法： 编辑 /etc/resolv.conf 文件，把里面的DNS服务器地址由原来的 127.0.0.1 更改为 8.8.8.8 或者 1.1.1.1. 然后执行命令 pihole -r 来修复问题，这里建议观察执行后的输出，如果问题依然存在可以再执行一次修复命令。 如果出现 Enabling pihole-FTL service to start 则成功！！。 如果去广告列表也出现下载失败，基本解决方法与上边类似，更换DNS服务器地址，然后多执行几次 pihole -r 即可。_我这里用的阿里的DNS出现错误，更改为1.1.1.1之后解决_。 使用pi-hole把你的盒子的DNS地址更换为树莓派的IP地址即可，享受纯净体验吧！ 参考博文： FTL Engine not installed Install Pi-hole on Raspbian Lite From Scratch","tags":["pi-hole","advertisement"],"categories":["Raspberry Pi"]},{"title":"鼠须管更新0.10.0部署出错解决","path":"/2019/01/24/squirrel-update-error/","content":"今天刚打开电脑然后Rime输入法更新提示弹出来了，真的很惊喜，一直以为这个输入法不会更新了。不过前几个月Windows上的已经更新了，想来macOS上更新也就不奇怪了。Linux上面可能就没这么好运了。 点击更新以后，保险期间重启了电脑，然后重新部署，谁知道居然出错了，但是却不影响输入，对了可能是因为我用的小鹤双拼。 首先找到出错信息的位置，提示出错信息在$TMPDIR中。在终端中输入env命令查看$TMPDIR的具体位置。通过终端进入相应的目录后，可以执行open .命令在当前目录打开Finder查看。 查看rime.squirrel.ERROR里面的出错信息发现如下提示： 1234567# 意思就是提示好多输入方案需要的文件不存在&quot;stroke.reverse.binluna_pinyin_simp.prism.binluna_pinyin_tw.prism.bin...&quot;No such file or di rectory 解决方法在这里主要是因为新版精简了安装包，如果需要预设输入方案或其他输入方案请执行以下命令 1234# 安装预设输入方案curl -fsSL https://git.io/rime-install | bash -s -- :preset# 安装双拼方案curl -fsSL https://git.io/rime-install | bash -s -- :preset double-pinyin 其他的输入方案可参考plum。","tags":["error","Rime"],"categories":["macOS"]},{"title":"vscode配置js编程环境","path":"/2019/01/19/vscode-debug-js/","content":"新版的vscode（1.30以上版本）不用配置即可调试js代码，不过建议安装插件Code Runner方便代码执行。然后编辑的时候如果习惯Tab跳出右括号，那你不能错过插件Tab out。 本来准备去年12月底写这个博客，那时候vscode在调试js文件的时候还需要launch.json这个配置文件。后来耽搁了一段时间，一直没有完成。而当我更新了新版本的vscode以后发现根本不需要任何配置就可以调试js文件了，不得不佩服软件的更新速度。当然这篇博文就没有再写下去的必要了。 最后，如果你还在用着老版本而且不想更新那么可以参考vscode如何F5运行调试多个js文件","tags":["vscode","debug","javascript"],"categories":["Editor"]},{"title":"VirtualBox虚拟系统使用共享文件夹和摄像头","path":"/2019/01/08/virtualbox-install-extpack/","content":"macOS用着挺好，不过Windows依然离不了，所以虚拟机还得用。为啥不用双系统？切换太麻烦。而且浪费空间，本来硬盘就不大。 虚拟机如果没有特殊要求，个人推荐VirtualBox，安装包个头小，而且免费使用，稳定性也不错。 具体的安装过程就不说了，你都用上虚拟机了，这点问题应该能解决，给大家一个下载系统的网站 I Tell You。 这里要说的就是如何扩展虚拟机的功能实现与主机文件共享并在虚拟机中使用摄像头。 环境 macOS 10.13.6 VirtualBox 5.2.6 虚拟系统 Windows7 专业版 操作方法主要就是安装增强功能。 完成虚拟系统的安装后启动Windows系统，然后在VirtualBox的菜单栏单击设备-增强功能。 然后Windows系统就会弹出VirtualBox Guest Additions的光盘自动运行界面，然后点击运行VBoxWindowsAdditions.exe即可。 安装完成后关闭虚拟系统，选中虚拟系统右键设置，选择共享文件夹。 然后添加共享文件夹（_右边有一个绿色的加号的文件夹图标_）。选择路径（_注意这个共享目录是mac中的_），键入共享名称，勾选自动挂载。这里注意共享文件夹是固定分配。 完成后启动Windows，在资源管理器中—计算机下即可看到共享目录（_以网络驱动器形式展现_）。 如果你没有在Windows中使用摄像头的需求就可以结束了。如果需要则继续操作。 在virtualbox下载与你的虚拟机版本相同的extpack来使用mac的摄像头。 如我的VirtualBox版本为5.2.6，则下载Oracle_VM_VirtualBox_Extension_Pack-5.2.6-120293.vbox-extpack。 下载完成后安装，然后打开虚拟系统，点击VirtualBox软件菜单中的设备即可看到摄像头（Webcams）。 注意：VBoxGuestAdditions_5.2.6.iso也可下载后安装。下载地址同extpack地址。 参考： Virtualbox 虚拟机支持硬件摄像头 VboxDownload","tags":["虚拟机","增强功能"],"categories":["macOS"]},{"title":"Windows7安装VirtualBox失败解决方法","path":"/2019/01/05/virtualbox-install-error/","content":"由于需要在windows下面使用linux环境，所以就想着用一下虚拟机做一个完整的系统。cygwin之类也用过，确实无法驾驭。 不如虚拟机来的完整和直接。 不过安装的时候遇到了一些问题，开始是安装不上去，接着是安装以后无法启动，我就郁闷了，在自己的电脑上从没遇到过的情况，一到别人那里就出问题。搜索了一下问题解决了，备忘如下。 安装的virtualbox版本是5.2.8-121009，系统是Win7旗舰版，后来的虚拟机版本好像有时候就没有这种问题。 如果安装不成功，查看电脑中是否有AutoCAD，如果确实需要安装虚拟机则需要卸载AutoCAD。 进入 控制面板-卸载程序-卸载 AutoCAD2007 再次安装虚拟机 安装完成后如果启动出问题，建议查看软件出错提示以后再做处理。如果出现获取VirtualBox COM对象失败，则可以尝试按照下面的方式修改注册表，再次尝试启动 win+r 输入 regedit 回车 修改注册表 HKEY_CLASSES_ROOT\\CLSID{00020420-0000-0000-C000-000000000046} InprocServer32 的值修改为 C:\\Windows\\system32\\oleaut32.dll HKEY_CLASSES_ROOT\\CLSID{00020424-0000-0000-C000-000000000046} InprocServer32 的值修改为 C:\\Windows\\system32\\oleaut32.dll 有时候无法启动也可能是安装的虚拟系统与之前的虚拟系统文件重名，具体要注意软件的错误提示","tags":["error","virtualbox","注册表"],"categories":["Windows"]},{"title":"2019年的小目标","path":"/2019/01/01/2019-goal/","content":"又是新的一年，很多时候总觉得时间很多，可回顾一年发现最少的还是时间。新的一年要更加珍惜。 写下新年的期望和目标，在新的一年督促自己。 每周一篇博客 做事情不要太纠结 重新培养阅读习惯（怀念没有网络和手机的时光） 很多事情缺少的不是方法，而是要把寻找方法的时间用在做事上 英文（一直是最恐怖的-_-!） 先写到这里吧，估计写太多，最后又作废了。其实也不是小目标了，应该是很长时间需要努力的方向。","tags":["goal"],"categories":["杂谈"]},{"title":"vscode编辑markdown文件并导出为PDF格式","path":"/2018/12/24/vscode-markdown-to-pdf/","content":"之前一直用vscode编辑md文件，然后在chrome预览导出pdf文件。有段时间没用了突然发现chrome无法预览md文件了。把md文件拖入浏览器就会直接下载，而不能出现预览。 更有意思的是我写了三个md文件，其中有一个可以预览，另外两个不管是改名字换目录都不行，拖入浏览器就是直接把原文件又下载一遍，网络搜索了一下几乎没人遇到，可能运气不好。不过搜索过程中了解到vscode可以直接导出，索性就不再用chrome的插件处理md文件了，直接用vscode。 markdown-pdf 插件的使用 安装Chrome或者Chromium，如果已安装可跳过此步骤。 在vscode中安装插件Markdown PDF，重启vscode后那个插件会自动下载Chromium，右下角会有个提示，不过放心它是不会成功的。 如果没有任何设置就直接在md文件右键执行Markdown PDF: Export(pdf)，十有八九会出现TypeError: Cannot read property &#39;newPage&#39; of undefined，ERROR: puppeteer.launch()，Error: spawn EACCES这些错误，如果没有提示且pdf正常导出则不用继续往下看了，直接用就可以了。 如果出现了第三步的错误提示，打开vscode的首选项-设置，然后在搜索框中搜索markdown-pdf.executablePath，点击右边的在 settings.json 中编辑。 在用户配置文件中写入如下配置： 1234// Mac下面Chrome的位置&quot;markdown-pdf.executablePath&quot;: &quot;/Applications/Google Chrome.app/Contents/MacOS/Google Chrome&quot;,// Windows 请根据自己系统情况配置&quot;markdown-pdf.executablePath&quot;: &quot;C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe&quot; 保存并重启vscode。试试吧！！ 如何使用自定义css在mac下面导出的pdf文件个人感觉还是很不错的，不过在windows下面导出后汉字的字体大小不一，而且颜色也有深有浅，这样就需要我们使用自定义css。 同样在setting.json里面加入如下配置 12// 路径和css文件名以你的文件为准&quot;markdown-pdf.styles&quot;: [&quot;E:\\\\css\\\\markdowncss.css&quot;], css文件可以去github上面或者网络找一下，选一个自己喜欢的。 PS：这里推荐一个md文件语法检查插件markdownlint，还有就是打开vscode的查看-切换控制字符可以看到一些误输入的奇怪的符号。 参考文章： can not work with lastest VS Code version markdowncss_github_style_blue_by_jwsky","tags":["vscode","markdown","pdf"],"categories":["Editor"]},{"title":"Chrome禁止“请停用以开发者模式运行的扩展程序”的提示","path":"/2018/12/22/chrome-disable-developer-mode-extensions/","content":"在Windows7系统下的Chrome里面使用开发者模式导入了一个插件，就是为了登录一下最大的那个搜索引擎（传送门）。然后每次登录就会出现“请停用以开发者模式运行的扩展程序”的提示，而且必须点击一下才能关掉。 去网络搜索了一下，操作还挺复杂，具体的操作步骤等会我写在下面，不过如果懒得自己操作，国外有高手写了批处理文件，我也会放在下面。 第一种方法如果你经常使用自己导入的插件，建议使用Chrome Canary版本，这个是没有提示的，而且图标是金色的哦。下载地址可以看一下这里 第二种方法如果你想使用稳定版，但是又不想看到那个提示，请按照下面的操作处理。 如果你不想自己操作，请下载批处理文件DevWarningPatch.bat 请使用管理员模式运行。如果觉得不安全，或者文件失效请移步文末的参考文章，那里是代码的原地址。 手动操作步骤如下： 转自：stackoverflow 建议大家还是查看原文。下面是引用内容 you can patch it manually using HIEW: exit Chrome fully by pressing Ctrl+Shift+Q and terminating any chrome.exe processes in Windows Task Manager’s Processes tab (it’s a second tab, not the default tab). open chrome.dll in hiew press Enter to switch the view press F7, paste ExtensionDeveloperModeWarning in the first input field, press Enter press F3 to enter the edit mode type 00 press F9 to save press Left to position the cursor on 00 press F6 to find the reference look for cmp eax,3 or cmp eax,2 on the screen and the adjacent few pages up and down navigate the cursor using Up and Down to that line’s binary code (a column on the left) press F3 to enter the edit mode navigate the cursor using Left and Right to 03 or 02 in that line’s code type 09 press F9 to save Close hiew, otherwise Chrome won’t launch. 参考文章： How to get rid of “disable developer mode extensions” pop-up","tags":["Windows","chrome developer","disable"],"categories":["Web"]},{"title":"macOS下git忽略.DS_Store文件","path":"/2018/12/19/git-ignore-config/","content":"平时用git不是太多，一般就是保存一下配置文件和博文，所以有时候在提交的时候就把一些macOS的隐藏文件删除以后再跟踪提交。不过随着使用频率增加了一点点（主要是强迫自己每周写一些内容，不知能否坚持），然后觉得每次这样做就太浪费人力了。 然后就在项目中写了个.gitignore文件，不过这个文件管理的范围太小，只能管本层目录，子目录下面的就无能为力，而且每个项目都要有一个（之前不知道还有全部忽略这种玩意-_-!)，然后在网络上找到添加全局忽略的方法，具体操作如下： 在你的home目录下面建立.gitignore_global文件，内容如下： 12345678# .gitignore_global.DS_Store.DS_Store?*.swp._*.Spotlight-V100.Trashes 如果大家需要忽略更多的文件，可以直接写入即可。 然后在你的home目录下的.gitconfig文件中引入上面的.igtignore_global文件。 注意： 如果目录下面找不到.gitconfig配置文件，可能你还没有配置git，可以执行如下命令 12git config --global user.name &quot;xxx&quot; # xxx 是你的用户名git config --global user.email &quot;xxx@xx&quot; # xxx@xx 是你的邮箱地址 在.gitconfig里面加入内容如下： 12345[user] name = aoenian email = aoenian@zoho.com.cn[core] excludesfile = /Users/aoenian/.gitignore_global 里面的home目录的名字要替换成你自己的 参考博客： https://www.jianshu.com/p/9386124cb5b5","tags":[".DS_Store","gitignore"],"categories":["macOS"]},{"title":"Java的replaceAll方法","path":"/2018/12/05/java-replaceall/","content":"今天遇到了一个js的题目，题目主要的意思就是要把字符串替换成用连字符连接的单词，其中不好处理的是字符串中单词的分隔不同。主要是以下几种 “thisIsTheBook” 以大写字母分隔 “This_is_The_book” 以下划线分隔 “this,is,The,book” 以逗号分隔 “this Is the book” 以空格分隔 如果按照测试数据通过这个题目没有太大的难度，判断好间隔的符号然后替换为-，再转换为小写即可。不过在程序的编写过程中遇到了replaceAll()的一些使用问题，具体记录如下： thisIsTheBook 这种情况需要把大写字母替换为-再加上替换的大写字母。 这里面使用到了正则表达式中的小括号(pattern)，这个圆括号的作用是匹配pattern并获取这一匹配。当然在java中可以通过$1 $2 ... $9来获取这一匹配。 具体此题目使用示例： s.replaceAll(&quot;([A-Z])&quot;,&quot;-$1&quot;); 匹配特殊符号如* + .等 因为这些符号在正则中都有使用，如果直接使用则会报错在使用中需要告诉程序你需要替换的是字面的*号。这里就需要转义。split()方法同样也存在这种问题。 具体使用示例： String str = s.replaceAll(&quot;\\\\*&quot;, &quot;-&quot;); 参考： replaceAll in a regex with $1","tags":["replaceall","正则"],"categories":["Java"]},{"title":"macOS系统在u盘中文件搜索功能不起作用","path":"/2018/11/21/macos-file-search-not-work/","content":"由于u盘的文件比较多，想用finder搜索一下，但是发现不管怎么换关键字没有任何反应，后来测试了一下，明明看到文件就在目录下面，但搜索后就是没有结果，不过硬盘上的文件就可以搜到。 为了排除u盘本身的问题，我在windows下面试了一下是可以搜索得到。那么就要寻找解决方法了，在网络搜索了一下，找到了解决的方法。具体操作如下： 我的macOS版本High Sierra 10.13.6 系统偏好设置——聚焦(Spotlight) 切换到隐私选项卡，然后有一个防止聚焦搜索这些位置把你的u盘添加到此列表中 还是在此列表再把你的u盘删除 不是吃饱了撑得 -_-! 然后退出系统偏好设置，重新尝试搜索，问题应该就能解决了 我猜测以上操作的主要目的应该是让系统重新生成索引，这可能也是为什么无法搜索u盘的原因，因为有时候在windows下面的时候我就会把mac下生成的隐藏文件给删除掉，可能会误删除索引文件。 参考： 文件搜索不起作用","tags":["not work","file search"],"categories":["macOS"]},{"title":"macOS如何让视频按照时长排序","path":"/2018/10/11/macos-video-sort-by-duration/","content":"今天在处理视频的时候需要按照视频的时长进行排序，因为视频比较多而且格式也有三四种，不能简单的按照视频文件大小排列。 开始以为只能使用命令或其他的软件辅助，搜索后发现对Finder简单的设置就能实现。具体操作如下： 打开Finder（访达）- Movies（影片）目录，切换视图方式为列表 在名称上面右键，弹出的菜单中就有持续时间，勾选即可看到目录下面的视频文件的时长 注： wmv 这种神奇的格式不支持 完成，如果到这里就结束，那么你肯定觉得我是个大骗子，这谁不会。如果我的视频文件在u盘或者移动硬盘，还得拷贝到电脑里面来看？就Mac那点地方能放多少东西？而且这个排序成本也太高了吧。 下面才是重点： 如果想在移动存储设备里面也查看视频时长，请在相应的设备中建立名称为 Movies 的目录并把视频文件移动进去即可。 也就是说只要这个目录名称是 Movies 那么这个目录就可以通过视频时长排序-_-!。","tags":["sort","duration"],"categories":["macOS"]},{"title":"Emacs配置-Org导出HTML代码高亮显示","path":"/2018/10/04/org-export-html-highlight/","content":"前端时间一直用Emacs编辑Org模式的文档，然后导出html文件用浏览器导出为pdf。但是发现导出的html文件没有代码高亮，搜索了一下，发现方法比较简单，安装 htmlize.el 包然后在配置文件启用即可。 具体操作如下： 第一种方案： 去htmlize.el的 github地址 下载 htmlize.el文件放在你的 ~/.emacs.d 中。也可以直接执行如下命令直接下载。wget https://raw.githubusercontent.com/hniksic/emacs-htmlize/master/htmlize.el 然后在配置文件中加入 (require &#39;htmlize) 启用插件。 第二种方案：（直接安装，但我没有试过） 打开Emacs然后输入 M-x package-refresh-contents 刷新包信息 然后输入 M-x package-list 列出可安装的所有包，然后用 C-s 查找一下 htmlize.el 点击安装即可。 第二种方案需要配置包管理，我使用的子龙山人的配置，具体教程在 Master Emacs in 21 Days 也可以使用我的配置文件，位置在 myconfigfiles","tags":["Org","highlight"],"categories":["Editor"]},{"title":"控制打印的css样式","path":"/2018/09/25/control-print-style/","content":"前段时间遇到一个问题，有很多图片然后需要打印出来，但是呢图片太大放在word里面以后发现只有一半在打印区域，剩下的都出去了。 首先想到的解决方法就是找一下如何在word里面批量修改图片大小，你别说还真有，但是步骤很复杂，当然复杂不怕，关键是起作用就行。不过里面有个操作很可怕，里面需要图片的插入方式是 四周型，我一看我的这个word文件，里面的图片都是嵌入式，一张张改类型还不如我直接一张张改大小得了。对了， word里面的格式刷好像对图片也没用。 然后突然想到，只是为了打印出来，可以使用html和css控制样式，然后用浏览器输出为pdf。这里面遇到了问题，在页面中的样式调整完成，但是一旦用浏览器打印pdf文件，样式就全没了。后来搜索后才知道需要引入控制打印的样式。 具体操作如下： 1&lt;link rel=&quot;stylesheet&quot; href=&quot;print.css&quot; media=&quot;print&quot; /&gt; 使用 media 属性来标明样式为打印服务。 其他的方法和注意事项，大家可以参考下面的博客。 css控制print打印样式","tags":["front","web"],"categories":["Net"]},{"title":"VSCode建立用户代码片段","path":"/2018/08/13/vscode-user-snippet/","content":"编辑器尝试过很多，感觉没有特别适合的，当然我并不是深度用户，所以不做过多的评论。遇到VSCode以后感觉还是蛮不错，从一个普通用户的角度来说。 现在主要用的编辑器是两个 Emacs 和 VSCode，前者用来写org文件，后者编辑修改一些小程序和配置文件。 遇到这个问题是因为在编写简单的 HTML文件时使用VSCode自带的补全有些内容暂时不需要，所以想自己写一个类似&#x3D;emmet&#x3D;官方的自动补全，试了一下操作很方便，这里做个记录备份。 在code中如果编辑html文件，直接输入 html:5则可以自动补全页面的基本标签，具体如下： 123456789101112&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt; 不过里面的 lang 默认是 en ，而且做个简单的页面也不需要那么多 meta数据，当然放在那里影响也不大，看个人需要。 既然不用软件自带的，那么咱们就创建一个自己用的代码片段。找到文件-首选项-用户代码片段 在弹出的输入框中输入 html 回车，会打开一个html.json 的文件，在这里面编辑就可以了。 注意：代码需要在两个大括号之间，不能超出。下面是我自己的代码片段，供大家参考。 123456789101112131415&quot;Simple html5 head&quot;: &#123; &quot;prefix&quot;: &quot;myhtml&quot;, &quot;body&quot;: [ &quot;&lt;!DOCTYPE html&gt;&quot;, &quot;&lt;html lang=\\&quot;$&#123;1:en&#125;\\&quot;&gt;&quot;, &quot;&lt;head&gt;&quot;, &quot; &lt;meta charset=\\&quot;UTF-8\\&quot; /&gt;&quot;, &quot; &lt;title&gt;$&#123;2:Document&#125;&lt;/title&gt;&quot;, &quot;&lt;/head&gt;&quot;, &quot;&lt;body&gt;&quot;, &quot; $3&quot;, &quot;&lt;/body&gt;&quot;, &quot;&lt;/html&gt;&quot;, ]&#125; 具体的解释文档在相应语言的 json 文件中，这里简单做个介绍。 第一行是你的这个代码片段的描述第二行很重要，是你的这个代码片段的激活口令第三行一直到最后body结束，是你需要插入的代码。其中如果你插入的代码不需要换行，或者你使用换行符 换行，则不需要[]符号把内容括起来。直接一个双引号把内容包住即可，当然内容里面的双引号需要转义。$num 则为 tab 键跳转位置， $&#123;num:string&#125; 则是默认用 string占位","tags":["vscode","snippet"],"categories":["Editor"]},{"title":"Next主题样式配置2-代码块显示程序语言名字","path":"/2018/08/09/next-theme-customized-2/","content":"一直想在代码块上面显示这个代码块使用的程序语言的名字，但是没有找到好的方法，这两天在搜索的时候发现了一个高手的博客里面介绍了这个方法，就借鉴了过来。 因为自己的水平有限，后端基本啥也不会，所以原理就不多说了（其实看不懂），这里把步骤、代码以及一些小的修改记录如下。 首先在 next/scripts 目录下面新建一个javascript文件命名为codeblock.js 文件,代码如下： 123456789101112131415161718192021var attributes = [ &#x27;autocomplete=&quot;off&quot;&#x27;, &#x27;autocorrect=&quot;off&quot;&#x27;, &#x27;autocapitalize=&quot;off&quot;&#x27;, &#x27;spellcheck=&quot;false&quot;&#x27;, &#x27;contenteditable=&quot;true&quot;&#x27;]var attributesStr = attributes.join(&#x27; &#x27;)hexo.extend.filter.register(&#x27;after_post_render&#x27;, function (data) &#123; while (/&lt;figure class=&quot;highlight ([a-zA-Z]+)&quot;&gt;.*?&lt;\\/figure&gt;/.test(data.content)) &#123; data.content = data.content.replace(/&lt;figure class=&quot;highlight ([a-zA-Z]+)&quot;&gt;.*?&lt;\\/figure&gt;/, function () &#123; var language = RegExp.$1 || &#x27;plain&#x27; var lastMatch = RegExp.lastMatch lastMatch = lastMatch.replace(/&lt;figure class=&quot;highlight /, &#x27;&lt;figure class=&quot;iseeu highlight /&#x27;) return &#x27;&lt;div class=&quot;highlight-wrap&quot;&#x27; + attributesStr + &#x27;data-rel=&quot;&#x27; + language.toUpperCase() + &#x27;&quot;&gt;&#x27; + lastMatch + &#x27;&lt;/div&gt;&#x27; &#125;) &#125; return data&#125;) 然后找到 next 主题下面的 highlight.styl 文件，具体位置在next/source/css/_common/components/highlight/highlight.styl 在文件的最下面添加如下代码： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253.highlight-wrap[data-rel] &#123; position: relative; overflow: hidden; border-radius: 5px; box-shadow: 0 10px 30px 0px rgba(0,0,0,0.4); margin: 35px 0; ::-webkit-scrollbar &#123; height: 10px; &#125; ::-webkit-scrollbar-track &#123; -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); border-radius: 10px; &#125; ::-webkit-scrollbar-thumb &#123; border-radius: 10px; -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5); &#125; &amp;::before &#123; color: white; content: attr(data-rel); height: 38px; line-height: 38px; background: #21252b; color: #fff; font-size: 16px; position: absolute; top: 0; left: 0; width: 100%; font-family: &#x27;Source Sans Pro&#x27;, sans-serif; font-weight: bold; padding: 0px 80px; text-indent: 15px; float: left; &#125; &amp;::after &#123; content: &quot; &quot;; position: absolute; -webkit-border-radius: 50%; border-radius: 50%; background: #fc625d; width: 12px; height: 12px; top: 0; left: 20px; margin-top: 13px; -webkit-box-shadow: 20px 0px #fdbc40, 40px 0px #35cd4b; box-shadow: 20px 0px #fdbc40, 40px 0px #35cd4b; z-index: 3; &#125;&#125; 保存收工，这样基本就完成了。重新启动hexo博客你的代码块的上方应该就会出现代码中的语言名称。 一个小问题的解决，我这边出现了，如果大家也出现可以参考一下，在完成js文件配置以后我发现我的代码块上方有一部分代码被盖住了，下面呢出现了一部分白条，感觉整个代码块上移了一样。 通过开发者工具查看以后，调整了代码块的 margin 搞定了。修改的内容也在highlight.styl 文件中，代码如下： 123456789$code-block &#123; overflow: auto; margin: 34px 0px 0px 0px; // 把margin-top调整为34px就可以了 padding: 0; font-size $code-font-size; color: $highlight-foreground; background: $highlight-background; line-height: $line-height-code-block;&#125; 今天在写其他博文的时候发现代码有个bug，无法正确显示 JSON文件，现在还未找到解决方法。 参考博文 自定义 Hexo博客代码块(博客中简单的介绍了一下原理，大家可以看看)","tags":["next","code block"],"categories":["Hexo"]},{"title":"Next主题样式配置1-行内代码、下划线、字体","path":"/2018/08/06/next-theme-customized-1/","content":"使用Github Pages做博客以后，一直用的主题就是Next，中间换过一次，但是太折腾了，后来又换回来了。 不过在使用过程中修改了一些配置和样式，让有些地方更适合自己，这里把配置记录一下，以便以后参考。 这篇博文没有介绍特效的增加，一个是很多博客已经有这方面的介绍，二是个人觉得博客还是内容为主，主要原因还是懒。 样式的主要处理目的是使文章更加易读，其他的这个主题已经做的很好了。 行内代码背景颜色加深有一次我在给别人看我的博文的时候发现的，由于行内代码的背景色太浅，所以他没有注意到需要强调的特殊代码，然后我Google了一下，修改了行内代码的背景色。 **这篇博文修改的样式文件位置: next-source-css-_variables-base.styl** 帮你挑选颜色的网站： color-hex 找到 Code &amp; Code Blocks 下面的 $code-background 对应的参数，不过由于$gainsboro 是变量，所以你要到文件的开始找到这个变量的位置。 变量 原值 更改后 $gainsboro #eee #bbb 加深页面内链接下划线的颜色和上面基本同样的操作，不过更改的变量换了。需要更改的是$link-decoration-color 的颜色。 变量 原值 更改后 $grey-light #ccc #4d4d80 这个颜色在你的博客页码的背景色也用到。可以根据自己的情况修改。 字体的修改由于感觉代码块的字体有点宽，所以就像修改紧凑一点，不过这个不需要修改base.styl 文件，而是修改主题的 _config.yml 文件。 找到 font 选项，修改如下代码： 12345678910111213font: enable: true host: /fonts logo: external: true family: Georgia codes: external: true family: Inconsolata for Powerline size: 16 并不是所有字体都能够起作用，建议选用网络安全字体。选用的字体文件请放在 next-source-fonts 中。","tags":["next","style"],"categories":["Hexo"]},{"title":"惠普Pavilion笔记本安装Windows7","path":"/2018/08/05/hp-pavilion-install-win7/","content":"注意：惠普的Pavilion系列的CPU可能Win7不支持，触摸屏Win7也不支持，还有就是笔记本的功能按键可能也不行，如果Win7不是必需，建议安装Win10系统。 如果一定需要安装Win7则需要更改BIOS，不然系统安装完成重启依然无法进入Win7系统。 操作方法： 开机按F10进入BIOS-系统设置-启动选项-安全启动模式把安全启动模式禁用。","tags":["Win7","pavilion"],"categories":["Windows"]},{"title":"Fedora28去掉Chrome/Opera浏览器的默认密钥环","path":"/2018/07/18/fedora28-erase-default-keyring/","content":"安装浏览器的时候弹出的设置默认密钥，建议大家不要设置，不过既然你看到这篇文章估计已经晚了。 那么解决方法如下： 打开终端 执行命令 seahorse在弹出的窗口中右键点击默认密钥环，然后选择更改密码，输入之前设置的密码，新密码置空，确认即可。","tags":["fedora","keyring"],"categories":["Linux"]},{"title":"Fedora28配置记录2——系统美化","path":"/2018/07/14/fedora28-config-2/","content":"接上篇，搞定输入法然后想把系统整得好看一点。 输入法安装如果对中文输入法需求不高，ibus的自带拼音输入也就够用了，不过这个经常打交道的家伙还是来个顺手的更好。这里依然推荐Rime中州韵输入法，安装很简单一条命令就可以处理，而且如果你用全拼的话基本不用配置即可使用，需要了解的是输入法的配置快捷键是CTRL+` 1sudo dnf install ibus-rime 图标和主题配置 安装主题软件 12# 主题配置软件 xfce-theme-managersudo dnf install xfce-theme-manager.x86_64 安装此软件需要添加 RPM Fusion 源 获取安装主题和图标 访问网站xfce-look选择喜欢的主题文件和图标文件，下载解压缩后放在系统相应的目录下 项目 位置 我的选择 主题 /usr/share/themes/ axiom 图标 /usr/share/icons/ Faenza 如果配置软件无法识别图标，可能是图标目录中有很多套图标，把选中的一套拷贝出来即可。 打开 Setting-Xfce Theme Manager 即可配置。 终端配色和字体 终端配色 我使用的是 Solarized配色，本来以为需要到github下载配置，不过不需要了。 打开终端 Edit-preferences-colors-presets-Solarized(dark) 完成 终端字体 下载powerlinefonts选择自己喜欢的字体，我使用的是Inconsolata for Powerline，如果你需要安装所有的字体，则克隆项目后直接执行安装文件即可。 我只使用这一个字体就没有安装那么多，单独安装方法： 拷贝字体文件到 ~/.local/share/fonts/ 如果没有自己建一个 执行命令 fc-cache -f ~/.local/share/fonts 即可 参考博客 XFCE桌面环境美化，fedora27系统","tags":["fedora","system beauty"],"categories":["Linux"]},{"title":"Fedora28配置记录1——基本配置","path":"/2018/07/07/fedora28-config-1/","content":"从使用manjaro以后感觉对中文的支持不是太好以后，就想换一个发行版，然后想到了fedora。 之前虽然也用过但是那时候觉得不是太好，好像连exfat格式的u盘都无法识别。现在趁着这个机会再装一次看看。 安装系统依然选择轻量级桌面，这次不再用lxde，选择了xfce，主要是相对kde和gnome要轻量，同时呢也有主题、图标的配置，终端的配色支持都有。比较折中。 xfce镜像记得下载完成后验证镜像是否完整，写入u盘的软件我使用的是 Win32 DiskImager 建议安装的时候选择中文版，这样输入法中文字体都会有，可以安装完成后再修改为英文。 系统更新安装rpmfusion-free什么是RPM Fusion。配置介绍Configuration 12# Fedora 22 and later 安装命令sudo dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm 更新系统1234# 不用更换软件源，官方的就很快# 切换root用户或使用sudo命令dnf makecachednf update 更新完成系统后能够直接打开 exfat 格式的u盘 软件安装配置安装12# wine软件根据个人需要，如果你不用qq可以不安装dnf install zsh git vim wine oh-my-zsh项目地址：oh-my-zsh 安装方法：检查系统是否安装 curl 或 wget命令，并选择相应的命令执行，如果两个命令都没有那就最好装一个。 1234# wgetsh -c &quot;$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)&quot;# curlsh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot; 安装完成后记得切换默认shell为zsh，执行命令 chsh -s /bin/zsh需要注销才能起作用 Tim或QQ我使用的是github上面的Wine-QQ-TIM项目。直接下载Appimage版本的TIM或者QQ。 下载地址： Wine-QQ:http://yun.tzmm.com.cn/index.php/s/XRbfi6aOIjv5gwjWine-TIM:http://yun.tzmm.com.cn/index.php/s/5hJNzt2VR9aIEF2 在manjaro、Fedora28 xfce、Ubuntu18.04中安装 wine以后都能正常运行，不过可能会出现字体发虚，中文输入的问题。 在Fedora28 Xfce中测试后是可以接收文件、用ibus输入中文的这里我建议大家不要太纠结腾讯的软件问题，毕竟移动终端已经很方便了，一般用PC端的情况也不多，如果能够基本满足就不用总折腾这个东西，浪费时间。 浏览器安装Opear浏览器下载地址：Opera browser forLinux下载相应的RPM包以后，直接双击安装即可。 chromium浏览器安装可以直接使用命令 sudo dnf install chromium-xx.x86_64 Opera富强2018-07-08虽然今天看的时候富强功能已经和谐了，不过更改系统的语言地区的方法还是记录一下吧 找到系统的语言设置，位置在 Administration-Language 更改里面的语言为其他地区的语言，可以选择 zh_HK.utf8 然后注销，回到登录界面 在登录界面右上角同样有一个语言选项，也更改为 zh_HK.utf-8这个更改很重要不然不起作用 修改完成后登入系统，这时候部分语言已经更改过来，建议重启完成完整的语言更换 注意：如果大家使用英文的话，默认是无法输入中文，即使你启动ibus也不行，请使用下面的方法 123# fedora默认使用 im-chooser 管理输入法im-chooser# 在弹出的界面中选择 ibus 即可输入中文","tags":["fedora","xfce"],"categories":["Linux"]},{"title":"Manjaro从使用到放弃","path":"/2018/06/30/manjaro-linux-start-end/","content":"这段时间准备把一个老台式机换成Linux系统，然后就准备不在折腾了，慢慢打磨一段时间。在搜索选择发行版的时候发现了欢迎使用Manjaro这个网站，看到很多优点，然后就安装了。 对用户友好、全球排名第1的Linux发行版 滚动更新可以使软件保持最新； AUR软件仓库有着世界上最齐全的Linux软件 丰富的wiki和活跃的社区让所有问题都可以快速得到满意的答案。 具体细节大家可以去网站了解 安装过程烧录U盘、安装系统、整个过程比较流畅，这里确实要说一下比Arch好多了。 需要注意的地方就是安装系统的时候进度条可能会停住并显示Unsquash filesystem 这个多等一下就好开始我以为是系统镜像有问题，又重新做了一遍。 系统更新换源官方的软件源在我这里的网络还是比较慢，需要更换，操作命令如下： 1sudo pacman-mirrors -i -c China -m rank 等一会后会弹出镜像选择对话框，勾选 http://mirrors.ustc.edu.cn/manjaro/并点击两次 OK 即可。 具体教程参考中科大Manjaro源使用帮助。 更新系统之前没有用过Arch系列，所以对 pacman 命令不熟。这里参考官方wiki PacmanOverview，主要命令摘录如下： 1234sudo pacman -Syy # 换源后更新缓存sudo pacman -Syyu # 更新系统sudo pacman -S base-devel yaourt # 安装 AURsudo reboot # 重启系统 放弃原因前后装了三个不同的桌面系统，分别是 KDE、LXDE、XFCE 下面的内容只是个人的感觉，也是个人遇到的情况，大家可做参考，不涉及系统信仰问题。现在已经过了折腾的年纪，哪个好用，哪个适合自己用哪个。 君子生非异也，善假于物也 —— 《劝学》 KDE 用这个系统的原因之一是一键安装TIM，而且有AUR软件贼多，并且一条命令搞定 安装KDE原因是界面漂亮 出现的问题就是：Tim可以安装但是启动一次后就无法再次启动，想想上面网站说的博主用的是lxde，那就换换呗 这个没有装中文输入，体验不深 LXDE 轻量级，家里面的老电脑就是用的lubuntu 第一次安装就卡在上面说的那个界面 Unsquash filesystem 卡住的时间特长 试了几次感觉可能镜像问题，去论坛下载了最新的Beta镜像可以顺利安装 因为我一直用Rime输入法，所以就直接安装ibus-rime，安装顺利 无法输入中文，又安装了智能拼音，文本编辑器可以使用，但其他应用里面就无法输入了 没有继续使用，觉得可能不是官方的版本，支持度不好 XFCE 安装顺利，界面比lxde好看 安装Tim出错，提示就是下载 deepin-wine-helper 失败，所以无法 build 换了两个源都有同样的问题，忘了测试官方源是否可以 安装ibus-rime，无法输入中文，因为安装的英文版，我以为字体的原因 而且ibus无法随机启动，看了官方wiki，按照相关的设定，但是还是不行 安装思源、文泉驿字体，但是依然无法输入中文，继续安装其他的输入方式依然无效 其实这个系统很不错，在排行榜能拿到第一的位置，没两把刷子那是不可能的，软件资源丰富，比如现在特别好用的Opera 浏览器，直接命令安装，其他的操作系统就没这么好的待遇。 不过感觉可能国内用的不多，中文的支持不是太好，英语为母语的国家根本就不需要输入法，而且也不会出现文字乱码啦等等这些乱七八糟的问题，那么这个系统真的是好的选择。 这段时间呢就是想试试这些发行版，看看找一个适合自己的。想找一个不用总是让用户去处理细节问题的系统，适合自己的，尝试代替Windows。","tags":["ibus","manjaro"],"categories":["Linux"]},{"title":"解决Mac系统Chrome Helper进程占用100%CPU","path":"/2018/06/27/chrome-helper-high-cpu/","content":"前段时间在用Mac的时候突然风扇狂转，一会温度就起来了。觉得很奇怪没有看视频，玩游戏，就是浏览网页，找到系统监视器查看，发现Google Chrome Helper 的CPU占用率达到120%，谷歌以后找到解决方法。 解决方法如下： 原文地址 Invoke ⋮ Chrome Menu → More Tools → Task Manager to see what exactlyconsumes CPU. Because the helper is a black box from the OS’ side ofview. I personally found a mining extension that way. 一般是插件的问题，不过我遇到有一次居然是百度贴吧网页出现100%占用，找到占用资源的插件网页关掉即可。 网络还有一种方法已经过时，我刚开始就是按照那种方法，把我的chrome改成英文的也没找到设置的地方，这里也写出来避免走弯路。 Chrome menu → “Preferences” → “Show advanced settings…” → “Privacy” →“Content Settings” → “Plug-ins” → “Click to play.” 原文地址我当时查看的时候居然忘记看文章时间是 2014 年。","tags":["Chrome Helper","Mac"],"categories":["Net"]},{"title":"FFmpeg剪切连接音视频","path":"/2018/05/26/ffmpeg-concat-video/","content":"这几天需要处理一下视频，开始以为就是简单的剪切和连接，没想到耗费了很多时间，现在把使用过的方法总结出来，以后就不用重复寻找。 音频平时用音频操作基本就是剪切制作手机铃声，所以就只记录剪切的方法 ffmpeg -i input.mp3 -ss 00:01:12 -t 00:01:42 -acodec copy output.mp3 视频剪切ffmpeg -i input.mp4 -ss STARTTIME -t STOPTIME -acodec copy -vcodec copy output.mp4 STARTTIME&#x2F;STOPTIME 格式可以有两种： 以秒为单位，直接写数字即可 时:分:秒 01:02:03 如果需要对视频编辑，建议使用软件，这里推荐Shotcut ，或者从这里 找找适合的。 连接连接比较复杂，这里分情况介绍。 视频是由同一个设备录制，其实就是视频的码率，声音，宽高等要素全部一样，这样连接比较简单 文件方法 原文 123456# 基本就是把想要连接的视频的路径写在一个文本文件中，然后用命令连接，适合连接文件较多的情况$ cat mylist.txtfile &#x27;/path/to/file1&#x27;file &#x27;/path/to/file2&#x27;file &#x27;/path/to/file3&#x27;$ ffmpeg -f concat -i mylist.txt -c copy output 直接命令方法 12# 连接文件较少比较合适ffmpeg -i &quot;concat:input1.mp4|input2.mp4|input3.mp4&quot; -c copy output.mp4 视频虽然格式相同，如都是MP4，但是码率，宽高都不相同，这就比较麻烦，还没有好的解决方法，以下仅供参考如果大家有解决方案，请麻烦告诉一下 在网络上搜索的这种情况，基本思路就是把视频转换到临时格式，合并后再转换回源格式 使用ts格式过渡 原文 123ffmpeg -i input1.mp4 -c copy -bsf:v h264_mp4toannexb -f mpegts intermediate1.tsffmpeg -i input2.mp4 -c copy -bsf:v h264_mp4toannexb -f mpegts intermediate2.tsffmpeg -i &quot;concat:intermediate1.ts|intermediate2.ts&quot; -c copy -bsf:a aac_adtstoasc output.mp4 这种方法可以完成视频的连接，画面没有问题，但是视频的声音会丢失 使用mpg格式过渡 原文 123ffmpeg -i 1.mp4 -qscale 0 1.mpgffmpeg -i 2.mp4 -qscale 0 2.mpgcat 1.mpg 2.mpg | ffmpeg -f mpeg -i - -qscale 0 -vcodec mpeg4 output.mp4 视频可以连接，声音还在，不过视频会压缩为一样的宽高 最后是我已经实验过的几种转换方法和连接方法，不过都失败了 ffmpeg -i 2.mp4 -f lavfi -i anullsrc -c:v copy -c:a aac -shortest 2.ts原文 这个命令转换的 ts文件连接后部分视频会有声音，不过部分会丢失，我查看了转换后的 ts文件，发现有的转换为 ts 文件后声音就没有了。 cat 1.ts 2.ts &gt;all.ts ffmpeg -i all.ts -c copy all.mp4原文另一种连接方法，比较简单，能够连接不过效果和之前的方式相同，没有声音 ffmpeg -i infilename -f mpegts -vcodec copy -acodec copy outfile.ts原文 这种方式转换后的 ts文件有声音，不过连接后还是不行。","tags":["concat video"],"categories":["FFmpeg"]},{"title":"查看树莓派版本","path":"/2018/05/20/rasp-versions/","content":"安装软件的时候想查看树莓派系统是32位还是64位就出现了以下的操作 具体命令及作用如下： 12345678getconf LONG_BIT # 查看系统位数uname -a # kernel 版本/opt/vc/bin/vcgencmd version # firmware版本strings /boot/start.elf | grep VC_BUILD_ID # firmware版本cat /proc/version # kernelcat /etc/os-release # OS版本资讯cat /etc/issue # Linux distro 版本cat /etc/debian_version # Debian版本编号 虽然树莓派3b的硬件支持64位的系统，但是官方的系统还是32位的，主要应该是为了兼容之前的硬件 参考 如何看 Raspbian的版本資訊？","tags":["versions"],"categories":["Raspberry Pi"]},{"title":"加快国内访问Github网站的速度","path":"/2018/05/12/github-access-fast/","content":"有时候查看一些开源的项目和代码都会访问Github，自己的博客也在Page上，不过访问总是比较慢，原因不用说大家都知道，不过幸亏是还能访问，所以感觉已经挺知足了。 但是慢点没关系，你不能最后样式都加载不出来吧，这有点过分了，所以搜索了一下解决方法，确实挺有效，记录如下。 2018-06-13更新：这种方法在家庭宽带的作用还是蛮大的，但是在非独立宽带如机房环境中可能没有效果。 方法简单说就是在本地 hosts 文件中加入 github.com的网站IP，绕过DNS解析。 具体的操作如下： 打开查询域名映射的网站： http://tool.chinaz.com/dns/ （国内的）https://www.ipaddress.com/ （国外的） 查询下列域名的IP，多试几次，选择稳定的、延迟小的，然后记下IP地址 github.com github.global.ssl.fastly.net assets-cdn.github.com 然后把查询到的IP和相应的域名按照格式写入到系统的 hosts文件中后保存 系统 hosts文件位置 Windows C: Linux &#x2F;etc&#x2F;hosts MacOS &#x2F;etc&#x2F;hosts 刷新DNS 通用的方法：重启机器或者禁用重连网络 如果使用命令的话，具体如下： 系统 刷新DNS命令 Windows ipconfig /flushdns Ubuntu sudo /etc/init.d/networking restart OS X v10.10.4 or later sudo killall -HUP mDNSResponder OS X v10.10 through v10.10.3 sudo discoveryutil mdnsflushcache 至于OS X的其他版本可参考官方网站： Reset the DNS cache in OSX 使用浏览器访问Github检验你的成果 参考博客 Github访问慢解决办法 解决github访问慢方案","tags":["github","fast"],"categories":["Net"]},{"title":"文件特殊权限SUID测试","path":"/2017/11/02/suid-test/","content":"测试方法1（失败）思路:使用shell脚本，然后把脚本编译为二进制，赋予 suid权限，用不同的用户执行这样就能比较是否执行的时候用户是文件的所属用户 安装shc编译shell脚本123456789[root@centos-rpi3 shc]# yum install automake[root@centos-rpi3 tmp]# git clone https://github.com/neurobin/shc.git[root@centos-rpi3 shc]# cd shc[root@centos-rpi3 shc]# mkdir m4[root@centos-rpi3 shc]# ./autogen.sh[root@centos-rpi3 shc]# ./configure[root@centos-rpi3 shc]# make[root@centos-rpi3 shc]# make install 测试环境配置12345678910111213[aoenian@centos-rpi3 tmp]$ vim rmfile.sh# rmfile.sh # #!/bin/bash# rm -i /home/aoenian/file.txt[aoenian@centos-rpi3 tmp]$ shc -f rmfile.sh -o rmfile[aoenian@centos-rpi3 tmp]$ su test[test@centos-rpi3 tmp]$ ./rmfile[test@centos-rpi3 tmp]$ exit[aoenian@centos-rpi3 tmp]$ chmod 4755 rmfile[aoenian@centos-rpi3 tmp]$ su test[test@centos-rpi3 tmp]$ ./rmfile 结果都是失败，都会显示没有权限，这个和设想的就不一样了，然后查看了命令运行时候进程的用户，发现依然是test 用户在运行 rm 命令 个人理解：可能执行rmfile程序的时候是aoenian用户，但是rmfile程序调用rm命令的时候就变回来了 测试方法2（成功）思路：不使用系统命令，使用C语言编写二进制文件 rmfile.c文件的内容如下： 会出现警告，不影响使用 123456789101112#include&lt;stdio.h&gt;int main()&#123; char filename[80]; printf(&quot;The file to delete: &quot;); gets(filename); if( remove(filename) == 0 ) printf(&quot;Removed %s.&quot;, filename); else perror(&quot;remove&quot;); return 0;&#125; 12345678[aoenian@centos-rpi3 tmp]$ gcc -Wall rmfile.c -o rmfile[aoenian@centos-rpi3 tmp]$ touch test.txt[aoenian@centos-rpi3 tmp]$ chmod 4755 rmfile[aoenian@centos-rpi3 tmp]$ su test[test@centos-rpi3 tmp]$ ./rmfileThe file to delete: test.txtRemoved test.txt. 测试成功，还是挺有意思的。","tags":["SUID"],"categories":["Linux"]},{"title":"CentOS7安装配置Samba","path":"/2017/10/29/centos-samba/","content":"前言性子急的可以跳过，直接看后面的配置 需求树莓派安装了CentOS7以后感觉还不错，正好大部分学习linux的资料都是CentOS为主，所以就准备长期使用，然后这两天用you-get下载了一些视频，然后想拷贝出来，这时候突然发现CentOS不能写入ntfs格式的U盘，哎，开源和微软之间总有那么一道肉隐肉现的鸿沟。 那么需求来了，让CentOS读取ntfs，搜索一番，发现很简单就是安装一个ntfs-3g的软件的事情，不过就这么个问题废老大劲了。 2018-06-05更新：32位安装ntfs-3g可官网下载源码直接编译安装，64位的可以直接安装EPEL然后再安装相应的软件 当时查看系统的位数，找到的一些系统信息查看的方法，总结记录如下。 查看CentOS的版本 123456789101112131415161718[root@CentOS-rpi3 aoenian]# cat /proc/versionLinux version 4.9.50-v7.1.el7 (mockbuild@armv7-03.dev.CentOS.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-16) (GCC) ) #1 SMP Thu Sep 14 08:17:16 UTC 2017[root@CentOS-rpi3 aoenian]# uname -aLinux CentOS-rpi3 4.9.50-v7.1.el7 #1 SMP Thu Sep 14 08:17:16 UTC 2017 armv7l armv7l armv7l GNU/Linux[root@CentOS-rpi3 aoenian]# uname -r4.9.50-v7.1.el7[root@CentOS-rpi3 aoenian]# cat /etc/redhat-releaseCentOS Linux release 7.4.1708 (Core)[root@CentOS-rpi3 aoenian]# getconf LONG_BIT32[root@CentOS-rpi3 aoenian]# file /bin/ls/bin/ls: ELF 32-bit LSB executable, ARM, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.32, BuildID[sha1]=c591c4039d5eb3301eb8be1fa4ebaed8cd832240, stripped 安装配置SambaCentOS的共享比较麻烦具体下面介绍 安装Samba先查看是否安装Samba 12rpm -qa | grep sambayum list installed | grep samba 如果已经安装那么可以跳过，如果没有正确安装可以先删除再重新安装 12# 删除sambayum remove samba* 接着，连上网络，安装samba 1yum install samba* -y 配置一个完全权限的共享目录查看windows的工作组打开win的cmd窗口，快捷键 win+r 然后输入 cmd回车即可，并在窗口输入以下命令 1net config workstation 找到 Workstation domain 一行，值应该是 WORKGROUP 下面配置Samba要用到 配置Samba 创建共享目录 123mkdir -p /samba/anonymouschmod -R 0777 /samba/anonymouschown -R nobody:nobody /samba/anonymous 关掉防火墙和selinux 12345678910systemctl stop firewalld.service #停止firewallsystemctl disable firewalld.service #禁止firewall开机启动setenforce 0 # 关闭selinuxgetenforce # 查看selinux的状态，应该是 Permissive# 彻底禁用selinux 编辑配置文件vim /etc/sysconfig/selinux # 修改SELINUXSELINUX=disabled 如果防火墙不关闭，查看共享会出现连接失败；如果selinux不关闭，则无法看到共享目录的内容 当然为了安全期间，可以对Samba的端口放行，设置selinux分享Samba的目录，大家可以参考其他博文 备份配置文件 1cp /etc/samba/smb.conf /etc/samba/smb.conf.bak 修改配置文件 123456789101112131415161718192021vi /etc/samba/smb.conf# 可以把之前的内容注释掉，加入如下内容[global] workgroup = WORKGROUP # 跟win的工作组同名 server string = Samba Server Version %v # 服务器描述 netbios name = CentOS # 共享服务器在网络上显示的名字 security = user # 使用 SAMBA 服务器本身的密码数据库 # 将所有Samba系统主机所不能正确识别的用户都映射成guest用户 map to guest = bad user dns proxy = no log file = /var/log/samba/log.%m # 日志文件位置 max log size = 50 # 日志大小[Anonymous] comment = Anonymous File Server Share path = /samba/anonymous browsable = yes # 让所有的用户看到这个项目 writable = yes # 是否可以写入 guest ok = yes # 是否允许guest账户访问 read only = no # 是否只读，与wirtable类似，谁在后面听谁的 保存配置文件，并退出，到此一个完全共享的目录基本配置完毕 重启smaba1234systemctl enable smb.service # 加入开机启动systemctl enable nmb.servicesystemctl restart smb.servicesystemctl restart nmb.service 配置完成，可在其他系统查看共享目录和文件 参考 Easy Samba installation on RHEL&#x2F;CentOS7 Install And Configure Samba Server In CentOS7 Samba常用配置及GUEST访问 设置 SAMBA 鸟哥文件服务器","tags":["CentOS","Samba"],"categories":["Linux"]},{"title":"网站备份","path":"/2017/04/29/website-collect/","content":"这段时间整理了一下浏览器的书签发现里面收藏了很多书签，然后重新整理了一下，把一些感觉不错的记录下来，然后把浏览器里面的都删除掉。其实平时浏览的网站基本就那几个。 按照网站的内容分类吧，比较直观。 站点后有 @ 符号表示需要特殊渠道访问 软件下载 IT猫扑网 无意间看到，有各平台的软件下载 绿盟 之前的良心软件网站。（现在下载需要登录了，也很久没用过了） Windows绝赞应用介绍Windows绝妙应用的项目，同时也介绍一些流氓应用 zd423 良心软件下载站 个人博客 逗比根据地 国内站逗比根据地 @ （网站不在提供国内访问镜像了） 土豆不好吃 跟著工作熊玩賺部落格 伟大航路 freess iShadow freess 木料集 小结 @ 教程 Emacs教程 子龙山人的Emacs 教程 Org-mode简明手册 沉浸式学Git Git教程，很简短 python初学者资料推荐 Learn X in Y minutes Take a whirlwindtour of your next favorite language 自化 类似网易云课堂，不过全是设计类的 其他类网站资讯类 LINUXTOY 就是上面 Git教程所在的网站，关于linux的 苹果fans博客 今天看啥微信公众号文章查看，我喜欢的都有，主要更新比较及时 图灵社区 计算机类图书文章 工具类 ytb视频下载 pythontutor可视化执行程序，支持 python java ruby 等语言 W3C validators 检验网页代码是否标准 娱乐类 FIX字幕侠 美剧，类似人人 美丽化学挺不错，不过感觉更新的不多 知识类 地球知识局 人文和地理 混乱博物馆 柴知道 不知道哪一类 知乎万赞答案汇总以及排名 DNS服务器 应对一下DNS污染、劫持之类 BAI DNS试过几个dns，这个还是比较块，114就算了，小广告整得也是顺溜","tags":["website","collection"],"categories":["Net"]},{"title":"如何避免Emacs破坏文件的硬链接","path":"/2017/04/19/emacs-broken-hard-link/","content":"使用了markdown以后感觉不错，能够全心放在写作内容上面，不过用了一段时间以后开始发愁编辑器的问题，在网络搜索的过程中进入了org-mode的坑，配上emacs，用着很爽，也不会发愁注册啦，版权之类的问题。所以就开始使用org-mode进行文字记录。 问题的出现是在写博客的过程中，在blog目录下写完一篇文章后我会把文件硬链接到post目录下，这样呢如果文章预览解析有问题需要更改，那么留在blog目录下的文章也会随之改变，保证两边的文章是一样的。 原来用vim的时候一直样做，改成emacs也没多想，但是发现问题了，建立文件硬链接以后都正常，但是用emacs打开其中一个文件更改保存后，发现两个文件的inode 不同了，感觉就像emacs自动创建了一个副本。 解决的方法就是在你的配置文件里面加入如下配置： (setq backup-by-copying t) 如果你只想在链接的时候用这个配置，请使用下面的代码： (setq backup-by-copying-when-linked t) 具体的详细介绍可查看 How to prevent Emacs from breaking hardlinks?","tags":["Emacs","hard link"],"categories":["Editor"]},{"title":"思科路由器配置2——单臂路由","path":"/2017/04/17/router-config-2/","content":"单臂路由:是指在路由器的一个接口上通过配置子接口（或“逻辑接口”，并不存在真正物理接口）的方式，实现原来相互隔离的不同VLAN（虚拟局域网）之间的互联互通。 配置好的pkt文件 拓扑图： 交换机S0配置123456789101112131415161718192021Switch(config)#hostname S0S0(config)#exitS0#vlan database // 进入vlan数据库模式S0(vlan)#vlan 10 name v10 // 创建vlan10并命名为v10VLAN 10 modified: Name: v10S0(vlan)#vlan 20 n v20 // 创建vlan20VLAN 20 added: Name: v20S0(config)#interface r f0/1-10 // 把端口1-10划分给vlan10S0(config-if-range)#swi mode acc // 更改端口模式为 accessS0(config-if-range)#swi access vlan 10 // 端口加入vlan10S0(config-if-range)#exitS0(config)#interface r f0/11-20S0(config-if-range)#swi mode accS0(config-if-range)#swi acc vlan 20S0(config)#inter f0/24 // 设置与路由器R0连接的端口24// 这里由于交换机只支持802.1q协议，所以没有设置协议，只设置模式S0(config-if)#swi mode trunk S0(config-if)#swi trunk allowed vlan all // 允许所有vlan通过 PC的设置 PC vlan IP gateway PC0 10 192.168.1.11&#x2F;24 192.168.1.254&#x2F;24 PC1 20 192.168.2.11&#x2F;24 192.168.2.254&#x2F;24 路由器R0的配置123456789101112131415161718192021Router&gt;enableRouter#confConfiguring from terminal, memory, or network [terminal]? Enter configuration commands, one per line. End with CNTL/Z.Router(config)#hostname R0R0(config)#inter f0/0 // 进入路由器和交换机相连的端口R0(config-if)#no shutdown // 启用端口R0(config-if)#exitR0(config)#inter f0/0.1 // 进入逻辑子接口0.1R0(config-subif)#encapsulation dot1Q 10 // 设置协议封装并建立与vlan10的关联R0(config-subif)#ip add 192.168.1.254 255.255.255.0 // 设置ip地址（也就是网关地址）R0(config-subif)#exitR0(config)#inter f0/0.2R0(config-subif)#encapsulation dot1Q 20R0(config-subif)#ip add 192.168.2.254 255.255.255.0R0(config-subif)#exitR0(config)#exitR0#write memory // 写入配置Building configuration...[OK] 测试PC0与PC1之间能够互相ping通。 参考博客 Cisco单臂路由配置，图文实例详解 单臂路由","tags":["router","one-armed"],"categories":["Net"]},{"title":"思科交换机配置6——生成树协议(STP)","path":"/2017/03/22/switch-config-6/","content":"配置好的pkt文件 网络的拓扑结构以及配置参考 《网络设置配置与管理》 吴伯桥主编清华大学出版社 书中部分配置命令在模拟器中并不存在，下文中已更改 拓扑图： 生成树的理解 如何理解STP生成树协议 交换机配置教程生成树协议STP防止环路 如何记住网络工程中的技术，如STP，HSRP等 生成树配置因为思科交换机默认启用生成树协议，所以连接后会自行处理环路问题。不过由于默认的根网桥可能不是我们想要的，这个时候就需要进行手动设置。 由拓扑图可知：网络连接后默认S1交换机并不是根网桥，与需求不符。 基本的STP命令拓扑图： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667// 查看S4的STPS4#show spanning-tree VLAN0001 Spanning tree enabled protocol ieee Root ID Priority 32769 Address 0003.E44D.6117 // 根交换机的MAC地址 Cost 19 Port 1(FastEthernet0/1) Hello Time 2 sec Max Age 20 sec Forward Delay 15 sec Bridge ID Priority 32769 (priority 32768 sys-id-ext 1) Address 00E0.F7B9.E182 // S4的地址（可见S4不是根网桥） Hello Time 2 sec Max Age 20 sec Forward Delay 15 sec Aging Time 20Interface Role Sts Cost Prio.Nbr Type---------------- ---- --- --------- -------- --------------------------------Fa0/2 Altn BLK 19 128.2 P2pFa0/1 Root FWD 19 128.1 P2p// 在此例中S5为根网桥，所以它的两个端口都为转发状态，S4的两个端口开销一样都是19// 默认端口开销，所以将使用最低的端口号为根端口// 更改S4的Fa0/2端口为Root端口，思科PT不支持cost命令// 所以课本以及网络上的操作基本都废了// 要更改S4的Root端口，需要在S5上面设置相应的端口的优先级，所以下面的设置在S5上进行S5#show spanning-tree // 查看得知Fa0/2端口优先级为128Interface Role Sts Cost Prio.Nbr Type---------------- ---- --- --------- -------- --------------------------------Fa0/2 Desg LRN 19 128.2 P2pS5#configure Configuring from terminal, memory, or network [terminal]? Enter configuration commands, one per line. End with CNTL/Z.S5(config)#interface f0/2S5(config-if)#spanning-tree vlan 1 port-priority 48 // 更改为小于128的// 注意必须是16的倍数，然后查看S4的状态S4#show spanning-tree Interface Role Sts Cost Prio.Nbr Type---------------- ---- --- --------- -------- --------------------------------Fa0/2 Root FWD 19 128.2 P2p // 角色改变为RootFa0/1 Altn BLK 19 128.1 P2p// 更改S4为根网桥S4#configure S4(config)#spanning-tree vlan 1 root primary S4#show spanning-tree VLAN0001 Spanning tree enabled protocol ieee Root ID Priority 24577 // 优先级更改 Address 00E0.F7B9.E182 This bridge is the root Hello Time 2 sec Max Age 20 sec Forward Delay 15 sec Bridge ID Priority 24577 (priority 24576 sys-id-ext 1) Address 00E0.F7B9.E182 Hello Time 2 sec Max Age 20 sec Forward Delay 15 sec Aging Time 20Interface Role Sts Cost Prio.Nbr Type---------------- ---- --- --------- -------- --------------------------------Fa0/2 Desg FWD 19 128.2 P2pFa0/1 Desg FWD 19 128.1 P2p// 可以试试再用相同的命令把S5改回到root 上面的配置参考自spanning tree port priority and costcommand.不过奇怪的是网络上的回答给出的结果不仅端口Fa0&#x2F;2为Root，而且它的优先级也改变了。而我在操作的过程中，只出现了第一个现象，优先级还是128，当然根网桥的Fa0&#x2F;2端口的优先级肯定变为48. 详细的配置VLAN配置12345678910111213141516Switch&gt;enable Switch#Switch#configure Switch(config)#hostname S1S1(config)#exitS1#vlan dataS1(vlan)#vtp transparent // VTP透明模式S1(vlan)#vlan 8S1(vlan)#vlan 10S1(vlan)#vlan 11S1(vlan)#exitAPPLY completed.Exiting....S1#show vlan// S2 S3 的配置与S1完全相同此处省略 VTP透明模式设置后交换机不通告自己的vlan信息，也不同步外部vlan，可以修改创建vlan 可以参考：VTP的透明模式vtp modetransparent的作用 STP设置1234S1(config)#spanning-tree vlan 1-4094 priority 0 // S1设置为根网桥S2(config)#spanning-tree vlan 1-4094 priority 4096 // S2设置为备用根网桥 交换机之间的Trunk链路配置123456789101112131415161718192021// S1的端口配置S1(config)#interface range f0/1-2S1(config-if-range)#switchport trunk encapsulation dot1q S1(config-if-range)#swi mode trunkS1(config-if-range)#swit trunk allowed vlan allS1#show interface trunk // 查看端口状态// S2的端口配置S2(config)#inter range f0/1-2S2(config-if-range)#swit trunk encapsulation dot1q S2(config-if-range)#swit mode trunk // 如果先设置trunk模式则会出错S2(config-if-range)#swi trunk all vlan all// S3的端口配置S3&gt;enable S3#confi tEnter configuration commands, one per line. End with CNTL/Z.S3(config)#inter r f0/1-2S3(config-if-range)#swi mode trunk // 二层交换机没有802.1q的设置S3(config-if-range)#swi trunk all vlan all S3的Access接口配置123456789101112S3(config)#int f0/10S3(config-if)#swi mode access // 端口设置为接入模式S3(config-if)#swi access vlan 10 // 端口加入vlan10S3(config-if)#spanning-tree portfast // 端口配置为portfast端口S3(config-if)#exitS3(config)#int f0/11S3(config-if)#swi mode accessS3(config-if)#swi acc vlan 11S3(config-if)#span porS3#show vlan PortFast端口加快终端主机连接入stp网络的收敛.只适用于,在交换机与主机(电脑)相连的端口,不应该在交换机与交换机,路由器,hub互连的网络设备的端口使用. 网管地址设置12345678910111213141516171819// S2管理IP设置S2(config)#inter vlan 8 // 进入vlan8设置S2(config-if)#ip address 192.168.8.130 255.255.255.128S2(config-if)#no shut S2(config-if)#exitS2(config)#ip default-gateway 192.168.8.129S2(config)#exitS2#show ip interface brief // S3管理IP设置S3#configureS3(config)#inter vlan 8S3(config-if)#ip add 192.168.8.131 255.255.255.128S3(config-if)#no shutS3(config-if)#exitS3(config)#ip default-g 192.168.8.129S3(config)#exitS3#show ip int b 三层接口配置1234567891011121314151617S1#confS1(config)#ip routingS1(config)#int vlan 8S1(config-if)#ip add 192.168.8.129 255.255.255.128S1(config-if)#no shutS1(config-if)#exitS1(config)#int vlan 10S1(config-if)#ip add 192.168.10.1 255.255.255.0S1(config-if)#no shutS1(config-if)#exitS1(config)#int vlan 11S1(config-if)#ip add 192.168.11.1 255.255.255.0S1(config-if)#no shutS1(config-if)#exitS1(config)#exitS1#show ip int b 测试 PC1和PC2之间可以通信 在PC1上用 ping -t 192.168.11.100 向PC2发包 在PC2上用ping -t 192.168.10.100 向PC1发包 将S3的Fa0&#x2F;1端口 shutdown以后查看 STP信息和PC丢包情况 将S3的Fa0&#x2F;1端口 no shutdown后查看同样信息 拓展阅读 STP基本配置 Spanning tree portcosts Configuring SpanningTree","tags":["switch","STP"],"categories":["Net"]},{"title":"思科交换机配置5——链路聚合","path":"/2017/03/18/switch-config-5/","content":"这个配置一定使用6.0以上的版本，我使用5.3的版本可以聚合成功，但是当链路只剩一条时显示绿色，却无法通信，浪费了很多时间。 PT6.2下载 配置好的pkt文件 二层交换机链路聚合配置1234567891011// 用两台2950，需要聚合的端口为f0/1-3S1(config)#interface range f0/1-3S1(config-if-range)#channel-group 1 mode desirable // 链路聚合加入通道组1并设置相应模式S1(config-if-range)#switchport mode trunk // 端口模式设置// S2设置与S1类似Switch(config)#hostname S2S2(config)#interface range f0/1-3S2(config-if-range)#channel-group 1 mode desirable S2(config-if-range)#switchport mode trunk 三层交换机链路聚合配置12345678910111213Switch(config)#hostname S3S3(config)#interface range g0/1-2S3(config-if-range)#channel-group 1 mode active // 使用LACP协议S3(config-if-range)#switchport trunk encapsulation dot1q // 802.1q协议封装S3(config-if-range)#switchport trunk allowed vlan all // 允许vlan通过// S4的配置Switch(config)#hostname S4S4(config)#interface r g0/1-2 // 与上面的配置相同，不过这里简写了S4(config-if-range)#channel-g 1 mode active S4(config-if-range)#swit trunk e dot1q S4(config-if-range)#swit t a vlan all 三层以太通道的配置1234567891011121314// 主要是为 port-channel 配置IP地址// 用两台3560 聚合端口为 g0/1 和 g0/2Switch&gt;enableSwitch#configure Configuring from terminal, memory, or network [terminal]? Enter configuration commands, one per line. End with CNTL/Z.Switch(config)#ip routingSwitch(config)#int range g0/1-2Switch(config-if-range)#no switchport Switch(config-if-range)#channel-group 1 mode active Switch(config-if-range)#exitSwitch(config)#int port-channel 1Switch(config-if)#no switchport Switch(config-if)#ip add 192.168.1.1 255.255.255.0 参考博客 cisco链路聚合配置","tags":["链路聚合","三层"],"categories":["Net"]},{"title":"思科路由器配置1——密码配置","path":"/2017/03/12/router-config-1/","content":"配置好的pkt文件 密码配置思科的交换机和路由器的密码配置操作是一样的，这里介绍的是交换机中没有涉及到的，但是也可以使用的配置。 console密码1234567891011121314Switch#erase startup-config // 删除原有配置Switch#reload // 重启交换机Switch(config)#line console 0Switch(config-line)#password cisco // 设置console口登录密码Switch(config-line)#login // 开启登录验证Switch(config-line)#login local // 开启本地验证，不开启则后面创建的本地用户不能登录Switch(config-line)#exit// 创建本地用户以后，从console口登录则需要输入用户名和密码Switch(config)#username cisco password cisco // 创建本地用户并设置密码// 用户权限定义为 0-15 级，最高为15级 任何命令都可操作Switch(config)#username cisco privilege 15 password cisco // 该用户登录直接进入特权模式Switch(config)#service password-encryption // 把明文密码加密 远程ssh登录今天看到网络上面介绍 telnet 登录是明文传输，建议采用 ssh方式登录。这里就介绍一下ssh登录的方法 这里用模拟器测试一下发现，模拟器中支持 domain-name配置的是三层交换机和路由器，二层交换机无法配置 12345678910111213141516171819202122232425262728293031323334Router(config)#hostname R1841 // 设置hostnameR1841(config)#ip domain-name router.com // 设置domain-nameR1841(config)#username cisco privilege 15 password cisco // 创建本地用户和密码R1841(config)#service password-encryption // 把密码加密R1841(config)#enable secret cisco // 设置特权密码，不然后面远程无法进入特权模式R1841(config)#crypto key generate rsa // 生成ssh密钥The name for the keys will be: R1841.router.comChoose the size of the key modulus in the range of 360 to 2048 for your General Purpose Keys. Choosing a key modulus greater than 512 may take a few minutes.How many bits in the modulus [512]: 1024 // 这里需要产生1024位的密钥因为ssh版本2需要位数较多% Generating 1024 bit RSA keys, keys will be non-exportable...[OK]R1841(config)#ip ssh version 2 // 设置使用的ssh版本*3? 1 0:7:2.224: %SSH-5-ENABLED: SSH 1.99 has been enabled R1841(config)#ip ssh time-out 120 // ssh会话超时时间R1841(config)#ip ssh authentication-retries 3 // ssh验证的最大次数R1841(config)#line vty 0 4R1841(config-line)#transport input all // 启用所有的认证（telnet和ssh）R1841(config-line)#login local // 启用本地验证R1841(config-line)#exitR1841(config)#interface f0/0 R1841(config-if)#no shutdown // 启动路由器端口%LINK-5-CHANGED: Interface FastEthernet0/0, changed state to up%LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet0/0, changed state to upR1841(config-if)#ip address 192.168.1.1 255.255.255.0 // 设置远程登录IPR1841(config-if)#exitR1841(config)#exitR1841#write // 写入配置R1841(config)#crypto key zeroize rsa // 删除ssh密钥禁止ssh登录 测试使用pc连接路由器的f0&#x2F;0接口，即可在命令行进行登录 123456789101112// telnet 登录PC&gt;telnet 192.168.1.1Trying 192.168.1.1 ...OpenUser Access VerificationUsername: ciscoPassword: // ssh登录PC&gt;ssh -l cisco 192.168.1.1OpenPassword: 参考博客 设置思科设备console密码、enable密码、vty登录密码 Cisco路由器SSH登录 通过SSH实现Cisco路由器登录","tags":["router","password"],"categories":["Net"]},{"title":"思科交换机配置4——三层交换机VLAN联通","path":"/2017/03/08/switch-config-4/","content":"三层和二层交换机的链路聚合没有成功。可以通信，但聚合链路中拿走一条链路后则通信中断，这个是PT5.3版本的坑！！ PT5.3这个大坑我上来就踩上了，这个版本的链路聚合有问题，当只有一条链路的时候，无法ping通。所以直觉就是链路聚合没有配置成功。请用6.2版本。 拓扑图如下： 配置好的思科模拟器文件地址：cisco-pkt 二层交换机配置S1和S2的配置类似与之前的跨交换机vlan划分这里不再重复，需要的配置如下： 在S1和S2上划分vlan10和vlan20 把相应的端口加入vlan PC2-S1-f0&#x2F;2 PC4-S2-f0&#x2F;2 vlan20 PC1-S1-f0&#x2F;1 PC3-S2-f0&#x2F;1 vlan10 把PC的IP地址和网关地址配置完成 三层交换机S0的配置三层交换机和二层交换机的接口 S1 S2 S0 f0&#x2F;22 f0&#x2F;23 f0&#x2F;24 注：这里我把S1与S0之间用两条链路主要为了配置链路聚合。 S0的具体配置1234567891011121314151617181920Switch&gt;enableSwitch#configure terminal Switch(config)#hostname S0S0(config)#vlan 10S0(config-vlan)#name v10S0(config-vlan)#exitS0(config)#vlan 20S0(config-vlan)#name v20S0(config-vlan)#exitS0(config)#interface vlan 10S0(config-if)#ip address 192.168.1.254 255.255.255.0 // 设置vlan的网关地址S0(config-if)#no shutdown // 启用vlanS0(config-if)#exitS0(config)#interface vlan 20S0(config-if)#ip address 192.168.2.254 255.255.255.0S0(config-if)#no shutdown S0(config-if)#exitS0(config)#ip routing // 启用ip路由S0#show ip route // 查看三层交换机路由表 注：这个时候如果二层交换机和三层交换机连接的接口模式都已经配置为 trunk，vlan间即可通信。 S1和S0之间聚合链路的配置首先配置S0路由器的 22 和 23号端口，这里在网络上搜索的配置不尽相同，有多有少。所以这里根据我自己的理解进行配置，如果不正确或者需要补充，请大家留言或通过邮件联系我，谢谢！ S0三层交换机的配置12345678910111213S0(config)#interface range f0/22-23S0(config-if-range)#channel-protocol pagp // 设置聚合协议为pagpS0(config-if-range)#channel-group 1 mode auto // 设置工作模式S0(config-if-range)#exitS0(config)#interface port-channel 1S0(config-if)#switchport trunk encapsulation dot1q // 802.1Q封装S0(config-if)#switchport mode trunk // 更改端口模式S0(config-if)#switchport trunk allowed vlan all // 允许vlan通过S0(config)#interface f0/24 // 与S2的相连端口设置S0(config-if)#switchport trunk allowed vlan allS0(config-if)#switchport trunk encapsulation dot1q S1的配置12345678910S1(config)#interface range f0/22-23S1(config-if-range)#channel-protocol pagp S1(config-if-range)#channel-group 1 mode autoS1(config-if-range)#exitS1(config)#interface port-channel 1S1(config-if)#switchport trunk allowed vlan allS1(config-if)#switchport mode trunk S1#show etherchannel summary S2配置123456S2#configure S2(config)#interface f0/24S2(config-if)#switchport mode trunkS2(config-if)#switchport trunk allowed vlan all 测试 不同vlan之间的pc可以互相通信 S1和S0之间的两条链路都可传输信息， 但是如果去除一条链路和无法通信 参考链接 通过三层交换实现VLAN间互通的方法(图文教程) Packet Tracer 5.0实验(四)利用三层交换机实现VLAN间路由 在第三层交换机的配置VLAN间路由 拓展阅读 VLAN&#x2F;Trunk以及三层交换 链路聚合、Trunk、端口绑定和捆绑简析 以太网通道及链路聚合协议","tags":["三层交换机","链路聚合"],"categories":["Net"]},{"title":"思科交换机配置2——单交换机VLAN划分","path":"/2017/03/05/switch-config-2/","content":"单交换机VLAN配置配置好的思科模拟器文件地址:cisco-pkt 配置参数 名称 IP地址 所属VLAN 连接端口 网关 PC1 192.168.1.11&#x2F;24 VLAN10 f0&#x2F;1 192.168.1.254&#x2F;24 PC2 192.168.1.12&#x2F;24 VLAN10 f0&#x2F;2 192.168.1.254&#x2F;24 PC3 192.168.2.11&#x2F;24 VLAN20 f0&#x2F;11 192.168.2.254&#x2F;24 PC4 192.168.2.12&#x2F;24 VLAN20 f0&#x2F;12 192.168.2.254&#x2F;24 创建VLAN为了不占用太大的篇幅，一些命令的常规提示将不会写出来 全局模式下配置12345Switch#configure terminal Switch(config)#vlan 10 // 创建vlan 10Switch(config-vlan)#name v10 // 为 vlan10 命名Switch(config-vlan)#exitSwitch(config)#exit VLAN database 模式1234Switch#vlan database Switch(vlan)#vlan 20 name v20VLAN 20 added: Name: v20 把端口加入相应的VLAN端口的配置可以配置单个端口，也可以多个端口一块配置 把1~10号端口加入vlan101234567891011Switch(config)#interface f0/1 // 设置端口1Switch(config-if)#switchport mode access // 设置端口模式Switch(config-if)#switchport access vlan 10 // 把此端口加入vlan10中Switch(config-if)#exit // 退回全局配置Switch(config)#interface range fastEthernet ? // 查看帮助 &lt;0-9&gt; FastEthernet interface numberSwitch(config)#interface range fastEthernet 0/2-10 // 设置2~10端口Switch(config-if-range)#switchport mode access // 设置模式Switch(config-if-range)#switchport access vlan 10 Switch(config-if-range)#exit 把11-20号端口加入vlan20123Switch(config)#interface range f0/11-20Switch(config-if-range)#switchport mode accessSwitch(config-if-range)#switchport access vlan 20 把配置写入123456Switch#write // 一种方式Switch#copy running-config startup-config // 另一种方法Destination filename [startup-config]? Building configuration...[OK]Switch# 查看vlan的配置123Switch#show vlan // 查看vlan配置Switch#show running-config // 查看交换机配置 测试pc1与pc2可以互相ping通，与pc3和pc4无法ping通 更改pc3或pc4与pc1为一个网段的IP，依然无法与pc1通信。","tags":["switch","VLAN"],"categories":["Net"]},{"title":"思科交换机配置3——多交换机vlan划分","path":"/2017/03/05/switch-config-3/","content":"配置好的思科模拟器文件地址：cisco-pkt 拓扑图： s1配置123456789101112131415161718192021222324252627Switch(config)#vlan 10Switch(config-vlan)#name v10Switch(config-vlan)#exitSwitch(config)#vlan 20Switch(config-vlan)#name v20Switch(config-vlan)#exitSwitch(config)#interface f0/1Switch(config-if)#switchport mode access Switch(config-if)#switchport access vlan 10Switch(config-if)#exitSwitch(config)#interface f0/2Switch(config-if)#switchport mode accessSwitch(config-if)#switchport access vlan 20Switch(config-if)#exitSwitch(config)#interface f0/24Switch(config-if)#switchport mode trunk // 把24端口模式设置为trunk来进行交换机之间的通信%LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet0/24, changed state to down%LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet0/24, changed state to upSwitch(config-if)#exitSwitch(config)#exitSwitch#writeBuilding configuration...[OK] s2的配置s2的配置和s1的配置几乎完全一样，这里只列出配置过程，不再注释 1234567891011121314151617181920Switch(config)#hostname s2 // 把交换机的名称改为s2s2(config)#interface f0/1s2(config-if)#exits2(config)#vlan 10s2(config-vlan)#name v10s2(config-vlan)#exits2(config)#vlan 20s2(config-vlan)#name v20s2(config-vlan)#exits2(config)#interface f0/1s2(config-if)#switchport mode access s2(config-if)#switchport access vlan 10s2(config-if)#exits2(config)#interface f0/2s2(config-if)#switchport mode access s2(config-if)#switchport access vlan 20s2(config-if)#exits2(config)#interface f0/24s2(config-if)#switchport mode trunk 测试pc1与pc3可以通信但与pc2无法通信 pc2与pc4可以通信但与pc3无法通信 参考链接以及拓展阅读 Cisco基础【交换机】两个实例配置让你掌握交换机VLAN的划分 跨交换机的Vlan配置与管理","tags":["VLAN","switchs"],"categories":["Net"]},{"title":"思科交换机配置1——密码设置","path":"/2017/03/04/switch-config-1/","content":"交换机的配置将会是一个系列文章，我会把自己配置过的例子都写出来做一个系列，也避免之后每次遇到都要去网络搜索。使用packet tracer的版本号为6.2(5.3版本会出现问题)，查看此文需要对思科模拟器有一定的了解。 仿真终端配置 bps Data Bits parity stop bits flow control 9600 8 None 1 None 交换机模式介绍用户模式刚进入交换机时命令行状态为 Switch&gt;，此时所处为用户模式，这个模式一般用于查看显示系统信息、改变终端设置和执行一些最基本的测试命令，如ping、traceroute等 注意：直接输入 ?并回车，可获得该模式下允许执行的命令。其他模式同样适用 特权模式用户模式下，执行 enable命令，可能需要输入密码，密码输入时不回显，完成后直接回车即可。 特权模式的命令行状态为： Switch# 离开特权模式的命令为： exit 或 disable 全局配置模式在特权模式下，执行 configure terminal命令，即可进入全局配置模式。在该模式下，只要输入一条有效的配置命令并回车，内存中正在运行的配置就会立即改变生效。该模式下的配置命令的作用域是全局性的，是对整个交换机起作用。 全局配置模式的命令行状态为： Switch(config)# 在全局配置模式，还可进入接口配置、line配置等子模式。从子模式返回全局配置模式，执行exit命令；从全局配置模式返回特权模式，执行exit命令；若要退出任何配置模式，直接返回特权模式，则要直接end命令或按Ctrl+Z组合键。 接口配置模式在全局配置模式下，执行 interface命令，即进入接口配置模式。在该模式下，可对选定的接口（端口）进行配置，并且只能执行配置交换机端口的命令。 接口配置模式的命令行提示符为： Switch(config-if)# line配置模式在全局配置模式下，执行 line vty 或 line console命令，将进入Line配置模式。该模式主要用于对虚拟终端（vty）和控制台端口进行配置，其配置主要是设置虚拟终端和控制台的用户级登录密码。 Line配置模式的命令行提示符为： Switch(config-line)# 其他的模式在后面使用的时候再进行介绍，参考文档思科交换机的配置模式和命令 交换机初始配置初始的交换机是没有任何密码，也不能远程登录，所以首次配置需要使用console 控制线进行配置 注意：下面所有的密码配置都是 cisco 配置console口密码123456789101112Switch&gt;enable // 进入特权模式Switch#config t // 进入全局配置模式Enter configuration commands, one per line. End with CNTL/Z. Switch(config)#line console 0 // 进入console口配置Switch(config-line)#password cisco // 设置密码Switch(config-line)#login // 启用密码 很重要Switch(config-line)#end // 退出到特权模式，也可以使用 exitSwitch#copy running-config startup-config // 把刚才的配置保存，避免重启后丢失Switch#reload // 重启 验证 配置特权密码123456789// 特权密码有两种设置方法，password 和 secret ，建议使用 secret 设置// secret 设置优先级高，而且密码会使用密文显示Switch(config)#enable ? // 两种密码设置方式 password Assign the privileged level password secret Assign the privileged level secretSwitch(config)#enable secret cisco // 在全局模式下设置// 记得验证然后写入配置 配置远程登录密码（telenet）如果每次配置交换机都需要用配置线在交换机的配置口配置，那估计要疯掉了，所以我们需要配置远程登录。 1234567891011121314// 因为远程配置需要ip地址，所以需要给交换机配置管理ipSwitch(config)#interface vlan 1 // 进入交换机的默认 1 号vlanSwitch(config-if)#ip address 192.168.1.1 255.255.255.0 // 设置管理IPSwitch(config-if)#no shutdown // 启用vlan%LINK-5-CHANGED: Interface Vlan1, changed state to up%LINEPROTO-5-UPDOWN: Line protocol on Interface Vlan1, changed state to upSwitch(config-if)#exit // 退出到全局模式Switch(config)#line vty 0 4 // 配置远程虚拟接口 0 4 指5个接口 0到4Switch(config-line)#password cisco // 设置密码Switch(config-line)#login // 启用密码Switch(config-line)#end // 退出 然后可以通过在一个局域网的电脑进行网络链接，在电脑的 cmd命令行中执行如下命令： telnet 192.168.1.1回车输入密码即可。这里需要注意的是，如果通过telnet登录的话，不仅需要远程telnet登录密码，还需要设置特权密码，不然的话是不能进入特权模式的。","tags":["password","switch"],"categories":["Net"]},{"title":"IP地址相关以及广播和组播的区别","path":"/2017/02/22/broadcast-multicast/","content":"关于IP地址的一些问题IP地址的分类 类型 前缀位 首字节值 网络数 主机数 私有地址范围 A 0 0-127 27-2 224-2 10.0.0.0-10.255.255.255 B 10 128-191 214 216-2 172.16.0.0-172.31.255.255 C 110 192-223 221 28-2 192.168.0.0-192.168.255.255 D 1110 224-239 &#x2F; &#x2F; &#x2F; E 1111 240-255 &#x2F; &#x2F; &#x2F; 备注：A类网络中网络数减去2，原因为0和127开头的地址作为保留地址块，具体会在后面介绍。主机数减2是由于计算时需要除去全’0’和全’1’，原因下面介绍） 特殊用途的地址 CIDR地址块 描述 0.0.0.0&#x2F;8 本网络（仅作为源地址时合法） 10.0.0.0&#x2F;8 专用网络 100.64.0.0&#x2F;10 地址共享 127.0.0.0&#x2F;8 环回 169.254.0.0&#x2F;16 本地链路 172.16.0.0&#x2F;12 专用网络 192.0.0.0&#x2F;24 保留（IANA） 192.0.2.0&#x2F;24 TEST-NET-1，文档和示例 192.88.99.0&#x2F;24 6to4中继 192.168.0.0&#x2F;16 专用网络 198.18.0.0&#x2F;15 网络基准测试 198.51.100.0&#x2F;24 TEST-NET-2，文档和示例 203.0.113.0&#x2F;24 TEST-NET-3，文档和示例 224.0.0.0&#x2F;4 多播（之前的D类网络） 240.0.0.0&#x2F;4 保留（之前的E类网络） 255.255.255.255 广播 一些特殊的IP地址表 网络地址 主机地址 含义 Any 全”0” 网络地址，代表一个网段 Any 全”1” 定向广播地址（特定网段的所有节点） 全”1”即 255.255.255.255 &#x2F; 本地网络广播地址（本网络所有节点） 全”0”即 0.0.0.0 &#x2F; 本网主机地址，通常为默认路由器 127 Any 回送地址 广播和组播在网络上搜索了很多资料，大多解释的并不清楚，而且很多都是互相转载，之间没有差别。不过看到有一篇文章解释的还比较详细。具体摘录如下，参考链接也会在下面列出来。 网络广播一般分为四种形式：受限的广播（特殊的广播）、指向全网的广播、指向子网的广播、指向所有子网的广播，其实后面三种也称为定向广播。 受限的广播 受限的广播地址是255.255.255.255，只发送到本地网络的所有主机，路由器默认不转发目的地址为受限的广播地址的数据报，路由器将此类广播隔离到子网。如ARP请求，就使用的这种地址进行广播。 指向全网的广播 指向全网的广播地址是主机号为全1的地址。如A类网络的广播地址为netid.255.255.255，其中netid为A类网络的网络号。路由器默认都会转发此类指向网络的广播。 指向子网的广播 指的是主机号为全1并且有特定子网号的地址。当然必须知道子网掩码才能判断。 例子：一个B类地址：130.57.0.0，缺省的子网掩码为255.255.0.0，现在对这个B类网址划分子网，如：130.57.1.0&#x2F;24,130.57.2.0&#x2F;24, 这时候如果路由器收到发往 130.57.1.255&#x2F;24的数据报，那么这个地址就指向 130.57.1.0&#x2F;24这个子网的广播地址，这个子网内的所有的机器就能收到。如果是130.57.1.255&#x2F;16 ，那这个地址就不是指向子网的广播地址。 指向所有子网的广播 指向所有子网的广播地址类似于指向单个子网的广播地址。但不同的是指向所有子网的广播地址的子网号及主机号都为全1并且也需要通过子网掩码来判断。我们同样以130.57.0.0这个网络地址为例，如果目的子网掩码为255.255.255.0，那么IP地址130.57.255.255是一个指向所有子网的广播地址。当然，如果网络没有划分子网，这就是一个指向全网的广播。 组播（多播）广播是单台设备向网络中所有主机发送数据，而组播是向指定的一组主机发送主机。IP网络的多播一般通过多播IP地址来实现。多播IP地址就是D类IP地址，即224.0.0.0至239.255.255.255之间的IP地址。Windows2000中的DHCP管理器支持多播IP地址的自动分配。 参考链接： 分类网络 无类别域间路由 广播地址和组（多）播地址 单播、多播（组播）和广播的区别 广播地址详谈！ 理解单播、组播和广播","tags":["broadcast","multicast"],"categories":["Net"]},{"title":"MacOS/RPI 终端使用ss代理","path":"/2017/02/18/ss-in-terminal/","content":"这段时间需要编写程序访问一个网站，不过出现一个问题就是，网站无法在国内正常的访问，我是真的崩溃了。vim下载个插件，网络出问题，emacs整个配置也是问题百出。哎，无语凝噎！！ 所以咱们不能坐以待毙，终端使用ss走起。 测试环境： 操作系统：RaspberryPi MacOS 安装sspip install shadowsocks 编辑ss的配置文件，位置 /etc/shadowsocks.json ，填写代码如下： 注意：&#x2F;etc目录下面没有配置文件无所谓，在home下面找个地方随便建一个就可以 12345678910&#123; &quot;server&quot;:&quot;your_server_ip&quot;, &quot;server_port&quot;:8388, &quot;local_address&quot;: &quot;127.0.0.1&quot;, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;yourpassword&quot;, &quot;timeout&quot;:300, &quot;method&quot;:&quot;aes-256-cfb&quot;, &quot;fast_open&quot;: false&#125; 配置文件中的 method 需要注意，如果需要类似 chacha20的加密方式，那么请看 这里，不过我没有尝试。 运行ss启动： sslocal -c /etc/shadowsocks.json 停止直接快捷键 ctrl-c这里我没有选择后台运行主要是为了查看访问网站时候的出错信息 如果需要后台运行可以使用如下命令： 12sslocal -c /etc/shadowsocks.json -d start # 启动sslocal -c /etc/shadowsocks.json -d stop # 停止 使用终端代理这里主要是由于ss使用的socks5协议终端不支持，所以需要使用协议转换工具。 原文的 polipo 我这里没有配置成功，所以使用另一个软件 proxychains 安装proxychains 1234# Debian/Ubuntu:apt-get install proxychains# Mac OS X:brew install proxychains-ng 配置文件 编辑 ~/.proxychains/proxychains.conf 如果没有直接建一个 12345678910strict_chainproxy_dns remote_dns_subnet 224tcp_read_time_out 15000tcp_connect_time_out 8000localnet 127.0.0.0/255.0.0.0quiet_mode[ProxyList]socks5 127.0.0.1 1080 使用方法 通过proxychains运行命令： proxychains4 curl https://www.twitter.com proxychains4 git push origin master 直接代理bash（个人推荐，省心省力） proxychains4 bash 测试 curl ip.gs 可以查看你现在的ip地址 来检测现在是否代理成功 参考文章链接如下： http://www.jianshu.com/p/8e7d7f57bf59 https://segmentfault.com/a/1190000002589135","tags":["ss","terminal"],"categories":["Raspberry Pi"]},{"title":"树莓派永久禁用无线网卡","path":"/2017/02/16/rasp-disable-wireless-card/","content":"之前树莓派一直用的无线网卡，不过更新系统，安装软件，传输文件都实在太慢了，所以我找了一根网线把树莓派连在路由器上面。这样感觉好多了还是有线稳定啊。因为基本不再用无线，所以就准备把无线网卡禁用掉。 首先想到的就是在图形界面下面找到网络管理器，然后禁用。不过平时都是用的ssh连接的，没用过远程vnc，所以上网搜索了一下。把过程记录下来备用。 树莓派远程vnc连接在树莓派上安装tightvnc服务端终端执行命令： sudo apt-get install tightvncserver安装完成以后执行命令： tightvncserver启动。在启动的过程中软件会让用户输入控制密码，为了安全还是设置一个，还有一个只能观看的密码这个看自己需要，我没有设置。 然后在网络上面下载一个 tightvnc的客户端就可以了，官方网站tightvnc.mac用户可以使用 realvnc vnc连接启动pc上面的tightvnc，在remote host里面输入： 你的树莓派的IP地址:1点击连接即可。 其实上面你输入的 :1 就是控制台号码，如果你留意的话，在tightvncserver启动的时候会出现一个 :1的提示，告诉你这是第几个控制台，当然你可以打开多个控制台。 永久禁用无线网卡搞定vnc以后一查看发现，网络控制管理里面没有禁用网卡的选项。只能看看其他的办法。 这里说一下，网络上使用 sudo ifconfig eth0 down这个命令也可以不过重启以后就失效了，当然也可以做一个开机启动的脚本，这是后话。 这里用的方法是通过配置文件禁用无线网卡驱动。 安装 lshw 命令终端执行命令 sudo apt-get install lshw 执行 lshw 命令，查看无线驱动名称，并加入禁用名单执行命令以后查看 network:0 description: Wireless interface在这个里面找到 driver=brcmfmac 那么这个 brcmfmac 就是驱动名称。 记好你的机器显示的那个名称（我不确定大家是不是都一样），然后在文件/etc/modprobe.d/fbdev-blacklist.conf 的末尾加入一行blacklist brcmfmac ，保存退出。 重启搞定，你会发现你的无线网络已经没有了。当然如果还想使用的话，把那一行代码删掉即可。 参考链接： http://os.51cto.com/art/201108/284130.htm http://shumeipai.nxez.com/2013/09/04/login-rpi-with-vnc.html","tags":["wireless card","vnc"],"categories":["Raspberry Pi"]},{"title":"解决网页粘贴到Excel的数值计算出现#Value!错误","path":"/2016/12/15/excel-value-error/","content":"今天在做excel表格的公式计算时候出现一个#value!的问题，出现的原因就是我把网络上面的数字粘贴到了Excel里面然后用公式计算，结果就死活算不出来。 搜索了网络上面的方法，最终得到了解决，有一些解决方案在这次虽然没有起效，这里也做一下记录： 更改单元格类型，更改为数字，不过大部分不是这种原因 在旁边一个空的单元格中输入数字1，然后复制这个单元格，选中从网页粘贴过来的数字然后选择 选择性粘贴——乘以。 其实主要还是为了把单元格的文本格式改为数字格式 以上的方法都是为了更改单元格的类型，但是如果你是从网络上面粘贴的数据，可能会混入一些看不到的特殊符号，这些符号才是公式无法计算的真正原因。 处理方法就是：先把数据粘贴在word文档里面，然后查看所有字符，这时候就能看到数字旁边的特殊符号，通过查找替换把这些符号去掉即可使用","tags":["excel","office","value!"],"categories":["Windows"]},{"title":"树莓派安装ffmpeg（主要用于you-get下载视频的合并）","path":"/2016/12/01/install-ffmpeg-on-rasp/","content":"买了树莓派本来准备用来下BT，可谁知道国内除了迅雷，其他的下载软件的速度实在没办法看，所以平时下载大部分用you-get，还是挺好用的。 因为文档上面说过需要安装ffmpeg，不过开始我没有安装使用you-get也下载合并成功了，但是我没注意看是否分段下载的，也没注意是哪个网站。昨天下载乐视出现问题了，无法合并，所以只能安装ffmpeg。 2018-06-17更新：由于长时间没有关注you-get项目，这段时间感觉很多网站已经无法下载，不过自己看视频也少了，ffpmeg可以直接用apt-get安装不过可能版本会低一点，一般不影响。 Windows使用ffmpeg可以官网下载Static或Shared版本 具体的教程还是移步到雷霄骅的博客 具体的安装方法大家可以参考以下两个博客： https://alair.cn/logs/raspberry-pi-install-ffmpeg.html http://owenashurst.com/?p=242 因为我是先按照第二个博客中的步骤操作，然后感觉太多又换到第一个博客。所以我也不清楚具体需要安装哪些，这就尴尬了-_-! 不过我还是把我安装的步骤写下来以供参考： 12345678910111213141516171819202122# 先删除已经存在的依赖，然后更新系统重新安装依赖包sudo apt-get remove --purge libmp3lame-dev libtool libssl-dev libaacplus-* libx264 libvpx librtmp ffmpegsudo apt-get update; sudo apt-get upgrade; sudo apt-get install libmp3lame-dev; sudo apt-get install -y libopus-dev; sudo apt-get install autoconf; sudo apt-get install libtool; sudo apt-get install checkinstall; sudo apt-get install libssl-dev# 然后按照上面第一个博客的步骤# 安装h264编码器mkdir ~/srccd ~/srcgit clone git://git.videolan.org/x264cd x264./configure --host=arm-unknown-linux-gnueabi --enable-static --disable-openclmakesudo make install# install ffmpegcd /usr/srcgit clone git://source.ffmpeg.org/ffmpeg.gitcd ffmpegsudo ./configure --arch=armel --target-os=linux --enable-gpl --enable-libx264 --enable-nonfreemake # make 时间稍微长点，可以后台运行 nohup make &amp;sudo make install","tags":["ffmpeg","RPI"],"categories":["Raspberry Pi"]},{"title":"Rime输入法配置——小鹤双拼","path":"/2016/11/26/rime-input-config/","content":"以前一直在用搜狗，不过随着搜狗输入法离输入这条路越来越远，导致不得不寻找一款替代品，然后找到了QQ输入法，其实腾讯的产品还是不错的，起码输入法不会整天提示你系统垃圾太多。 重磅消息：时隔四年，小狼毫更新了，适配Windows10，哈哈 下载地址 四月份的时候windows上面的小狼毫收到更新通知还以为是幻觉-_-! 但是在mac下面腾讯的输入法表现的就差强人意了。所以又踏上了寻找的路。无意中发现了佛振开发的Rime输入法，仔细了解以后发现这才是真正的输入法(大部分输入法都不干正事)。输入快速，而且全平台通用，绝对是使用多个平台的用户福音。 当然缺点（优点？）就是配置问题，因为输入法需要高度定制，所以没有太多的图形化配置界面，不过我觉得能找到这个输入法的估计配置都没问题。-_- 还有一个问题，我没有配置任何词库，之前配置过，一个是麻烦，另一个是用处并不大，对于我来说。词库要靠自己养啊。 官网：http://rime.im/ 参考博客：http://www.dreamxu.com/install-config-squirrel/ 这里建议大家查看上面的博客，他里面的配置更加详细，同时有词库的配置。所以具体的配置我就不写了，因为我的配置不涉及词库很简单。具体配置文件在这里 如果有需要可以直接下载使用。 Ubuntu 系统需要注意，如果使用双拼不仅需要安装rime，还需要安装双拼方案 具体执行如下命令： 12sudo apt-get install ibus-rime # 安装 ibus-rime sudo apt-get insatll librime-data-double-pinyin # 安装双拼方案 具体可以参考： https://www.v2ex.com/t/232790 日志文件的位置记录下，总是忘掉【中州韻】 &#x2F;tmp&#x2F;rime.ibus.*【小狼毫】 %TEMP%\\rime.weasel.*【鼠鬚管】 $TMPDIR&#x2F;rime.squirrel.*各發行版的早期版本 用戶資料夾&#x2F;rime.log","tags":["Rime Input","flypy"],"categories":["Tools"]},{"title":"CentOS命令行自动补全","path":"/2016/10/16/centos-auto-complet/","content":"安装CentOS以后会发现，命令行没有自动补全，以前超好用的Tab键居然不管用了，这就不好玩了。网络上很多方法就是直接安装 bash-completion 可是你执行安装命令以后如果不出意外，结果就是安装不上，提示没有这个安装包。 2018-06-09更新：可以直接使用yum或dnf命令安装 靠谱的解决方法如下： 进入EPEL的wiki页面 找到How can I use these extra packages? 找到相对应的版本这里以CentOS7为例，下载The newest version of ‘epel-release’ for EL7 安装上一步下载的软件包 rpm -ivh rpm_name ,然后执行 yum install bash-completion 记得要root。等待完成即可。 完成，试试 Tab 键的魔法吧！","tags":["centos","autocomplet"],"categories":["Linux"]},{"title":"SSH登录树莓派出现login warning","path":"/2016/10/14/rasp-ssh-error/","content":"写这个博文的时候已经离我遇到这个问题时间比较长了，我记得遇到这个问题的原因是我之前在笔记本上面使用SSH连接过树莓派，然后由于一些原因，我把树莓派重装了一次，接着再次用SSH登录的时候就出现问题了。 SSH login warning: remote host identification has changed 不过是在MAC OS 下面出现的问题，其他的操作系统就不清楚了。不过感觉解决方法都差不多。 解决方法： 12# 删除所有关于树莓派的keyssh-keygen -R [your domain name or IP address] 下次直接连接以后会出现询问是否继续连接，直接输入 yes 即可。","tags":["login warning"],"categories":["Raspberry Pi"]},{"title":"禁止Vim换行自动添加注释符号","path":"/2016/10/08/disable-vim-auto-comment/","content":"在用vim编写程序的时候换行后总会自动添加注释符号，所以就上网搜索如何去掉vim中换行后自动添加的注释符号。 找了很多终于有个靠谱的，地址为：http://stackoverflow.com/a/23326474 总觉得自己遇到的问题都特别奇葩。 具体操作方法就是在vimrc文件中加入如下命令即可 1234567augroup Format-Options autocmd! autocmd BufEnter * setlocal formatoptions-=c formatoptions-=r formatoptions-=o &quot; This can be done as well instead of the previous line, for setting formatoptions as you choose: autocmd BufEnter * setlocal formatoptions=crqn2l1jaugroup END 网络很多直接设置的方法在我这里都没有用，我的vim版本是7.4，而且我两台电脑上都不起作用。有时候找个靠谱的方法太难了。","tags":["Vim","comment"],"categories":["Editor"]},{"title":"Vim安装vundle和markdown插件(Windows)","path":"/2016/10/06/vim-vundle-markdown/","content":"2018-06-24更新：现在编程用VSCode，文章用Org-mode，用pandoc转换为md文件发布 因为这段时间发现了markdown这个好东西，所以就学习一下，而又在练习vim，所有还是希望能在vim里面也使用markdown语法。下面记录一下配置过程。 由于是刚开始入门vim的使用都还是基本的配置，所以我使用的方法就是最原始的，没有插件管理之类。但是发现vim安装插件还是比较麻烦的，所以就搜索插件管理插件的使用，比较拗口吧。下面先安装vundle插件。 Vundle插件安装vim-markdown 地址如下 https://github.com/plasticboy/vim-markdown 不过安装插件之前先安装vundle插件，这样比较方便。当然也可以直接安装。 安装前的准备windows安装vundle的方法可查看这里,如果不想看英文的话可以看看下面我自己备忘的安装教程。Linux和Mac安装比较简单，可以参考官方的文档即可，这里就不多说了。 软件准备 windows版本的git：下载地址 gvim:下载地址 我用的版本是 git 2.8.4 vim 7.4 大家可以作为参考，如果你用的新版本直接下一步安装即可，英文教程中的那个git安装时注意选择在哪里执行git命令，在新版中已默认是windwos的命令行，所以不用更改就可以。 软件完成后测试安装是否成功 打开cmd执行如下命令 git --version vim --version 如果都返回软件的版本号，那么说明安装成功，如果提示无法找到命令，不好意思请手动添加环境变量。 安装curl 具体应该说是添加，因为英文文档里面好像说是git里面已经有了，但是如果vundle想用还需要在让curl在命令行里面跑起来。具体的操作如下： 建立一个curl.cmd的文件内容如下： 12345678910111213@rem Do not use &quot;echo off&quot; to not affect any child calls.@setlocal@rem Get the abolute path to the parent directory, which is assumed to be the@rem Git installation root.@for /F &quot;delims=&quot; %%I in (&quot;%~dp0..&quot;) do @set git_install_root=%%~fI@set PATH=%git_install_root%\\bin;%git_install_root%\\mingw\\bin;%git_install_root%\\mingw64\\bin;%PATH%@rem !!!!!!! For 64bit msysgit, replace &#x27;mingw&#x27; above with &#x27;mingw64&#x27; !!!!!!!@if not exist &quot;%HOME%&quot; @set HOME=%HOMEDRIVE%%HOMEPATH%@if not exist &quot;%HOME%&quot; @set HOME=%USERPROFILE%@curl.exe %* 然后把curl.cmd文件放在git安装目录的相应位置即可默认的话就在C:\\Program Files\\Git\\cmd\\curl.cmd。不过我看有的教程里面介绍是新版的git已经包含了curl，具体我没有验证。 验证curl是否安装成功 打开cmd执行命令：curl --version 安装vundle首先安装完成vim以后查看你的用户目录下是否有：vimfiles目录和_vimrc文件。windows下的用户目录位置在C:\\Users\\yourusername。 vimfiles目录需要保存插件的文件。 _vimrc文件是vim的配置文件。如果没有，请自行建立 然后打开cmd，执行如下命令： 12cd %USERPROFILE%git clone https://github.com/gmarik/Vundle.vim.git %USERPROFILE%/vimfiles/bundle/Vundle.vim 然后你应该在vimfiles目录下看到bundle目录以及里面的Vundle.vim目录，那么就说明到现在你依然走在正确的道路上。 编辑vimrc文件 这个需要转到vundle的文档里面，地址在这里,直接看下面的操作也行。 操作如下：在你的_vimrc文件里面加入如下内容，当然你的_vimrc文件也在你的用户目录下。 123456789101112131415161718192021222324252627282930313233343536373839404142&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot; =&gt; 插件管理vundle配置&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;set nocompatible &quot; be iMproved, requiredfiletype off &quot; required&quot; set the runtime path to include Vundle and initialize&quot; windows系统路径set rtp+=$HOME/vimfiles/bundle/Vundle.vim/call vundle#begin(&#x27;$USERPROFILE/vimfiles/bundle/&#x27;)&quot; 原文件的配置，适合linux、mac&quot; set rtp+=~/.vim/bundle/Vundle.vim&quot; call vundle#begin()&quot; alternatively, pass a path where Vundle should install plugins&quot;call vundle#begin(&#x27;~/some/path/here&#x27;)&quot; let Vundle manage Vundle, requiredPlugin &#x27;VundleVim/Vundle.vim&#x27;&quot; The following are examples of different formats supported.&quot; Keep Plugin commands between vundle#begin/end.&quot; 安装markdown插件Plugin &#x27;godlygeek/tabular&#x27;Plugin &#x27;plasticboy/vim-markdown&#x27;&quot; All of your Plugins must be added before the following linecall vundle#end() &quot; requiredfiletype plugin indent on &quot; required&quot; To ignore plugin indent changes, instead use:&quot;filetype plugin on&quot;&quot; Brief help&quot; :PluginList - lists configured plugins&quot; :PluginInstall - installs plugins; append `!` to update or just :PluginUpdate&quot; :PluginSearch foo - searches for foo; append `!` to refresh local cache&quot; :PluginClean - confirms removal of unused plugins; append `!` to auto-approve removal&quot;&quot; see :h vundle for more details or wiki for FAQ&quot; Put your non-Plugin stuff after this line 这里我把原来的配置文件中的插件全部删掉了，因为那些插件只是例子，并不是每个人都需要。所以在插件安装里面我只写了vim-markdown。 关于vim-markdown的安装方法具体的地址请点击这里 使用命令安装插件这里面根据vundle的文档，可以使用两种方法进行插件安装。 1234567# 第一种打开vim 执行 :PluginInstall# 第二种打开cmd 执行 vim +PluginInstall +qall 我使用的是第二种，在命令行安装，因为我在gvim里面使用第一种方法执行会出错，大家可以试试在cmd终端中的vim里面执行是否可以。这里需要注意cmd命令窗口需要能够执行vim命令 然后新建一个后缀为md的文档，开始享受输入的过程吧。 其他的常用命令以下命令请在cmd中的vim执行： 1234# 更新所有插件:PluginUpdate# 更新特定的插件需要在后面加上相应的名字:PluginUpdate vim-surround vim-fugitive 具体的帮助文档地址：https://github.com/VundleVim/Vundle.vim/blob/master/doc/vundle.txt Chrome查看markdown文件vim编辑md文件有一个不好的地方就是不能及时的查看，这时候就需要Chrome浏览器大显身手了。 安装插件总能解决问题-_- 安装 markdown preview plus 地址：https://chrome.google.com/webstore/detail/markdown-preview-plus/febilkbfcbhebfnokafefeacimjdckgl?hl=zh-CN 如果无法访问可以查看这个网站：http://chrome-extension-downloader.com/ 记得在扩展安装的界面勾选上允许访问文件网址 完成，一切OK!","tags":["Vim","vundle","markdown"],"categories":["Editor"]},{"title":"树莓派下载系列（一）————迅雷远程","path":"/2016/10/01/rasp-thunder/","content":"准备工作树莓派一个（已经安装好raspberrypi系统） 迅雷帐号一个（需要用来远程管理） 安装完成后经过一段时间使用，我的是电信宽带10M，树莓派3，迅雷普通会员，但是没什么卵用，下载依然巨慢，而且十分容易死机。所以大家不要报太大的希望，和电脑里面的迅雷绝对是两码事。 开工参考教程：[树莓派安装迅雷远程下载][1] 里面有些内容不适合新版的系统具体可参考下面的介绍。[1]: http://luyou.xunlei.com/thread-430-1-1.html?_t=1466157534 设定root密码并打开root用户登录限制 教程请查看这里 默认登录名为： pi 默认登录密码为：raspberry （建议等会儿改成简单的，太麻烦） 登入系统以后打开终端，如果ssh的话就只有终端界面，执行命令 123456789101112# 设定root用户密码sudo passwd # 回车以后输入两次root密码（密码不会显示）# 打开root用户登录限制,因为默认是不允许root用户直接登录sudo passwd --unlock root # 但是你会发现新版的树莓派系统这个命令不行了接着看下面# 需要修改ssh的配置文件 这里我用vi 你也可以用 nanosudo vi /etc/ssh/sshd_config# 把PermitRootLogin 的参数更改为 yesPermitRootLogin yes# 重启即可用root用户登录sudo reboot# 修该pi用户密码 根据自己需要sudo passwd pi 挂载u盘 这里需要注意，新版的系统默认已经安装ntfs-3g模块，如果没有请执行 sudo apt-get install ntfs-3g # 新版系统好像已经安装 这里我使用的是手动挂载u盘，一个原因是上面教程中的自动挂载没有用，另一个我的树莓派并不是下载为主，只是偶尔使用。 需要自动挂载可以查看这里不过我并没有验证是否有效，后面验证完毕后会更新这里的内容。 下面介绍手动挂载 12345678# 插入u盘后，查看dev 如果出现sda1 则说明u盘已经识别ls /dev/sd*# 在/mnt 目录下建立挂载目录sudo mkdir /mnt/usb# 挂载sudo mount -t ntfs /dev/sda1 /mnt/usb# 卸载sudo umount /mnt/usb 然后就可在&#x2F;media&#x2F;usb 目录下看到u盘的文件。具体的mount命令使用可查看[mount][m][m]: http://www.runoob.com/linux/linux-comm-mount.html 安装迅雷程序 先把下载的迅雷文件的压缩包解压出来，然后放在u盘里面，文件下载地址：[点我][2][2]: http://luyou.xunlei.com/thread-12545-1-1.html树莓派请下载： Xware1.0.31_armel_v5te_glibc.zip 然后把u盘插入树莓派 1234# 当然先挂载，然后进入u盘目录，我把迅雷的名字更改,纯粹为了方便mv Xware1.0.31_armel_v5te_glibc xunlei# 启动远程下载./portal 接着会出现THE ACTIVE CODE IS: ****** 星号代表你的设备码。然后登录远程迅雷在面板左侧添加设备，把设备码输入即可。 远程迅雷地址 到这里基本就完成了，至于速度就是你的资源热度和网速了。 注：由于迅雷远程会查看文件的版权以及是否非法，所以如果有些无法下载的种子或磁力，建议使用 transmission-cli 下载。","tags":["download","thunder"],"categories":["Raspberry Pi"]},{"title":"解决Win10安装Office 2013出现Error 2203错误","path":"/2016/08/19/office-install-error/","content":"由于不是办公电脑，所以之前一直用的是LibreOffice，金山的WPS也用过，因为广告比较多家人容易误点所以卸载了。Libreoffice的界面虽然没有微软的好看，不过功能一点都不少，而且兼容性作为普通的浏览是没有问题的，促使我更换的原因是启动太慢的问题。 LibreOffice打开文档的速度太慢了，这个原因我估计也不在软件，可能系统的问题比较大，我在Linux里面也用过速度是很快的。当然电脑的配置也是一个重要的原因。不过每次打开的时间确实太长了，而且第一次打开后，第二次接着打开需要的时间几乎一样。后来还是妥协了，换回了微软自己的产品，这里没有再尝试OpenOffice.感兴趣的可以测试一下OpenOffice在Win下面表现如何。 罗嗦的太多了，进入正题，在安装Office2013的过程中出现了Error 2203错误，之前从没遇到过，网络搜索以后发现出现这个问题的还不少。 解决的方法参考下面的博客：博客链接 处理方法：在当前的用户变量中编辑TEMP变量，在最后增加变量值 %USERPROFILE%\\Local Settings\\Temp 即可解决。记得变量之间要用;隔开。","tags":["office2013","error 2203"],"categories":["Windows"]},{"title":"双系统删除Ubuntu（Win7+Ubuntu）","path":"/2016/08/10/delete-ubuntu/","content":"这个也是无奈之举，个人是很喜欢linux系统，不过ATI显卡确实不适合linux，本来机器就老了，散热也不行，加上显卡发热太大，开机不到一个小时就过热自动关机。所以没办法啦，只能删除Ubuntu。 注意：不能直接删除分区，直接删除Win7就进不去了。因为Ubuntu在管理Grub 处理方法： 下载MbrFix.exe，修复MBR要用，可以google搜索一下。也可以在这里下载。 下载完成以后解压缩，将软件放在C盘（系统盘）。 点击 开始——&gt;运行——&gt;输入cmd 回车 打开命令行界面 进入MbrFix.exe所在的文件夹（在命令行界面），运行命令： MbrFix /drive 0 fixmbr /yes 然后Enter回车 此时MBR修复完成。 为了保险，这时候重启操作系统，查看是否直接进入Win7. 如果没问题，那么直接删除Ubuntu分区即可。 删除Ubuntu分区： 以Win7为例： 开始-控制面板-管理工具-存储-磁盘管理 找到Ubuntu的分区删除，重新格式化为NTFS格式即可。 Ubuntu将烟消云散","tags":["Ubuntu","Win7"],"categories":["Linux"]},{"title":"Hexo和Pages博客阅读文章出现404页面","path":"/2016/08/08/hexo-404-error/","content":"这几天在看博客的时候突然发现自己的文章在首页显示，但是点击标题或者继续阅读以后直接出现404页面，第一反应就是被防火墙干扰了，然后赶紧试试代理，发现还是这样，这时候发现问题没那么简单了。 然后用hexo s 测试本地的访问情况，却发现是没有问题的。不过重新部署以后依然404. 回忆出现问题前的改动：*只有一个地方，我把post目录里面文章的文件名改动了(大家千万别学我)*，但是删除缓存以后，使用hexo s 命令以后发现没有问题。这时候才部署到github，不过在pages中显示还是有问题。 尝试过的解决方法 改回原来的名字，失败 删除&lt;!-- more --&gt;，首页成功显示，点击文章标题访问失败 新建一个测试页面成功，排除了hexo本身的问题，看来需要用命令重建文章 用 new 命令重建同名文章，然后把内容复制过去。同样失败。 最后的大招后来想想既然不行，那就全部重新来一遍，把所有的文章全部移出去，删除缓存，重新生成（这时候已经没有文章了），重新部署。部署的时候看到提示删除了所有的文章的网页。我估计这时候就把所有之前出错的网页和链接全部删除了。 然后重新使用命令新建文章，再把内容复制过来，部署测试，OK！！ update:2016-8-14 经测试，直接把md文件放入_post目录内也是可以识别并正常部署到githubPages，所以之前的处理可以把所有的文章全部移出，然后重新生成静态文件后部署，这时候会把之前的一些失效链接删掉，然后把文章移进post目录，生成、部署即可。（理论推测）","tags":["hexo","404"],"categories":["Net"]},{"title":"Chrome以及插件的下载与安装","path":"/2016/08/08/chrome-plugin/","content":"本来一个浏览器的事情，按说用不着大张旗鼓，可是一个浏览器关乎着我们的阅读质量，使用效率。所以还是用一个靠谱的比较放心。当然推荐Chrome，其实如果两年前我会推荐firefox，不过现在已经很长时间没用了。虽然电脑里面的ff一直没有卸载，但是很少打开。 Chrome下载 不要在百度、什么卫士，什么管家里面下载，切记，切记，切记。2018-06-09更新：Chrome官网可以访问了。哈哈！！ 找到chrome吧具体的地址在楼中楼里面,也可以直接访问这个网站Chrome下载 如果下载地址失效，请去贴吧转转。至于Chrome的个人用户和多用户版本的区别好像就是安装位置的不同。 Chrome插件下载2018-06-09更新：建议找方法直接访问Chrome商店下载，下面删除的网站一个访问不了，一个都是广告 简单方法 直接访问插件网 这个网站是我在google上面搜的，感觉不错，但我没有试过。 复杂点儿 看教程如何下载chrome插件离线安装包 上面的方法中那个下载插件的网站我这里太慢，大家可以试试这个chromein 至于获取插件地址或者ID，可以找个google镜像搜一下即可。 什么？镜像不知道怎么找。 看下面 镜像1 镜像2","tags":["chrome","extension"],"categories":["Net"]},{"title":"Vim系统剪切板","path":"/2016/08/08/vim-system-clipboard/","content":"学习了Vim以后感觉挺好用的，现在基本的编辑文本都用Vim来处理。不过也有一些不是太方便的地方：比如和其他程序间的复制、粘贴。这个就比较麻烦,这次就是解决这个问题（也是平常网络上说的很多的Vim的+号剪切板）。由于Windows下面使用的Gvim基本不存在这种问题，下面说一下Mac和Linux。 2018-06-24更新：Mac下直接使用 Command+C Command+V 即可。 下面说的情况全部在终端环境，不习惯用图形化的，个人感觉不方便。 在查看之前请首先在终端执行vim --version，确认vim是否能够使用系统剪切板。如果有出现+xterm_clipboard或+clipboard，则可以直接使用，如果前面是-号，那么请参考下面的方法解决。 Mac在终端安装一个比较全活的、新的Vim。直接执行如下命令： 1brew install vim 提示没有brew命令，落伍了吧，点这里：brew Linux思路是一样的，装一个靠谱的。这里以debian系列为例 1234sudo apt-get install vim-gtk# 或者下面的命令sudo apt-get install vim-gonme# 目的就是安装一个比较全的Vim，也可以自己编译安装，不过感觉麻烦我没试过。 如果以上没能解决问题，请参考http://vim.wikia.com/wiki/Accessing_the_system_clipboard","tags":["Vim","clipboard"],"categories":["Editor"]},{"title":"如何复制Windows命令行中的文本","path":"/2016/08/08/windows-cmd-copy/","content":"有时候需要在复制Windows的命令行中的一些内容，这个时候我们平时使用的CTRL+C命令就不适合了，因为在命令行里面的作用是直接中断。 一个简单的复制方法就是首先用鼠标选中需要复制的文本，然后按Enter按键（也就是回车）即可。","tags":["cmd","copy"],"categories":["Windows"]},{"title":"GithubPages和Hexo建立个人博客","path":"/2016/08/08/github-hexo-blog/","content":"之前一直用现成的博客网站写博客（其实就是记性不好），后来感觉限制太多，而且编辑方式也不是很方便（没有markdown）。也想到建一个自己的网站，不过太麻烦（其实不会弄）。后来发现了githubpages，良心产品，所以就整了一个。 不说废话，第一篇博客还是记录一下自己的配置过程。 环境配置需要安装的软件 brew (Mac，Win下不需要) nodejs git hexo 安装方法建议查看官方网站获取最新的安装建议,这里只记录Mac系统（版本10.13.4）的方法,Windows 可直接在官网下载相应的安装包安装 由于一些原因，npm命令安装模块很慢，如果需要可以使用淘宝npm镜像 brew Mac系统下的包管理器 1/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; nodejs brew install node git brew install git hexo npm install -g hexo-cli hexo建站参考官方文档 建站 方法如下： 12345$ mkdir ghblog$ cd ghblog$ hexo init$ npm install$ hexo s # 启动服务器 访问 http://localhost:4000/ 若出现 Hexo 的博客则建站成功。 网站配置站点配置站点配置请参考官方文档和主题文档 配置 注意：配置文件中配置项目的 : 后要空一格 安装theme建议大家使用Next主题，毕竟博客还是内容重要，等后面大家熟悉以后可以自行创建自己的主题。 Next主题的配置在这里 配置完成后可以执行 hexo s 命令，访问 http://localhost:4000/ 是否起作用。 Github配置Pages项目建立 申请一个Github帐号，并进入 点击页面你的帐号旁边的+号，点击New repository新建一个仓库 仓库名字为yourname.github.io yourname就是你的账户名 Decription是仓库的描述可以随便填 仓库的性质选择Public 勾选 Initialize this repository with a README Add .gitignore 和 Add a licence 可以不用选 最后点击 Cteate repository 即可，现在不用再进行额外的设置了 访问 https://yourname.github.io/ 查看Pages是否成功建立 hexo站点部署配置本地站点完成，Github Pages项目也建立，剩下的就是把两者联系起来，需要修改站点配置文件中的 deploy 选项中内容，具体如下(Windows下相同)： deploy: type: git repository: https://github.com/aoenian/aoenian.github.io.git branch: master 若部署时出错，可查看 部署文档，解决方法是在博客项目目录下安装 hexo-deployer-git 执行命令如下：npm install hexo-deployer-git --save 文章的撰写，站点的具体配置，主题的具体配置，请查看相应的官方文档 参考链接 Mac上搭建基于GitHub的Hexo博客","tags":["github pages","hexo"],"categories":["Net"]},{"path":"/about/index.html","content":"自述虽喜欢计算机，却不精通。 虽喜欢写作，却不能字字珠玑。 虽喜欢阅读，却久未捧书。 重开博客，重拾爱好。 生命不息，奋斗不止。 下面是我的链接，内容不多，大家凑合看 知乎 博客 GitHub Mail"},{"title":"前端笔记","path":"/wiki/frontnotes/index.html","content":"这个项目是我学习前端的笔记，学习的教程是B站的黑马前端pink老师的前端入门教程，地址是：https://www.bilibili.com/video/BV14J4114768/?spm_id_from=333.999.0.0"}]